{"ast":null,"code":"var _jsxFileName = \"C:\\\\MSGS\\\\MSGS\\\\src\\\\main\\\\webapp\\\\src\\\\pages\\\\login\\\\LoginByEail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport styles from \"../signup/Signup.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginByEail = () => {\n  _s();\n  const [email, setEmail] = useState(\"\"); // 이메일\n  const [password, setPassword] = useState(\"\"); // 비밀번호\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handlePasswordChange = e => {\n    const value = e.target.value;\n    setPassword(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // 이메일과 비밀번호 확인 로직 구현\n    if (password === confirmPassword) {\n      // 이메일과 비밀번호가 일치하는 경우 가입 프로세스 진행\n      alert(\"가입 성공!\");\n      // 여기서 가입 프로세스를 진행하면 됩니다.\n    } else {\n      // 이메일과 비밀번호가 일치하지 않는 경우 처리 로직\n      alert(\"비밀번호가 일치하지 않습니다.\");\n    }\n  };\n\n  //----------------------------------------------\n  // 공백 제거\n  const handleEmailChange = e => {\n    const enteredEmail = e.target.value.replace(/\\s/g, \"\").trim();\n    setEmail(enteredEmail);\n  };\n  // 이메일 형식 체크\n  const validateEmail = email => {\n    const regex = /^[A-Za-z0-9]([-_.]?[A-Za-z0-9])*@[A-Za-z0-9]([-_.]?[A-Za-z0-9])*\\.[A-Za-z]{2,3}$/;\n    return regex.test(email);\n  };\n  const emailEventHandler = e => {\n    const enteredEmail = e.target.value.replace(/\\s/g, \"\").trim();\n    handleEmailChange(e);\n    if (validateEmail(enteredEmail)) {\n      // 이메일 형식이 올바른 경우\n      // 필요한 동작을 수행할 수 있습니다\n      console.log(\"올바른 이메일 형식입니다:\", enteredEmail);\n    } else {\n      // 이메일 형식이 올바르지 않은 경우\n      // 유효성 검사 오류를 처리할 수 있습니다\n      console.log(\"올바르지 않은 이메일 형식입니다:\", enteredEmail);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"width-wrapper\"],\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles[\"width-wrapper-form\"],\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"signup-heading\"],\n        children: \"\\uC774\\uBA54\\uC77C\\uB85C \\uB85C\\uADF8\\uC778 \\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"input-group\"],\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles[\"input-label\"],\n            children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"input-field\"],\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: emailEventHandler,\n            placeholder: \"abc@gmail.com\",\n            required: true,\n            className: styles[\"input\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), validateEmail(email) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"input-field-valEmail\"],\n            children: \"\\uC62C\\uBC14\\uB978 \\uC774\\uBA54\\uC77C \\uD615\\uC2DD\\uC785\\uB2C8\\uB2E4:)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"input-field-inValEmail\"],\n            children: \"\\uC774\\uBA54\\uC77C \\uD615\\uC2DD\\uC774 \\uC62C\\uBC14\\uB974\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4:(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"input-group\"],\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles[\"input-label\"],\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"input-field\"],\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: handlePasswordChange,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",\n            required: true,\n            className: styles[\"input\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"submit-button\"],\n        type: \"submit\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginByEail, \"MT1soXlHw5oVJwENzJZGMb+nqNE=\");\n_c = LoginByEail;\nexport default LoginByEail;\nvar _c;\n$RefreshReg$(_c, \"LoginByEail\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","LoginByEail","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handlePasswordChange","e","value","target","handleSubmit","preventDefault","alert","handleEmailChange","enteredEmail","replace","trim","validateEmail","regex","test","emailEventHandler","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","label","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["C:/MSGS/MSGS/src/main/webapp/src/pages/login/LoginByEail.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styles from \"../signup/Signup.module.css\";\r\n\r\nconst LoginByEail = () => {\r\n    const [email, setEmail] = useState(\"\"); // 이메일\r\n    const [password, setPassword] = useState(\"\"); // 비밀번호\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const value = e.target.value;\r\n        setPassword(value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // 이메일과 비밀번호 확인 로직 구현\r\n        if (password === confirmPassword) {\r\n            // 이메일과 비밀번호가 일치하는 경우 가입 프로세스 진행\r\n            alert(\"가입 성공!\");\r\n            // 여기서 가입 프로세스를 진행하면 됩니다.\r\n        } else {\r\n            // 이메일과 비밀번호가 일치하지 않는 경우 처리 로직\r\n            alert(\"비밀번호가 일치하지 않습니다.\");\r\n        }\r\n    };\r\n\r\n    //----------------------------------------------\r\n    // 공백 제거\r\n    const handleEmailChange = (e) => {\r\n        const enteredEmail = e.target.value.replace(/\\s/g, \"\").trim();\r\n        setEmail(enteredEmail);\r\n    };\r\n    // 이메일 형식 체크\r\n    const validateEmail = (email) => {\r\n        const regex =\r\n            /^[A-Za-z0-9]([-_.]?[A-Za-z0-9])*@[A-Za-z0-9]([-_.]?[A-Za-z0-9])*\\.[A-Za-z]{2,3}$/;\r\n        return regex.test(email);\r\n    };\r\n\r\n    const emailEventHandler = (e) => {\r\n        const enteredEmail = e.target.value.replace(/\\s/g, \"\").trim();\r\n        handleEmailChange(e);\r\n\r\n        if (validateEmail(enteredEmail)) {\r\n            // 이메일 형식이 올바른 경우\r\n            // 필요한 동작을 수행할 수 있습니다\r\n            console.log(\"올바른 이메일 형식입니다:\", enteredEmail);\r\n        } else {\r\n            // 이메일 형식이 올바르지 않은 경우\r\n            // 유효성 검사 오류를 처리할 수 있습니다\r\n            console.log(\"올바르지 않은 이메일 형식입니다:\", enteredEmail);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles[\"width-wrapper\"]}>\r\n            <form\r\n                className={styles[\"width-wrapper-form\"]}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <h1 className={styles[\"signup-heading\"]}>\r\n                    이메일로 로그인 하기\r\n                </h1>\r\n\r\n                <div className={styles[\"input-group\"]}>\r\n                    <label className={styles.label}>\r\n                        <h2 className={styles[\"input-label\"]}>이메일 주소</h2>\r\n                    </label>\r\n                    <div className={styles[\"input-field\"]}>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={emailEventHandler}\r\n                            placeholder=\"abc@gmail.com\"\r\n                            required\r\n                            className={styles[\"input\"]}\r\n                        />\r\n                        {validateEmail(email) ? (\r\n                            <div className={styles[\"input-field-valEmail\"]}>\r\n                                올바른 이메일 형식입니다:)\r\n                            </div>\r\n                        ) : (\r\n                            <div className={styles[\"input-field-inValEmail\"]}>\r\n                                이메일 형식이 올바르지 않습니다:(\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n                <div className={styles[\"input-group\"]}>\r\n                    <label className={styles.label}>\r\n                        <h2 className={styles[\"input-label\"]}>비밀번호</h2>\r\n                    </label>\r\n                    <div className={styles[\"input-field\"]}>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={handlePasswordChange}\r\n                            placeholder=\"비밀번호 입력\"\r\n                            required\r\n                            className={styles[\"input\"]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <button className={styles[\"submit-button\"]} type=\"submit\">\r\n                    확인\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginByEail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}