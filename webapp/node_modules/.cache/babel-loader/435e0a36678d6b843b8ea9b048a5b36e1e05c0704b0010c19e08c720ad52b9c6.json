{"ast":null,"code":"var _jsxFileName = \"C:\\\\MSGS\\\\MSGS\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\tripstory\\\\tripstory-create\\\\common\\\\StarRating.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport { FaStar } from 'react-icons/fa';\n// import styles from './StarRating.module.css';\n\n// 별점 별모양 클릭해서 매기는 컴포넌트입니다.\n// 별 모양 클릭한 만큼 점수가 숫자로 보여지게 하는 함수입니다. \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarRating = _ref => {\n  _s();\n  let {\n    rating,\n    setRating\n  } = _ref;\n  const ratingState = rating => {\n    let clickStates = [false, false, false, false, false];\n    for (let i = 0; i < rating; i++) {\n      clickStates[i] = i <= rating ? true : false;\n    }\n    return clickStates;\n  };\n  const initRating = rating > 0 ? ratingState(rating) : [false, false, false, false, false];\n  const [clicked, setClicked] = useState(initRating);\n  const handleStarClick = index => {\n    let clickStates = [...clicked];\n    let starCount = 0;\n    for (let i = 0; i < 5; i++) {\n      clickStates[i] = i <= index ? true : false;\n    }\n    setClicked(clickStates);\n    setRating(index);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: /*#__PURE__*/_jsxDEV(Stars, {\n      children: clicked.map((items, index) => {\n        return /*#__PURE__*/_jsxDEV(FaStar, {\n          size: \"50\",\n          onClick: () => handleStarClick(index),\n          className: clicked[index] && 'yellowStar'\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(StarRating, \"x3DqKH9laqkPhdfaGrLx8y7wWzY=\");\n_c = StarRating;\nexport default StarRating;\nconst Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Wrap;\nconst RatingText = styled.div`\n  color: #787878;\n  font-size: 12px;\n  font-weight: 400;\n`;\nconst Stars = styled.div`\n  display: flex;\n  width : 15rem;\n  gap: 0.2rem;\n  \n\n  & svg {\n    color: rgb(88, 87, 87);\n    cursor: pointer;\n  }\n\n  :hover svg {\n    color: #fcc419;\n  }\n\n  & svg:hover ~ svg {\n    color: gray;\n  }\n\n  .yellowStar {\n    color: #fcc419;\n  }\n`;\n_c3 = Stars;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StarRating\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"Stars\");","map":{"version":3,"names":["React","useEffect","useState","styled","FaStar","jsxDEV","_jsxDEV","StarRating","_ref","_s","rating","setRating","ratingState","clickStates","i","initRating","clicked","setClicked","handleStarClick","index","starCount","Wrap","children","Stars","map","items","size","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","RatingText","_c3","$RefreshReg$"],"sources":["C:/MSGS/MSGS/src/main/webapp/src/components/tripstory/tripstory-create/common/StarRating.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport styled from \"@emotion/styled\";\r\nimport { FaStar } from 'react-icons/fa';\r\n// import styles from './StarRating.module.css';\r\n\r\n// 별점 별모양 클릭해서 매기는 컴포넌트입니다.\r\n// 별 모양 클릭한 만큼 점수가 숫자로 보여지게 하는 함수입니다. \r\n\r\n\r\n\r\nconst StarRating = ({rating, setRating}) => {\r\n\r\n\r\n\r\n  const ratingState = (rating) => {\r\n\r\n    \r\n    let clickStates = [false, false, false, false, false];\r\n\r\n    for (let i = 0; i < rating; i++) {\r\n      clickStates[i] = i <= rating ? true : false;\r\n    }\r\n\r\n    return clickStates;\r\n  };\r\n\r\n\r\n  const initRating = rating > 0 ? ratingState(rating) : [false, false, false, false, false];\r\n\r\n\r\n\r\n  \r\n  const [clicked, setClicked] = useState(initRating);\r\n\r\n  const handleStarClick = (index) => {\r\n\r\n    let clickStates = [...clicked];\r\n    let starCount = 0;\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        clickStates[i] = (i <= index) ? true : false;\r\n    }\r\n    \r\n    setClicked(clickStates);\r\n    setRating(index);\r\n  };\r\n\r\n\r\n  return (\r\n    <Wrap>\r\n      <Stars>\r\n        {clicked.map((items, index) => {\r\n          return (\r\n            <FaStar\r\n              key={index}\r\n              size=\"50\"\r\n              onClick={() => handleStarClick(index)}\r\n              className={clicked[index] && 'yellowStar'}\r\n            />\r\n          );\r\n        })}\r\n      </Stars>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default StarRating;\r\n\r\n  \r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst RatingText = styled.div`\r\n  color: #787878;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Stars = styled.div`\r\n  display: flex;\r\n  width : 15rem;\r\n  gap: 0.2rem;\r\n  \r\n\r\n  & svg {\r\n    color: rgb(88, 87, 87);\r\n    cursor: pointer;\r\n  }\r\n\r\n  :hover svg {\r\n    color: #fcc419;\r\n  }\r\n\r\n  & svg:hover ~ svg {\r\n    color: gray;\r\n  }\r\n\r\n  .yellowStar {\r\n    color: #fcc419;\r\n  }\r\n`\r\n\r\n ;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}