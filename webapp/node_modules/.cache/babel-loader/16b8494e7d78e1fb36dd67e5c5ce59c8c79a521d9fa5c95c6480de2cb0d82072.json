{"ast":null,"code":"var _jsxFileName = \"C:\\\\MSGS\\\\MSGS\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\tripschedule\\\\Map.js\",\n  _data$find,\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { GoogleMap, MarkerF, useJsApiLoader } from \"@react-google-maps/api\";\nimport data from \"./mapData/TripScheduleData\";\n\n/*\r\nconst center = {\r\n\tlat: 37.7189,\r\n\tlng: 128.8321,\r\n}\r\n\r\nexport default function Map() {\r\n\r\n\tconst mapRef = useRef(null)\r\n\r\n\tconst initMap = useCallback(() => {\r\n\t\t\tnew window.google.maps.Map(mapRef.current, {\r\n\t\t\t\tcenter: { lat: 37.7189, lng: 128.8321 },\r\n\t\t\t\tzoom: 12,\r\n\t\t\t\tdisableDefaultUI: true,\r\n\t\t\t})\r\n\t\t}\r\n\t, [mapRef])\r\n\r\n\tuseEffect(() => {\r\n\t\tinitMap()\r\n\t}, [initMap])\r\n\r\n\treturn <div className='map' style={{ width: '100%', height: '100%' }} ref={mapRef}></div>\r\n}\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\n// 일정 order:1에서 시작\nconst center = (_data$find = data.find(item => item.order === 1)) === null || _data$find === void 0 ? void 0 : _data$find.center;\nexport default function Map(_ref) {\n  _s();\n  let {\n    planList,\n    selectedCity,\n    selectedDay\n  } = _ref;\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY // googleMap API personal key - 환경변수로 넘기기\n  });\n\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    console.log(\"여기입니다: \" + selectedCity.areaCode);\n\n    // Create boundary\n    const bounds = new window.google.maps.LatLngBounds(center);\n    // 시작시 zoom level 조정\n    bounds.extend(new window.google.maps.LatLng(center.lat + 0.05, center.lng + 0.05));\n    bounds.extend(new window.google.maps.LatLng(center.lat - 0.05, center.lng - 0.05));\n    map.fitBounds(bounds);\n    setMap(map);\n\n    // Polyline 지도 추가\n    polyline.setMap(map);\n    // GoogleMap 컴포넌트가 로드되고 map 객체가 생성된 후에 호출되어야 함\n  }, []);\n\n  // 구글 MAP 기본 Marker(박물관, 음식점 등) 삭제\n  const myStyles = [{\n    featureType: \"poi\",\n    elementType: \"labels\",\n    stylers: [{\n      visibility: \"ON\"\n    }]\n  }];\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  // 점선 설정\n  const coordinates = data.filter(item => item.type !== \"memo\").map(item => item.center);\n  const lineSymbol = {\n    path: \"M 0,-1 0,1\",\n    // M: 선분 시작\n    // (0, -1): 선분 시작 좌표\n    // (0, 1): 선분 끝 좌표\n    strokeOpacity: 0.7,\n    // 투명도\n    scale: 3 // 두께\n  };\n\n  const polyline = new window.google.maps.Polyline({\n    path: coordinates,\n    strokeColor: '#555555',\n    strokeOpacity: 0,\n    strokeWeight: 0.7,\n    icons: [{\n      icon: lineSymbol,\n      offset: '0',\n      repeat: \"15px\" // 실선과 실선 사이 길이\n    }]\n  });\n\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 12,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    options: {\n      disableDefaultUI: true,\n      // 구글 Map 기본 옵션 삭제\n      styles: myStyles\n      // gestureHandling: \"cooperative\", // ctrl 확대, 축소 안내 문구 삭제 ▶ 작동 X\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [data.filter(item => item.placeOrder !== null).map(item => /*#__PURE__*/_jsxDEV(MarkerF, {\n        // index가 0부터 시작하므로 placeOrder 활용\n        position: item.center // Marker Location\n        ,\n        icon: {\n          url: `${process.env.PUBLIC_URL}/images/mapMarker/marker_num_${item.placeOrder}.png`,\n          scaledSize: new window.google.maps.Size(30, 30),\n          // 이미지 사이즈 조정\n          anchor: new window.google.maps.Point(15, 15) // 마커 이미지 위치 조정에 따른 앵커 포인트 지정\n        }\n      }, item.placeOrder, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)), data.filter(item => item.type === \"dorm\").map(item => /*#__PURE__*/_jsxDEV(MarkerF, {\n        position: item.center,\n        icon: {\n          url: `${process.env.PUBLIC_URL}/images/mapMarker/marker_dorm.png`,\n          scaledSize: new window.google.maps.Size(30, 30) // 이미지 사이즈 조정\n        }\n      }, item.order, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Map, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","GoogleMap","MarkerF","useJsApiLoader","data","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","_data$find","find","item","order","Map","_ref","_s","planList","selectedCity","selectedDay","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAP_API_KEY","map","setMap","useState","onLoad","callback","console","log","areaCode","bounds","window","google","maps","LatLngBounds","extend","LatLng","lat","lng","fitBounds","polyline","myStyles","featureType","elementType","stylers","visibility","onUnmount","coordinates","filter","type","lineSymbol","path","strokeOpacity","scale","Polyline","strokeColor","strokeWeight","icons","icon","offset","repeat","mapContainerStyle","zoom","options","disableDefaultUI","styles","children","placeOrder","position","url","PUBLIC_URL","scaledSize","Size","anchor","Point","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/MSGS/MSGS/src/main/webapp/src/components/tripschedule/Map.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { GoogleMap, MarkerF, useJsApiLoader } from \"@react-google-maps/api\";\r\n\r\nimport data from \"./mapData/TripScheduleData\";\r\n\r\n/*\r\nconst center = {\r\n\tlat: 37.7189,\r\n\tlng: 128.8321,\r\n}\r\n\r\nexport default function Map() {\r\n\r\n\tconst mapRef = useRef(null)\r\n\r\n\tconst initMap = useCallback(() => {\r\n\t\t\tnew window.google.maps.Map(mapRef.current, {\r\n\t\t\t\tcenter: { lat: 37.7189, lng: 128.8321 },\r\n\t\t\t\tzoom: 12,\r\n\t\t\t\tdisableDefaultUI: true,\r\n\t\t\t})\r\n\t\t}\r\n\t, [mapRef])\r\n\r\n\tuseEffect(() => {\r\n\t\tinitMap()\r\n\t}, [initMap])\r\n\r\n\treturn <div className='map' style={{ width: '100%', height: '100%' }} ref={mapRef}></div>\r\n}\r\n*/\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\n// 일정 order:1에서 시작\r\nconst center = data.find((item) => item.order === 1)?.center;\r\n\r\nexport default function Map({ planList, selectedCity, selectedDay }) {\r\n  const { isLoaded } = useJsApiLoader({\r\n\t\tid: 'google-map-script',\r\n\t\tgoogleMapsApiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY, // googleMap API personal key - 환경변수로 넘기기\r\n\t})\r\n\r\n  const [map, setMap] = React.useState(null);\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    console.log(\"여기입니다: \" + selectedCity.areaCode);\r\n\r\n    // Create boundary\r\n    const bounds = new window.google.maps.LatLngBounds(center);\r\n    // 시작시 zoom level 조정\r\n    bounds.extend(\r\n      new window.google.maps.LatLng(center.lat + 0.05, center.lng + 0.05)\r\n    );\r\n    bounds.extend(\r\n      new window.google.maps.LatLng(center.lat - 0.05, center.lng - 0.05)\r\n    );\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n\r\n    // Polyline 지도 추가\r\n    polyline.setMap(map);\r\n    // GoogleMap 컴포넌트가 로드되고 map 객체가 생성된 후에 호출되어야 함\r\n  }, []);\r\n\r\n  // 구글 MAP 기본 Marker(박물관, 음식점 등) 삭제\r\n  const myStyles = [\r\n    {\r\n      featureType: \"poi\",\r\n      elementType: \"labels\",\r\n      stylers: [{ visibility: \"ON\" }],\r\n    },\r\n  ];\r\n\r\n  const onUnmount = useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  // 점선 설정\r\n  const coordinates = data\r\n    .filter((item) => item.type !== \"memo\")\r\n    .map((item) => item.center);\r\n\r\n  const lineSymbol = {\r\n    path: \"M 0,-1 0,1\",\r\n    // M: 선분 시작\r\n    // (0, -1): 선분 시작 좌표\r\n    // (0, 1): 선분 끝 좌표\r\n    strokeOpacity: 0.7, // 투명도\r\n    scale: 3, // 두께\r\n  };\r\n\r\n  const polyline = new window.google.maps.Polyline({\r\n\t\tpath: coordinates,\r\n\t\tstrokeColor: '#555555',\r\n    strokeOpacity: 0,\r\n    strokeWeight: 0.7,\r\n\r\n\t\ticons: [\r\n\t\t\t{\r\n\t\t\t\ticon: lineSymbol,\r\n\t\t\t\toffset: '0',\r\n\t\t\t\trepeat: \"15px\", // 실선과 실선 사이 길이\r\n\t\t\t},\r\n\t\t],\r\n\t})\r\n\r\n  return isLoaded ? (\r\n    \r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={12}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      options={{\r\n        disableDefaultUI: true, // 구글 Map 기본 옵션 삭제\r\n        styles: myStyles,\r\n        // gestureHandling: \"cooperative\", // ctrl 확대, 축소 안내 문구 삭제 ▶ 작동 X\r\n      }}\r\n    >\r\n      {/* Child components, such as markers, info windows, etc. */}\r\n      <>\r\n        {data\r\n          .filter((item) => item.placeOrder !== null)\r\n          .map((item) => (\r\n            <MarkerF\r\n              key={item.placeOrder} // index가 0부터 시작하므로 placeOrder 활용\r\n              position={item.center} // Marker Location\r\n              icon={{\r\n                url: `${process.env.PUBLIC_URL}/images/mapMarker/marker_num_${item.placeOrder}.png`,\r\n                scaledSize: new window.google.maps.Size(30, 30), // 이미지 사이즈 조정\r\n                anchor: new window.google.maps.Point(15, 15), // 마커 이미지 위치 조정에 따른 앵커 포인트 지정\r\n              }}\r\n            />\r\n          ))}\r\n        {data\r\n          .filter((item) => item.type === \"dorm\")\r\n          .map((item) => (\r\n            <MarkerF\r\n              key={item.order}\r\n              position={item.center}\r\n              icon={{\r\n                url: `${process.env.PUBLIC_URL}/images/mapMarker/marker_dorm.png`,\r\n                scaledSize: new window.google.maps.Size(30, 30), // 이미지 사이즈 조정\r\n              }}\r\n            />\r\n          ))}\r\n      </>\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}