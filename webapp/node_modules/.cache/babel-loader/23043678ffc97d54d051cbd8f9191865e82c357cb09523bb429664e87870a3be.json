{"ast":null,"code":"var _jsxFileName = \"C:\\\\MSGS\\\\MSGS\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\tripstory\\\\tripstory-create\\\\common\\\\StarRatingRead.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport { FaStar } from 'react-icons/fa';\n// import styles from './StarRating.module.css';\n\n// 별점 별모양 클릭해서 매기는 컴포넌트입니다.\n// 별 모양 클릭한 만큼 점수가 숫자로 보여지게 하는 함수입니다. \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarRating = _ref => {\n  _s();\n  let {\n    rating\n  } = _ref;\n  const ratingState = rating => {\n    let clickStates = [false, false, false, false, false];\n    for (let i = 0; i < rating; i++) {\n      clickStates[i] = i <= rating ? true : false;\n    }\n    return clickStates;\n  };\n  const [clicked, setClicked] = useState([]);\n  useEffect(() => {\n    setClicked(ratingState(rating));\n  }, [rating]);\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: /*#__PURE__*/_jsxDEV(Stars, {\n      children: clicked.map((items, index) => {\n        return /*#__PURE__*/_jsxDEV(FaStar, {\n          size: \"50\",\n          className: clicked[index] && 'yellowStar'\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(StarRating, \"6XUh/xubyIS4BtXF4E1AZQbH3NA=\");\n_c = StarRating;\nexport default StarRating;\nconst Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Wrap;\nconst Stars = styled.div`\n  display: flex;\n  width : 12rem;\n  gap: 0.2rem;\n  \n\n  & svg {\n    color: rgb(88, 87, 87);\n    cursor: pointer;\n  }\n\n  .yellowStar {\n    color: #fcc419;\n  }\n`;\n_c3 = Stars;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StarRating\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"Stars\");","map":{"version":3,"names":["React","useEffect","useState","styled","FaStar","jsxDEV","_jsxDEV","StarRating","_ref","_s","rating","ratingState","clickStates","i","clicked","setClicked","Wrap","children","Stars","map","items","index","size","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","_c3","$RefreshReg$"],"sources":["C:/MSGS/MSGS/src/main/webapp/src/components/tripstory/tripstory-create/common/StarRatingRead.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport styled from \"@emotion/styled\";\r\nimport { FaStar } from 'react-icons/fa';\r\n// import styles from './StarRating.module.css';\r\n\r\n// 별점 별모양 클릭해서 매기는 컴포넌트입니다.\r\n// 별 모양 클릭한 만큼 점수가 숫자로 보여지게 하는 함수입니다. \r\nconst StarRating = ({rating}) => {\r\n\r\n  \r\n  const ratingState = (rating) => {\r\n    \r\n    let clickStates = [false, false, false, false, false];\r\n\r\n    for (let i = 0; i < rating; i++) {\r\n      clickStates[i] = i <= rating ? true : false;\r\n    }\r\n\r\n    return clickStates;\r\n  };\r\n\r\n  const [clicked, setClicked] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setClicked(ratingState(rating));\r\n}, [rating])\r\n\r\n\r\n\r\n  return (\r\n    <Wrap>\r\n      <Stars>\r\n        {clicked.map((items, index) => {\r\n          return (\r\n            <FaStar\r\n              key={index}\r\n              size=\"50\"\r\n              className={clicked[index] && 'yellowStar'}\r\n            />\r\n          );\r\n        })}\r\n      </Stars>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default StarRating;\r\n\r\n  \r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n\r\n\r\nconst Stars = styled.div`\r\n  display: flex;\r\n  width : 12rem;\r\n  gap: 0.2rem;\r\n  \r\n\r\n  & svg {\r\n    color: rgb(88, 87, 87);\r\n    cursor: pointer;\r\n  }\r\n\r\n  .yellowStar {\r\n    color: #fcc419;\r\n  }\r\n`\r\n\r\n ;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,MAAM,QAAQ,gBAAgB;AACvC;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAF,IAAA;EAG1B,MAAMG,WAAW,GAAID,MAAM,IAAK;IAE9B,IAAIE,WAAW,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAErD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,EAAEG,CAAC,EAAE,EAAE;MAC/BD,WAAW,CAACC,CAAC,CAAC,GAAGA,CAAC,IAAIH,MAAM,GAAG,IAAI,GAAG,KAAK;IAC7C;IAEA,OAAOE,WAAW;EACpB,CAAC;EAED,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdc,UAAU,CAACJ,WAAW,CAACD,MAAM,CAAC,CAAC;EACnC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAIV,oBACEJ,OAAA,CAACU,IAAI;IAAAC,QAAA,eACHX,OAAA,CAACY,KAAK;MAAAD,QAAA,EACHH,OAAO,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAC7B,oBACEf,OAAA,CAACF,MAAM;UAELkB,IAAI,EAAC,IAAI;UACTC,SAAS,EAAET,OAAO,CAACO,KAAK,CAAC,IAAI;QAAa,GAFrCA,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGX,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX,CAAC;AAAAlB,EAAA,CArCKF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAyChB,eAAeA,UAAU;AAIzB,MAAMS,IAAI,GAAGb,MAAM,CAAC0B,GAAI;AACxB;AACA;AACA,CAAC;AAACC,GAAA,GAHId,IAAI;AAOV,MAAME,KAAK,GAAGf,MAAM,CAAC0B,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAECE,GAAA,GAhBIb,KAAK;AAAA,IAAAU,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}