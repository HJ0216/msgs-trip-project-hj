[{"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\index.js":"1","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\App.js":"2","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\reportWebVitals.js":"3","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\Flight.js":"4","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\TripSchedule.js":"5","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\mypage\\MyPageMain.js":"6","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\login\\LoginMain.js":"7","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\mypage\\ProfileUpdate.js":"8","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\Main.js":"9","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\Signup1.js":"10","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\SignupAgreement.js":"11","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\NickName.js":"12","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\NonMemberResSearch.js":"13","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\RegisterPhone.js":"14","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\SignupFindID.js":"15","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\AuthenticationNumber.js":"16","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\TempSmsCheck.js":"17","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempSignUp.js":"18","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempUserCRUD.js":"19","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-list\\FlightWithData.js":"20","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule2\\TripSchedule2.js":"21","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\TripLocDetail.js":"22","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\bus\\Bus.js":"23","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-create\\TripStoryCreate.js":"24","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-detail\\TripStoryDetail.js":"25","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\footer\\Footer.js":"26","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripplace\\ReviewImgModal.js":"27","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\header\\Header.js":"28","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\KaKaoCallback.js":"29","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\LoginSocial.js":"30","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-list\\TripStoryList.js":"31","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\logout\\LogoutModal.js":"32","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\TripScheduleAddModal.js":"33","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\restaurant\\restaurant-data\\RestaurantData.js":"34","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\TripSchedule1.js":"35","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\DayPlan.js":"36","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\Map.js":"37","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\SelectedPlaceList.js":"38","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\StickyBanner.js":"39","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\DayPlanEditMode.js":"40","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\JoinMember.js":"41","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\NickNameButton.js":"42","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-search\\FlightAroundTrip.js":"43","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-create\\WriteForm.js":"44","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-list\\FlightList.js":"45","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-search\\ToFlightSelect.js":"46","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempUserList.js":"47","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempUserDelete.js":"48","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempUserUpdate.js":"49","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocTop.js":"50","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocSubSection.js":"51","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocContainerEvent.js":"52","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocMap.js":"53","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocReview.js":"54","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocRelated.js":"55","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\common\\StickyBanner.js":"56","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-search\\FromFlightSelect.js":"57","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\trip-list\\RcmdTrips.js":"58","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-search\\BoardingInfoSelect.js":"59","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\Events.js":"60","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\IconMenu.js":"61","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule2\\Calendar.js":"62","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-recommend\\BestReviews.js":"63","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-recommend\\Best6.js":"64","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-list\\FlightItem.js":"65","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\MainMenu.js":"66","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\GoogleButton.js":"67","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\restaurant\\RestaurantItem.js":"68","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-detail\\TripStoryDetailComment.js":"69","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\NaverLogin_social.js":"70","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\logout\\KakaoLogout_social.js":"71","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\KakaoLogin_social.js":"72","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-create\\DateSummary.js":"73","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-list\\TripStoryItem.js":"74","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\mypage\\mypage-schedule\\MySchedule.js":"75","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\mypage\\mypage-story\\MyStory.js":"76","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\SelectedArea.js":"77","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\mypage\\mypage-review\\MyReview.js":"78","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\TripScheduleAddPlace.js":"79","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-data\\TripStoryData.js":"80","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-data\\TripStoryDetailData.js":"81","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\CitiesData.js":"82","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\SearchBar.js":"83","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\FamousCity.js":"84","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\common\\Map.js":"85","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-spot\\SpotItemList.js":"86","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-day\\DayBtn.js":"87","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\ScheduleLineAndBlock.js":"88","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\EditModeBlock.js":"89","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\SelectedPlace.js":"90","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocGoogleMap.js":"91","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\ReviewDummyData copy.js":"92","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\ReviewDummyData.js":"93","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\ReviewItem.js":"94","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\common\\StickyBannerPlan.js":"95","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocRelatedItem.js":"96","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\restaurant\\RestaurantItemThumbnail.js":"97","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\mapData\\TripScheduleData.js":"98","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-list\\FlightSelectCard.js":"99","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\EventItem.js":"100","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\trip-list\\RcmdTripItem.js":"101","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-recommend\\BestReviewItem.js":"102","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\IconItem.js":"103","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-data\\FlightItemsData.js":"104","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-data\\AirportData.js":"105","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\common\\StarRating.js":"106","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-upload\\UploadPhoto.js":"107","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\TripScheduleAddPlaceItem.js":"108","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-list\\TripStoryItemThumbnail.js":"109","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-recommend\\Best6Item.js":"110","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\MainMenuItem.js":"111","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\SelectedItem.js":"112","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal-data\\TripScheduleAddPlaceData.js":"113","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal-data\\TripScheduleAddStayData.js":"114","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-day\\DayModal.js":"115","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\CityItem.js":"116","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-spot\\SpotItem.js":"117","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\ReviewImg.js":"118","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-upload\\UploadPhotoList.js":"119","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-upload\\UploadStoryBtn.js":"120","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\common\\CompleteBtn.js":"121","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-spot\\SpotModal.js":"122","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\common\\StarRatingRead.js":"123","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\store.js":"124","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\login\\LoginByEail.js":"125","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\stay\\stay-detail\\StayDetail.js":"126","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\stay\\stay-list\\StayList.js":"127","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-data\\TripStoryReducer.js":"128","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\LoginByEmailButton.js":"129","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\logout\\LogoutAll.js":"130","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\NaverLogin.js":"131","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule2\\Calendar2.js":"132","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\common\\Loading.js":"133","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\bus\\bus-search\\BusSchedule.js":"134","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\stay\\stay-list\\StayItem.js":"135"},{"size":892,"mtime":1687504915801,"results":"136","hashOfConfig":"137"},{"size":6330,"mtime":1687504915789,"results":"138","hashOfConfig":"137"},{"size":375,"mtime":1687355970725,"results":"139","hashOfConfig":"137"},{"size":8559,"mtime":1687420525324,"results":"140","hashOfConfig":"137"},{"size":11062,"mtime":1687571996546,"results":"141","hashOfConfig":"137"},{"size":5665,"mtime":1687355970693,"results":"142","hashOfConfig":"137"},{"size":1591,"mtime":1687504915806,"results":"143","hashOfConfig":"137"},{"size":3679,"mtime":1687355970693,"results":"144","hashOfConfig":"137"},{"size":675,"mtime":1687355970678,"results":"145","hashOfConfig":"137"},{"size":9441,"mtime":1687488590880,"results":"146","hashOfConfig":"137"},{"size":7896,"mtime":1687444187268,"results":"147","hashOfConfig":"137"},{"size":2584,"mtime":1687518908145,"results":"148","hashOfConfig":"137"},{"size":3096,"mtime":1687355970693,"results":"149","hashOfConfig":"137"},{"size":9859,"mtime":1687591168047,"results":"150","hashOfConfig":"137"},{"size":4055,"mtime":1687355970693,"results":"151","hashOfConfig":"137"},{"size":3218,"mtime":1687355970693,"results":"152","hashOfConfig":"137"},{"size":1675,"mtime":1687355970693,"results":"153","hashOfConfig":"137"},{"size":3306,"mtime":1687355970693,"results":"154","hashOfConfig":"137"},{"size":1170,"mtime":1687355970693,"results":"155","hashOfConfig":"137"},{"size":1402,"mtime":1687420525326,"results":"156","hashOfConfig":"137"},{"size":1496,"mtime":1687504915813,"results":"157","hashOfConfig":"137"},{"size":659,"mtime":1687355970709,"results":"158","hashOfConfig":"137"},{"size":7116,"mtime":1687504915803,"results":"159","hashOfConfig":"137"},{"size":2517,"mtime":1687504915815,"results":"160","hashOfConfig":"137"},{"size":989,"mtime":1687355970725,"results":"161","hashOfConfig":"137"},{"size":1515,"mtime":1687355970646,"results":"162","hashOfConfig":"137"},{"size":1806,"mtime":1687355970646,"results":"163","hashOfConfig":"137"},{"size":1465,"mtime":1687504915791,"results":"164","hashOfConfig":"137"},{"size":4083,"mtime":1687518188019,"results":"165","hashOfConfig":"137"},{"size":682,"mtime":1687504915795,"results":"166","hashOfConfig":"137"},{"size":1196,"mtime":1687355970725,"results":"167","hashOfConfig":"137"},{"size":1760,"mtime":1687504915797,"results":"168","hashOfConfig":"137"},{"size":6249,"mtime":1687420525318,"results":"169","hashOfConfig":"137"},{"size":2910,"mtime":1687504915808,"results":"170","hashOfConfig":"137"},{"size":1799,"mtime":1687420525337,"results":"171","hashOfConfig":"137"},{"size":2554,"mtime":1687420525311,"results":"172","hashOfConfig":"137"},{"size":7047,"mtime":1687579973474,"results":"173","hashOfConfig":"137"},{"size":3838,"mtime":1687570880919,"results":"174","hashOfConfig":"137"},{"size":461,"mtime":1687355970678,"results":"175","hashOfConfig":"137"},{"size":4793,"mtime":1687420525312,"results":"176","hashOfConfig":"137"},{"size":386,"mtime":1687504915793,"results":"177","hashOfConfig":"137"},{"size":641,"mtime":1687355970693,"results":"178","hashOfConfig":"137"},{"size":4019,"mtime":1687504915805,"results":"179","hashOfConfig":"137"},{"size":1714,"mtime":1687504915815,"results":"180","hashOfConfig":"137"},{"size":1567,"mtime":1687420525326,"results":"181","hashOfConfig":"137"},{"size":1441,"mtime":1687420525330,"results":"182","hashOfConfig":"137"},{"size":1293,"mtime":1687355970693,"results":"183","hashOfConfig":"137"},{"size":3584,"mtime":1687355970693,"results":"184","hashOfConfig":"137"},{"size":3906,"mtime":1687355970693,"results":"185","hashOfConfig":"137"},{"size":4789,"mtime":1687355970709,"results":"186","hashOfConfig":"137"},{"size":1686,"mtime":1687355970693,"results":"187","hashOfConfig":"137"},{"size":1333,"mtime":1687355970693,"results":"188","hashOfConfig":"137"},{"size":7420,"mtime":1687355970693,"results":"189","hashOfConfig":"137"},{"size":4548,"mtime":1687355970693,"results":"190","hashOfConfig":"137"},{"size":900,"mtime":1687355970693,"results":"191","hashOfConfig":"137"},{"size":995,"mtime":1687355970646,"results":"192","hashOfConfig":"137"},{"size":1511,"mtime":1687504915806,"results":"193","hashOfConfig":"137"},{"size":683,"mtime":1687355970678,"results":"194","hashOfConfig":"137"},{"size":4271,"mtime":1687355970678,"results":"195","hashOfConfig":"137"},{"size":1597,"mtime":1687504915807,"results":"196","hashOfConfig":"137"},{"size":834,"mtime":1687355970678,"results":"197","hashOfConfig":"137"},{"size":2438,"mtime":1687504915811,"results":"198","hashOfConfig":"137"},{"size":1624,"mtime":1687355970678,"results":"199","hashOfConfig":"137"},{"size":729,"mtime":1687355970678,"results":"200","hashOfConfig":"137"},{"size":1879,"mtime":1687420525325,"results":"201","hashOfConfig":"137"},{"size":947,"mtime":1687355970693,"results":"202","hashOfConfig":"137"},{"size":1302,"mtime":1687504915793,"results":"203","hashOfConfig":"137"},{"size":2046,"mtime":1687355970693,"results":"204","hashOfConfig":"137"},{"size":4266,"mtime":1687355970725,"results":"205","hashOfConfig":"137"},{"size":1358,"mtime":1687504915796,"results":"206","hashOfConfig":"137"},{"size":1831,"mtime":1687355970646,"results":"207","hashOfConfig":"137"},{"size":3414,"mtime":1687504915794,"results":"208","hashOfConfig":"137"},{"size":2205,"mtime":1687504915815,"results":"209","hashOfConfig":"137"},{"size":2190,"mtime":1687355970725,"results":"210","hashOfConfig":"137"},{"size":3175,"mtime":1687355970646,"results":"211","hashOfConfig":"137"},{"size":1602,"mtime":1687355970646,"results":"212","hashOfConfig":"137"},{"size":1368,"mtime":1687355970662,"results":"213","hashOfConfig":"137"},{"size":2234,"mtime":1687355970646,"results":"214","hashOfConfig":"137"},{"size":984,"mtime":1687355970662,"results":"215","hashOfConfig":"137"},{"size":6405,"mtime":1687355970725,"results":"216","hashOfConfig":"137"},{"size":2869,"mtime":1687504915816,"results":"217","hashOfConfig":"137"},{"size":3693,"mtime":1687420525336,"results":"218","hashOfConfig":"137"},{"size":742,"mtime":1687355970709,"results":"219","hashOfConfig":"137"},{"size":660,"mtime":1687420525336,"results":"220","hashOfConfig":"137"},{"size":606,"mtime":1687355970662,"results":"221","hashOfConfig":"137"},{"size":504,"mtime":1687504915800,"results":"222","hashOfConfig":"137"},{"size":1093,"mtime":1687504915798,"results":"223","hashOfConfig":"137"},{"size":2700,"mtime":1687420525314,"results":"224","hashOfConfig":"137"},{"size":1372,"mtime":1687420525313,"results":"225","hashOfConfig":"137"},{"size":1927,"mtime":1687420525315,"results":"226","hashOfConfig":"137"},{"size":2440,"mtime":1687355970693,"results":"227","hashOfConfig":"137"},{"size":5770,"mtime":1687355970709,"results":"228","hashOfConfig":"137"},{"size":6120,"mtime":1687355970709,"results":"229","hashOfConfig":"137"},{"size":4918,"mtime":1687355970709,"results":"230","hashOfConfig":"137"},{"size":1399,"mtime":1687355970646,"results":"231","hashOfConfig":"137"},{"size":1118,"mtime":1687355970693,"results":"232","hashOfConfig":"137"},{"size":1352,"mtime":1687355970693,"results":"233","hashOfConfig":"137"},{"size":1231,"mtime":1687355970662,"results":"234","hashOfConfig":"137"},{"size":1529,"mtime":1687355970678,"results":"235","hashOfConfig":"137"},{"size":431,"mtime":1687420525330,"results":"236","hashOfConfig":"137"},{"size":665,"mtime":1687355970678,"results":"237","hashOfConfig":"137"},{"size":858,"mtime":1687355970678,"results":"238","hashOfConfig":"137"},{"size":480,"mtime":1687355970678,"results":"239","hashOfConfig":"137"},{"size":2256,"mtime":1687355970678,"results":"240","hashOfConfig":"137"},{"size":811,"mtime":1687355970678,"results":"241","hashOfConfig":"137"},{"size":2158,"mtime":1687504915798,"results":"242","hashOfConfig":"137"},{"size":3071,"mtime":1687504915801,"results":"243","hashOfConfig":"137"},{"size":1804,"mtime":1687355970662,"results":"244","hashOfConfig":"137"},{"size":1451,"mtime":1687355970725,"results":"245","hashOfConfig":"137"},{"size":369,"mtime":1687355970678,"results":"246","hashOfConfig":"137"},{"size":490,"mtime":1687355970693,"results":"247","hashOfConfig":"137"},{"size":679,"mtime":1687355970662,"results":"248","hashOfConfig":"137"},{"size":1714,"mtime":1687355970662,"results":"249","hashOfConfig":"137"},{"size":1095,"mtime":1687355970662,"results":"250","hashOfConfig":"137"},{"size":1648,"mtime":1687420525320,"results":"251","hashOfConfig":"137"},{"size":782,"mtime":1687355970709,"results":"252","hashOfConfig":"137"},{"size":5149,"mtime":1687420525321,"results":"253","hashOfConfig":"137"},{"size":1004,"mtime":1687355970709,"results":"254","hashOfConfig":"137"},{"size":414,"mtime":1687504915801,"results":"255","hashOfConfig":"137"},{"size":436,"mtime":1687355970678,"results":"256","hashOfConfig":"137"},{"size":365,"mtime":1687355970662,"results":"257","hashOfConfig":"137"},{"size":2694,"mtime":1687504915800,"results":"258","hashOfConfig":"137"},{"size":1394,"mtime":1687420525319,"results":"259","hashOfConfig":"137"},{"size":283,"mtime":1687504915817,"results":"260","hashOfConfig":"137"},{"size":4598,"mtime":1687504915806,"results":"261","hashOfConfig":"137"},{"size":4257,"mtime":1687504915809,"results":"262","hashOfConfig":"137"},{"size":2765,"mtime":1687504915810,"results":"263","hashOfConfig":"137"},{"size":880,"mtime":1687504915817,"results":"264","hashOfConfig":"137"},{"size":830,"mtime":1687504915795,"results":"265","hashOfConfig":"137"},{"size":638,"mtime":1687504915796,"results":"266","hashOfConfig":"137"},{"size":1395,"mtime":1687504915796,"results":"267","hashOfConfig":"137"},{"size":3008,"mtime":1687504915812,"results":"268","hashOfConfig":"137"},{"size":384,"mtime":1687504915791,"results":"269","hashOfConfig":"137"},{"size":4620,"mtime":1687504915804,"results":"270","hashOfConfig":"137"},{"size":1969,"mtime":1687504915810,"results":"271","hashOfConfig":"137"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},"1c3o0zj",{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"275"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"275"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"275"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"275"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"275"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"275"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"275"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"275"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"275"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"275"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"275"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"275"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"275"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"275"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"275"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"275"},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"275"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"275"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"275"},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"275"},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"275"},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"275"},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"275"},{"filePath":"429","messages":"430","suppressedMessages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"456","messages":"457","suppressedMessages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"275"},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"275"},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"275"},{"filePath":"474","messages":"475","suppressedMessages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"275"},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"275"},{"filePath":"482","messages":"483","suppressedMessages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"485","messages":"486","suppressedMessages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"488","messages":"489","suppressedMessages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"494","messages":"495","suppressedMessages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"275"},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"275"},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"275"},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"331"},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"275"},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"275"},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"275"},{"filePath":"534","messages":"535","suppressedMessages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"275"},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"275"},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"275"},{"filePath":"561","messages":"562","suppressedMessages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"275"},{"filePath":"565","messages":"566","suppressedMessages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"275"},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"275"},{"filePath":"573","messages":"574","suppressedMessages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"275"},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"583","messages":"584","suppressedMessages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"586","messages":"587","suppressedMessages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"275"},{"filePath":"590","messages":"591","suppressedMessages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"275"},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"275"},{"filePath":"619","messages":"620","suppressedMessages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"622","messages":"623","suppressedMessages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"275"},{"filePath":"626","messages":"627","suppressedMessages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"275"},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"275"},{"filePath":"640","messages":"641","suppressedMessages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"275"},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"275"},{"filePath":"648","messages":"649","suppressedMessages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"651","messages":"652","suppressedMessages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"275"},{"filePath":"655","messages":"656","suppressedMessages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"275"},{"filePath":"659","messages":"660","suppressedMessages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"275"},{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"666","messages":"667","suppressedMessages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"669","messages":"670","suppressedMessages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"275"},{"filePath":"673","messages":"674","suppressedMessages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"275"},{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"275"},{"filePath":"681","messages":"682","suppressedMessages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"275"},{"filePath":"688","messages":"689","suppressedMessages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"691","messages":"692","suppressedMessages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"694","messages":"695","suppressedMessages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"275"},{"filePath":"698","messages":"699","suppressedMessages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"701","messages":"702","suppressedMessages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"275"},{"filePath":"705","messages":"706","suppressedMessages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"275"},{"filePath":"709","messages":"710","suppressedMessages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"275"},{"filePath":"713","messages":"714","suppressedMessages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"275"},{"filePath":"717","messages":"718","suppressedMessages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"720","messages":"721","suppressedMessages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"275"},{"filePath":"724","messages":"725","suppressedMessages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"727","messages":"728","suppressedMessages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"275"},{"filePath":"731","messages":"732","suppressedMessages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"275"},{"filePath":"735","messages":"736","suppressedMessages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"738","messages":"739","suppressedMessages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"741","messages":"742","suppressedMessages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"275"},"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\index.js",[],[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\App.js",["745","746"],[],"import React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\n\r\nimport TripStoryList from \"./pages/tripstory/tripstory-list/TripStoryList\";\r\nimport TripScheduleAddModal from \"./components/tripschedule/modal/TripScheduleAddModal\";\r\nimport Flight from \"./pages/flight/Flight\";\r\nimport Main from \"./pages/main/Main\";\r\nimport TripSchedule from \"./pages/tripschedule/TripSchedule\";\r\nimport Header from \"./components/header/Header\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport LoginMain from \"./pages/login/LoginMain\";\r\nimport LoginByEail from \"./pages/login/LoginByEail\";\r\nimport MyPageMain from \"./pages/mypage/MyPageMain\";\r\nimport LogoutModal from \"./components/logout/LogoutModal\";\r\nimport Signup1 from \"./pages/signup/Signup1\";\r\nimport SignupAgreement from \"./pages/signup/SignupAgreement\";\r\nimport SignupFindID from \"./pages/signup/SignupFindID\";\r\nimport AuthenticationNumber from \"./pages/signup/AuthenticationNumber\";\r\nimport TripSchedule1 from \"./pages/tripschedule/tripschedule-details/tipschedule1/TripSchedule1\";\r\nimport TripSchedule2 from \"./pages/tripschedule/tripschedule2/TripSchedule2\";\r\nimport TripStoryCreate from \"./pages/tripstory/tripstory-create/TripStoryCreate\";\r\nimport TripLocDetail from \"./pages/tripplace/TripLocDetail\";\r\n\r\nimport LoginSocial from \"./components/login/LoginSocial\";\r\nimport ReviewImgModal from \"./components/tripplace/ReviewImgModal\";\r\n\r\nimport ProfileUpdate from \"./pages/mypage/ProfileUpdate\";\r\n\r\nimport NickName from \"./pages/signup/NickName\";\r\nimport NonMemberResSearch from \"./pages/signup/NonMemberResSearch\";\r\nimport RestaurantData from \"./pages/restaurant/restaurant-data/RestaurantData\";\r\n\r\nimport RegisterPhone from \"./pages/signup/RegisterPhone\";\r\n\r\nimport TripStoryDetail from \"./pages/tripstory/tripstory-detail/TripStoryDetail\";\r\nimport FlightWithData from \"./pages/flight/flight-list/FlightWithData\";\r\n\r\nimport KaKaoCallback from \"./components/login/KaKaoCallback\";\r\nimport TempSignUp from \"./pages/temp-user/TempSignUp\";\r\nimport TempUserCRUD from \"./pages/temp-user/TempUserCRUD\";\r\nimport Bus from \"./pages/bus/Bus\";\r\nimport StayList from \"./pages/stay/stay-list/StayList\";\r\nimport StayDetail from \"./pages/stay/stay-detail/StayDetail\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst App = () => {\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <BrowserRouter>\r\n                <Header />\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Main />} />\r\n                    <Route path=\"/tripLoc\" element={<TripLocDetail />} />\r\n                    <Route path=\"/tripstory\" element={<TripStoryList />} />\r\n\r\n                    {/* <Route path='/TripScheduleAddModal' element={<TripScheduleAddModal />} /> */}\r\n\r\n                    <Route\r\n                        path=\"/TripScheduleAddModal\"\r\n                        element={<TripScheduleAddModal />}\r\n                    />\r\n\r\n                    <Route path=\"/flight\" element={<Flight />} />\r\n                    <Route\r\n                        path=\"/FlightWithData\"\r\n                        element={<FlightWithData />}\r\n                    />\r\n                    <Route path=\"/bus\" element={<Bus />} />\r\n                    <Route path=\"/tripSchedule\" element={<TripSchedule />} />\r\n                    <Route path=\"/login\" element={<LoginMain />} />\r\n                    <Route path=\"/naver\" element={<LoginSocial />} />\r\n                    <Route path=\"/mypage\" element={<MyPageMain />} />\r\n                    <Route path=\"/logout\" element={<LogoutModal />} />\r\n\r\n                    {/* signup 회원가입 */}\r\n                    <Route path=\"/signup1\" element={<Signup1 />} />\r\n                    <Route\r\n                        path=\"/SignupAgreement\"\r\n                        element={<SignupAgreement />}\r\n                    />\r\n                    <Route path=\"/nickname\" element={<NickName />} />\r\n                    <Route\r\n                        path=\"/signup/registerPhone\"\r\n                        element={<RegisterPhone />}\r\n                    />\r\n\r\n                    <Route path=\"/SignupFindID\" element={<SignupFindID />} />\r\n                    <Route\r\n                        path=\"/AuthenticationNumber\"\r\n                        element={<AuthenticationNumber />}\r\n                    />\r\n\r\n                    <Route path=\"/tripschedule1\" element={<TripSchedule1 />} />\r\n                    <Route path=\"/tripschedule2\" element={<TripSchedule2 />} />\r\n                    <Route\r\n                        path=\"/tripstory/create\"\r\n                        element={<TripStoryCreate />}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/noneMemberResSearch\"\r\n                        element={<NonMemberResSearch />}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/ReviewImgModal\"\r\n                        element={<ReviewImgModal />}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/auth/kakao/callback\"\r\n                        element={<KaKaoCallback />}\r\n                    />\r\n                    <Route\r\n                        path=\"/mypage/profileUpdate\"\r\n                        element={<ProfileUpdate />}\r\n                    />\r\n                    <Route\r\n                        path=\"/tripstory/detail\"\r\n                        element={<TripStoryDetail />}\r\n                    />\r\n\r\n                    {/* stay 숙박 */}\r\n                    <Route path=\"/staylist\" element={<StayList />} />\r\n                    <Route\r\n                        path=\"/staydetail/:contentId\"\r\n                        element={<StayDetail />}\r\n                    />\r\n\r\n                    {/* <Route path=\"/TempSignUp\" element={<TempSignUp />} /> */}\r\n\r\n                    <Route path=\"restaurantList\" element={<RestaurantData />} />\r\n                    <Route path=\"/TempUserCRUD\" element={<TempUserCRUD />} />\r\n                    <Route path=\"/login/byEmail\" element={<LoginByEail />} />\r\n                </Routes>\r\n\r\n                <Footer />\r\n            </BrowserRouter>\r\n        </QueryClientProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\reportWebVitals.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\Flight.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\TripSchedule.js",["747","748","749","750","751","752","753"],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\mypage\\MyPageMain.js",["754"],[],"import React, { useState } from \"react\";\r\nimport styles from \"./MyPageMain.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MyReview from \"../../components/mypage/mypage-review/MyReview\";\r\nimport MySchedule from \"../../components/mypage/mypage-schedule/MySchedule\";\r\nimport MyStory from \"../../components/mypage/mypage-story/MyStory\";\r\n\r\nconst MyPageMain = () => {\r\n    const data = [\r\n        {\r\n            id: 1,\r\n            city: \"Jeju\",\r\n            fullCityName: \"대한민국 제주도\",\r\n            email: \"masilgasil@gmail.com\",\r\n            tourName: \"Test1\",\r\n            tourStartDay: \"2023.07.06\",\r\n            tourEndDay: \"2023.07.10\",\r\n            lastUpdateDay: \"2023.05.30\",\r\n            level: \"L\",\r\n            selectedLocation: \"19\",\r\n            img: process.env.PUBLIC_URL + \"/images/jeju.jfif\",\r\n        },\r\n        {\r\n            id: 2,\r\n            city: \"Gangwon\",\r\n            fullCityName: \"대한민국 강원도\",\r\n            email: \"silsil115@gmail.com\",\r\n            tourName: \"Test2\",\r\n            tourStartDay: \"2023.07.15\",\r\n            tourEndDay: \"2023.07.20\",\r\n            lastUpdateDay: \"2023.02.30\",\r\n            level: \"L\",\r\n            selectedLocation: \"20\",\r\n            img: process.env.PUBLIC_URL + \"/images/jeju.jfif\",\r\n        },\r\n        {\r\n            id: 3,\r\n            city: \"Gwangju\",\r\n            fullCityName: \"대한민국 광주광역시\",\r\n            email: \"eysilgasil@gmail.com\",\r\n            tourName: \"Test3\",\r\n            tourStartDay: \"2023.08.07\",\r\n            tourEndDay: \"2023.08.12\",\r\n            lastUpdateDay: \"2023.03.15\",\r\n            level: \"L\",\r\n            selectedLocation: \"21\",\r\n            img: process.env.PUBLIC_URL + \"/images/jeju.jfif\",\r\n        },\r\n        {\r\n            id: 4,\r\n            city: \"Busan\",\r\n            fullCityName: \"대한민국 부산광역시\",\r\n            email: \"yosilgasil@gmail.com\",\r\n            tourName: \"Test4\",\r\n            tourStartDay: \"2023.09.22\",\r\n            tourEndDay: \"2023.09.28\",\r\n            lastUpdateDay: \"2023.04.20\",\r\n            level: \"L\",\r\n            selectedLocation: \"22\",\r\n            img: process.env.PUBLIC_URL + \"/images/jeju.jfif\",\r\n        },\r\n    ];\r\n\r\n    const [navTitle, setNavTitle] = useState(\"나의 여행 일정\");\r\n\r\n    const [isTripDay, setIsTripDay] = useState(true);\r\n    const [isTripReview, setIsTripReview] = useState(false);\r\n    const [isTripStory, setIsTripStory] = useState(false);\r\n\r\n    const tripDayHandler = (e) => {\r\n        setIsTripDay(true);\r\n        setIsTripReview(false);\r\n        setIsTripStory(false);\r\n        setNavTitle(e.target.innerText);\r\n    };\r\n    const tripReviewHandler = (e) => {\r\n        setIsTripDay(false);\r\n        setIsTripReview(true);\r\n        setIsTripStory(false);\r\n        setNavTitle(e.target.innerText);\r\n    };\r\n    const tripStoryHandler = (e) => {\r\n        setIsTripDay(false);\r\n        setIsTripReview(false);\r\n        setIsTripStory(true);\r\n        setNavTitle(e.target.innerText);\r\n    };\r\n\r\n    return (\r\n        <div className={styles[\"mypage-wrap\"]}>\r\n            <div className={styles[\"profile-wrap\"]}>\r\n                <div className={styles[\"profile-image\"]}></div>\r\n                <button className={styles[\"update-profile-button\"]}>\r\n                    <a href=\"/mypage/ProfileUpdate\">프로필 수정</a>\r\n                </button>\r\n            </div>\r\n            <div className={styles[\"list-menu-nav\"]}>\r\n                <div\r\n                    className={\r\n                        isTripDay\r\n                            ? styles[\"selected-list-menu-nav\"]\r\n                            : styles[\"not-selected-list-menu-nav\"]\r\n                    }\r\n                    onClick={tripDayHandler}\r\n                >\r\n                    나의 여행 일정\r\n                </div>\r\n                <div\r\n                    className={\r\n                        isTripReview\r\n                            ? styles[\"selected-list-menu-nav\"]\r\n                            : styles[\"not-selected-list-menu-nav\"]\r\n                    }\r\n                    onClick={tripReviewHandler}\r\n                >\r\n                    나의 리뷰\r\n                </div>\r\n                <div\r\n                    className={\r\n                        isTripStory\r\n                            ? styles[\"selected-list-menu-nav\"]\r\n                            : styles[\"not-selected-list-menu-nav\"]\r\n                    }\r\n                    onClick={tripStoryHandler}\r\n                >\r\n                    나의 여행 이야기\r\n                </div>\r\n            </div>\r\n            <div className={styles[\"list-main-content\"]}>\r\n                <div className={styles[\"list-title-text\"]}>\r\n                    <span className={styles[\"list-title-text-main\"]}>\r\n                        {navTitle}\r\n                    </span>\r\n                    <span className={styles[\"list-title-text-count\"]}>\r\n                        {data.length}\r\n                    </span>\r\n                </div>\r\n                <div className={styles[\"list-sort-section\"]}>\r\n                    {navTitle === \"나의 여행 일정\" &&\r\n                        data.map((item) => (\r\n                            <MySchedule key={item.id} data={item} />\r\n                        ))}\r\n                    {navTitle === \"나의 리뷰\" && <MyReview />}\r\n                    {navTitle === \"나의 여행 이야기\" &&\r\n                        data.map((item) => (\r\n                            <MyStory key={item.id} data={item} />\r\n                        ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPageMain;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\login\\LoginMain.js",["755","756","757","758","759"],[],"import React, { useEffect } from \"react\";\r\nimport styles from \"./LoginMain.module.css\";\r\nimport LoginSocial from \"../../components/login/LoginSocial\";\r\n\r\nimport JoinMember from \"../../components/login/JoinMember\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport LoginByEmailButton from \"../../components/login/LoginByEmailButton\";\r\n\r\nconst LoginMain = (props) => {\r\n    const naviagte = useNavigate();\r\n\r\n    useEffect(() => {\r\n        let code = new URL(window.location.href).searchParams.get(\"code\");\r\n        console.log(code);\r\n    });\r\n    console.log(props);\r\n    return (\r\n        <div className={styles[\"login-main-wrap\"]}>\r\n            <div className={styles[\"login-main-image\"]}>\r\n                <Link to=\"/\">\r\n                    <img\r\n                        src={\r\n                            process.env.PUBLIC_URL +\r\n                            \"/images/Login-main-image.jfif\"\r\n                        }\r\n                    ></img>\r\n                </Link>\r\n            </div>\r\n            <h2 className={styles[\"login-main-title-content\"]}>\r\n                지금 마실가실과 여행을 시작하세요!\r\n            </h2>\r\n            <LoginSocial />\r\n            <LoginByEmailButton />\r\n            <JoinMember />\r\n            <div className={styles[\"login-find-info\"]}>\r\n                <a href=\"\">아이디 찾기</a>\r\n                <a href=\"\">문의하기</a>\r\n                <span>\r\n                    <a href=\"\">비회원 예약 조회</a>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginMain;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\mypage\\ProfileUpdate.js",["760","761"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ProfileUpdate.module.css\";\r\n\r\nconst ProfileUpdate = () => {\r\n    const [profileInfo, setProfileInfo] = useState({\r\n        name: \"\",\r\n        nickname: \"\",\r\n        email: \"\",\r\n    });\r\n    // const { name, nickname, email } = userProfile;\r\n\r\n    const profileInfoHandler = (e) => {\r\n        setProfileInfo({\r\n            [e.target.name]: e.target.value,\r\n            [e.target.nickname]: e.target.value,\r\n            [e.target.email]: e.target.value,\r\n        });\r\n        console.log(profileInfo);\r\n    };\r\n    // useEffect(() => {});\r\n    return (\r\n        // <form\r\n        //     action=\"\"\r\n        //     method=\"post\"\r\n        //     onSubmit={function (e) {\r\n        //         e.preventDefault();\r\n        //         this.props.onSubmit(\r\n        //             e.target.name.value,\r\n        //             e.target.nickname,\r\n        //             e.target.email\r\n        //         );\r\n        //     }.bind(this)}\r\n        // >\r\n        <div className={styles[\"profile-total-wrap\"]}>\r\n            <div className={styles[\"profile-update-wrap\"]}>\r\n                <div\r\n                    className={styles[\"profile-update-image\"]}\r\n                    onChange={profileInfoHandler}\r\n                >\r\n                    <img\r\n                        src={\r\n                            process.env.PUBLIC_URL +\r\n                            \"/images/camera-4990900.png\"\r\n                        }\r\n                    />\r\n                </div>\r\n                <div className={styles[\"profile-input\"]}>\r\n                    <div className={styles[\"profile-input-001\"]}>\r\n                        <p className={styles[\"profile-input-subject\"]}>이름</p>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            onChange={profileInfoHandler}\r\n                        ></input>\r\n                    </div>\r\n                    <div className={styles[\"profile-input-002\"]}>\r\n                        <p className={styles[\"profile-input-subject\"]}>\r\n                            닉네임\r\n                        </p>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nickname\"\r\n                            onChange={profileInfoHandler}\r\n                        ></input>\r\n                    </div>\r\n                    <div className={styles[\"profile-input-003\"]}>\r\n                        <p className={styles[\"profile-input-subject\"]}>\r\n                            이메일\r\n                        </p>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            onChange={profileInfoHandler}\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p className={styles[\"member-withdraw\"]}>회원탈퇴</p>\r\n                </div>\r\n                <div className={styles[\"profile-list-button\"]}>\r\n                    <button\r\n                        type=\"reset\"\r\n                        className={styles[\"profile-list-button-cancle\"]}\r\n                    >\r\n                        취소하기\r\n                    </button>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={styles[\"profile-list-button-save\"]}\r\n                    >\r\n                        저장하기\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // </form>\r\n    );\r\n};\r\n\r\nexport default ProfileUpdate;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\Main.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\Signup1.js",["762","763","764","765","766","767"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles from \"./Signup.module.css\";\r\nimport SignupAgreement from \"./SignupAgreement\";\r\nimport NickName from \"./NickName\";\r\nimport NonMemberResSearch from \"./NonMemberResSearch\";\r\nimport RegisterPhone from \"./RegisterPhone\";\r\n\r\nconst Signup1 = (props) => {\r\n  const [email, setEmail] = useState(\"\"); // 이메일\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\"); // 유효성 검사된 이메일\r\n  const [password, setPassword] = useState(\"\"); // 비밀번호\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [isPasswordMatched, setIsPasswordMatched] = useState(false);\r\n  const [nickNameValue, setnickNameValue] = useState(\"\");\r\n  const [agreementValue, setAgreementValue] = useState(\"\");\r\n  const [count, setCount] = useState(1);\r\n\r\n  const getAgreementValue = (agreementValue) => {\r\n    setAgreementValue(agreementValue);\r\n    console.log(agreementValue);\r\n  };\r\n\r\n  const getNickName = (nickNameValue) => {\r\n    setnickNameValue(nickNameValue);\r\n    console.log();\r\n  };\r\n\r\n  const allData = {\r\n    email: { email },\r\n    password: { password },\r\n    agreementValue: { agreementValue },\r\n    nickNameValue: { nickNameValue },\r\n  };\r\n\r\n  const onNext = () => {\r\n    if (email === \"\" || password === \"\" || confirmPassword === \"\")\r\n      setCount(count);\r\n    else {\r\n      setCount(count + 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // 이메일과 비밀번호 확인 로직 구현\r\n    if (password === confirmPassword) {\r\n      // 이메일과 비밀번호가 일치하는 경우 가입 프로세스 진행\r\n      alert(\"가입 성공!\");\r\n      // 여기서 가입 프로세스를 진행하면 됩니다.\r\n    } else {\r\n      // 이메일과 비밀번호가 일치하지 않는 경우 처리 로직\r\n      alert(\"비밀번호가 일치하지 않습니다.\");\r\n    }\r\n  };\r\n\r\n  //---------- 이메일 형식 체크 ----------\r\n  const [validateEmail, setValidateEmail] = useState(false);\r\n\r\n  const emailEventHandler = (e) => {\r\n    const emailValue = e.target.value.replace(/\\s/g, \"\").trim();\r\n    setEnteredEmail(emailValue);\r\n    setEmail(emailValue);\r\n    const regex1 =\r\n      /^[A-Za-z0-9]([-_.]?[A-Za-z0-9])*@[A-Za-z0-9]([-_.]?[A-Za-z0-9])*\\.[A-Za-z]{2,3}$/;\r\n    const isValidEmail = regex1.test(emailValue);\r\n\r\n    setValidateEmail(isValidEmail);\r\n  };\r\n\r\n  // ---------- 비밀번호 형식 체크 ----------\r\n  const [validatePwd, setValidatePwd] = useState(false);\r\n\r\n  const pwdEventHandler = (e) => {\r\n    setPassword(e.target.value);\r\n    const reg2 = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,15}$/;\r\n    const isValidPwd = reg2.test(e.target.value);\r\n\r\n    setValidatePwd(isValidPwd);\r\n  };\r\n\r\n  // ---------- 비밀번호 동일 여부 체크 ----------\r\n  const [isPwdMatched, setIsPwdMatched] = useState(false);\r\n\r\n  const pwdMatchCheckHandler = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n    if (password !== e.target.value) {\r\n      setIsPwdMatched(false);\r\n    } else {\r\n      setIsPwdMatched(true);\r\n    }\r\n  };\r\n\r\n  // ---------- 이메일 중복 검사(입력 완료 후 1초 뒤 실행) ----------\r\n  const [timer, setTimer] = useState(null);\r\n  const [dplChkEmail, setDplChkEmail] = useState(true);\r\n\r\n  useEffect(() => {\r\n    clearTimeout(timer); // 이전 타이머를 제거\r\n\r\n    if (validateEmail) {\r\n      const newTimer = setTimeout(dplChkEmailHandler, 1000);\r\n      setTimer(newTimer);\r\n    }\r\n  }, [validateEmail, enteredEmail]);\r\n\r\n  const dplChkEmailHandler = async () => {\r\n    try {\r\n      const response = await fetch(`/user/getUserInfo?email=${enteredEmail}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email: enteredEmail }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const text = await response.text();\r\n\r\n        if (text) {\r\n          try {\r\n            const data = JSON.parse(text);\r\n            console.log(\"사용 불가 😊: \" + data);\r\n            setDplChkEmail(false);\r\n          } catch (error) {\r\n            console.log(\"JSON.parse error: \", error);\r\n          } // JSON.parse try-catch\r\n        } else {\r\n          console.log(\"response: 빈 응답\");\r\n          setDplChkEmail(true);\r\n        } // text\r\n      } else {\r\n        console.log(\"response!=200\");\r\n      } // response isn't ok\r\n    } catch (err) {\r\n      console.log(\"서버 통신 에러 발생: \" + err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles[\"width-wrapper\"]}>\r\n      {count === 1 && (\r\n        <form className={styles[\"width-wrapper-form\"]} onSubmit={handleSubmit}>\r\n          <h1 className={styles[\"signup-heading\"]}>이메일로 가입하기</h1>\r\n\r\n          <div className={styles[\"input-group\"]}>\r\n            <label className={styles.label}>\r\n              <h2 className={styles[\"input-label\"]}>이메일 주소</h2>\r\n            </label>\r\n            <div className={styles[\"input-field\"]}>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={emailEventHandler}\r\n                placeholder=\"abc@gmail.com\"\r\n                required\r\n                className={styles[\"input\"]}\r\n              />\r\n              {validateEmail ? (\r\n                <div className={styles[\"input-field-valEmail\"]}>\r\n                  {email.length > 0 && dplChkEmail ? (\r\n                    <span>사용 가능한 이메일입니다 :)</span>\r\n                  ) : email.length > 0 && !dplChkEmail ? (\r\n                    <span>중복된 이메일입니다 :(</span>\r\n                  ) : (\r\n                    <span>올바른 이메일 형식입니다 :)</span>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className={styles[\"input-field-inValEmail\"]}>\r\n                  이메일 형식이 올바르지 않습니다 :(\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <div className={styles[\"input-group\"]}>\r\n            <label className={styles.label}>\r\n              <h2 className={styles[\"input-label\"]}>비밀번호</h2>\r\n            </label>\r\n            <div className={styles[\"input-field\"]}>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={pwdEventHandler}\r\n                placeholder=\"비밀번호 입력\"\r\n                required\r\n                className={styles[\"input\"]}\r\n              />\r\n              {validatePwd ? (\r\n                <div className={styles[\"input-field-valEmail\"]}>\r\n                  올바른 비밀번호 형식입니다 :)\r\n                </div>\r\n              ) : (\r\n                <div className={styles[\"input-field-inValEmail\"]}>\r\n                  숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요 :(\r\n                </div>\r\n              )}\r\n              {/* {validatePwd && (\r\n                <FontAwesomeIcon\r\n                  icon={faCheck}\r\n                  className={styles[\"check-icon\"]}\r\n                />\r\n              )} */}\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <div className={styles[\"input-group\"]}>\r\n            <label className={styles.label}>\r\n              <h2 className={styles[\"input-label\"]}>비밀번호 확인</h2>\r\n            </label>\r\n            <div className={styles[\"input-field\"]}>\r\n              <input\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={pwdMatchCheckHandler}\r\n                placeholder=\"비밀번호 확인\"\r\n                required\r\n                className={styles[\"input\"]}\r\n              />\r\n              {confirmPassword.length > 0 && isPwdMatched && (\r\n                <div className={styles[\"input-field-valEmail\"]}>\r\n                  비밀번호가 일치합니다 :)\r\n                </div>\r\n              )}\r\n              {confirmPassword.length > 0 && !isPwdMatched && (\r\n                <div className={styles[\"input-field-inValEmail\"]}>\r\n                  비밀번호가 일치하지 않습니다 :(\r\n                </div>\r\n              )}\r\n              {/* {isPwdMatched && (\r\n                <FontAwesomeIcon\r\n                  icon={faCheck}\r\n                  className={styles[\"check-icon\"]}\r\n                />\r\n              )} */}\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            className={`${styles[\"submit-button\"]} ${\r\n              validateEmail &&\r\n              validatePwd &&\r\n              isPwdMatched &&\r\n              styles[\"submit-button-able\"]\r\n            }`}\r\n            type=\"submit\"\r\n            onClick={onNext}\r\n            disabled={!validateEmail || !validatePwd || !isPwdMatched}\r\n          >\r\n            확인\r\n          </button>\r\n        </form>\r\n      )}\r\n      {count === 2 && (\r\n        <SignupAgreement\r\n          getAgreementValue={getAgreementValue}\r\n          onNext={onNext}\r\n        />\r\n      )}\r\n      {count === 3 && (\r\n        <NickName\r\n          getNickName={getNickName}\r\n          onNext={onNext}\r\n          setnickNameValue={setnickNameValue}\r\n        />\r\n      )}\r\n      {count === 4 && <RegisterPhone allData={allData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup1;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\SignupAgreement.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\NickName.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\NonMemberResSearch.js",["768"],[],"import React, { useState, useEffect } from 'react';\r\nimport styles from './nonMemberResSearch.module.css';\r\n\r\nconst NonMemberResSearch = () => {\r\n  const [name, setName] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [isCodeGetBtnClicked, setIsCodeGetBtnClicked] = useState(false);\r\n  const [isInjeongBtnClicked, setIsInjeongBtnClicked] = useState(false);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handlePhoneNumberChange = (e) => {\r\n    setPhoneNumber(e.target.value);\r\n  };\r\n\r\n  const handleVerificationCodeChange = (e) => {\r\n    setVerificationCode(e.target.value);\r\n  };\r\n\r\n  const isNameValid = name.trim() !== '';\r\n  const isPhoneNumberValid = phoneNumber.trim() !== '' && phoneNumber.length === 11; // 휴대전화번호가 공백이 아니고 11자리인지 확인\r\n  const isVerificationCodeValid = verificationCode.trim() !== '' && verificationCode.length === 6;\r\n\r\n  const handleCodeGetBtnClick = () => {\r\n    setIsCodeGetBtnClicked(true);\r\n  };\r\n\r\n  const handleInjeongBtnClick = () => {\r\n    setIsInjeongBtnClicked(true);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles['width-wrapper']}>\r\n      <h2 className={styles['signup-agreement-title']}>비회원 예약 조회</h2>\r\n      <div className={styles['sub-title']}>\r\n        예약시 사용한 이름과 휴대폰 번호를 입력해주세요.\r\n      </div>\r\n      \r\n      <div className={styles['name-area']}>\r\n        <div className={styles['name']}>이름</div>\r\n        <input type=\"text\" className={styles['name-input']} placeholder=\"실명, 한글로 입력\"\r\n               value={name}\r\n               onChange={handleNameChange} />\r\n      </div>\r\n      <div className={styles['phone-number']}>휴대전화번호</div>\r\n      <div className={styles['phone-number-area']}>\r\n        <input type=\"text\" className={styles['phone-number-input']} placeholder=\"-빼고 숫자만 입력\"\r\n               value={phoneNumber}\r\n               onChange={handlePhoneNumberChange} />\r\n        <button className={styles['code-get-btn']}\r\n                disabled={!isPhoneNumberValid}\r\n                onClick={handleCodeGetBtnClick}>\r\n                인증번호 받기\r\n        </button>\r\n      </div>\r\n      <div className={styles['code']}>인증번호</div>\r\n      <div className={styles['code-area']}>\r\n        <input type=\"text\" className={styles['code-input']} placeholder=\"6자리 번호 입력\"\r\n               value={verificationCode}\r\n               onChange={handleVerificationCodeChange} />\r\n        <button className={styles['injeong-btn']}\r\n                disabled={!isVerificationCodeValid}\r\n                onClick={handleInjeongBtnClick}>\r\n                인증하기\r\n        </button>\r\n      </div>\r\n      <button className={styles['search-res-btn']}\r\n              disabled={!isNameValid || !isCodeGetBtnClicked || !isInjeongBtnClicked}\r\n              >\r\n              예약조회\r\n      </button>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NonMemberResSearch;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\RegisterPhone.js",["769"],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\SignupFindID.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\AuthenticationNumber.js",["770","771"],[],"import React, { useState } from 'react';\r\nimport styles from './AuthenticationNumber.module.css';\r\n\r\nconst AuthenticationNumber = () => {\r\n  const [isResent, setIsResent] = useState(false);\r\n  const [isPhoneNumberFocused, setIsPhoneNumberFocused] = useState(false);\r\n  const [isAuthCodeEntered, setIsAuthCodeEntered] = useState(false);\r\n\r\n  const handleButtonClick = () => {\r\n    setIsResent(true);\r\n  };\r\n\r\n  const handlePhoneNumberClick = () => {\r\n    setIsPhoneNumberFocused(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles['width-wrapper']}>\r\n      <h1 className={styles['signup-heading']}>아이디를 잊으셨나요?</h1>\r\n      <br />\r\n      <h2>휴대폰 번호 등록하기</h2>\r\n      <h2>\r\n        마실가실에서는 고객님의 안전한 거래 및 회원 보호를 위해 본인 인증(최초 1회)를 하고 있습니다.\r\n        <br />\r\n        <br />\r\n        <div className={styles['input-wrapper']}>\r\n          <label htmlFor=\"countryCode\" className={styles['input-label']}>국가 코드</label>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <label htmlFor=\"phoneNumber\" className={styles['input-label']}>전화번호</label>\r\n        </div>\r\n        <div className={styles['input-wrapper']}>\r\n          <select id=\"countryCode\" className={styles['input-select'] }>\r\n            <option value=\"82\">+82 (대한민국)</option>\r\n            <option value=\"1\">+1 (미국)</option>\r\n            <option value=\"86\">+86 (중국)</option>\r\n            <option value=\"81\">+81 (일본)</option>\r\n            {/* 다른 국가 코드 옵션들 */}\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            id=\"phoneNumber\"\r\n            className={`${styles['input-text']} ${styles['underline']}`}\r\n            onClick={handlePhoneNumberClick}\r\n          />\r\n          <button\r\n            className={`${styles['trip-schedule-add-modal-select-complete-button']} `}\r\n            onClick={handleButtonClick}\r\n            disabled={!isAuthCodeEntered}\r\n          >\r\n            <h3 style={{ textAlign: 'center', color: 'white' }}>{isResent ? '재전송' : '전송'}</h3>\r\n          </button>\r\n        </div>\r\n      </h2>\r\n      <br />\r\n\r\n      <h2>\r\n        인증번호\r\n        <div className={styles['input-wrapper']}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"authCode\"\r\n            className={`${styles['input-text']} ${styles['blue-underline']}`}\r\n          />\r\n        </div>\r\n        <div className={styles['trip-schedule-add-modal-select-complete']}>\r\n          <button\r\n            className={`${styles['trip-schedule-add-modal-select-complete-button2']} ${styles['orange-background']}`}\r\n            disabled={!isAuthCodeEntered}\r\n          >\r\n            <h3 style={{ textAlign: 'center', color: 'white' }}>인증하기<br/></h3>\r\n          </button>\r\n        </div>\r\n      </h2>\r\n      <h4 style={{ color: 'gray' }}>\r\n        <br/>\r\n        ※ 3분 이내로 인증번호(6자리)를 입력해주세요. <br/>\r\n        ※ 입력시간 초과 시 \"재전송\" 버튼을 눌러주세요.\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthenticationNumber;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\TempSmsCheck.js",[],[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempSignUp.js",["772"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst TempSignUp = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [locationConsent, setLocationConsent] = useState(false);\r\n  const [regUser, setRegUser] = useState(false);\r\n  const [memberDate, setMemberDate] = useState(\"\");\r\n\r\n  // 회원가입 버튼 클릭 시,\r\n  const signUpHandler = async () => {\r\n    // 데이터 전달 시, 최종 유효성 검사\r\n    const data = {\r\n      id,\r\n      email,\r\n      phone: phone.replace(/-/g, \"\"), // `-`를 모두 제거,\r\n      password,\r\n      name,\r\n      memberDate,\r\n      locationConsent: locationConsent ? \"1\" : \"0\",\r\n      regUser: regUser ? \"1\" : \"0\",\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"/temp/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"회원가입 성공\");\r\n      } else {\r\n        console.log(\"회원가입 실패\");\r\n      }\r\n    } catch (error) {\r\n      // 네트워크 오류 등 예외 처리\r\n      console.log(\"오류 발생\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ background: \"aliceblue\" }}>\r\n      {/* 회원가입 */}\r\n      <>\r\n      <div>\r\n        아이디: \r\n        <input\r\n            type=\"text\"\r\n            value={id}\r\n            onChange={(e) => setId(e.target.value)}\r\n          />\r\n      </div>\r\n        <div>\r\n          이메일 주소:\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          전화번호:\r\n          <input\r\n            type=\"tel\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          비밀번호:\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          닉네임:\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          생년월일:\r\n          <input\r\n            type=\"date\"\r\n            value={memberDate}\r\n            onChange={(e) => setMemberDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          위치 동의:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={locationConsent}\r\n            onChange={(e) => {\r\n              setLocationConsent(e.target.checked);\r\n              console.log(e.target.checked);\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          이벤트 동의:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={regUser}\r\n            onChange={(e) => {\r\n              setRegUser(e.target.checked);\r\n            }}\r\n          />\r\n        </div>\r\n        <button onClick={signUpHandler}>회원가입 버튼</button>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TempSignUp;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempUserCRUD.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-list\\FlightWithData.js",["773"],[],"import React, { useEffect, useState } from \"react\";\r\nimport FlightItem from \"./FlightItem\";\r\nimport styles from './FlightWithData.module.css';\r\n\r\nconst FlightWithData = (props) => {\r\n  const API_KEY = `NSlTZ99NuCRBE2DNWxDko3Ncyh%2FydKz3jPORuB18BrwOKoldcWLXhcfTG%2FKYoHtCJkK7F%2Bavyrp%2FezCVffMy6Q%3D%3D`;\r\n  const [data, setData] = useState(null);\r\n  console.log(\"from\", props.fromAirport)\r\n  console.log(\"to\", props.toAirport)\r\n  async function getData() {\r\n    const url = `http://apis.data.go.kr/1613000/DmstcFlightNvgInfoService/getFlightOpratInfoList?serviceKey=${API_KEY}&pageNo=1&numOfRows=100&_type=json&depAirportId=${props.fromAirport}&arrAirportId=${props.toAirport}&depPlandTime=20230630`;\r\n    const response = await fetch(url);\r\n    const result = await response.json();\r\n    const items = result.response.body.items.item;\r\n\r\n    console.log(response)\r\n    setData(items);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // 이벤트 핸들러 함수를 사용하여 데이터 가져오기\r\n    getData();\r\n  }, [props.fromAirport, props.toAirport]); // fromAirport과 toAirport이 변경될 때마다 useEffect가 호출되도록 설정\r\n\r\n  if (!data) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles['table-container']}>\r\n\r\n      {data.map((item, index) => (\r\n        <FlightItem key={index} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightWithData;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule2\\TripSchedule2.js",["774"],[],"import React, { useState } from 'react';\r\nimport Calendar2 from './Calendar2';\r\nimport { useLocation } from 'react-router-dom'\r\nimport styles from './TripSchedule2.module.css';\r\n\r\nconst TripSchedule2 = ({ onClose }, props) => {\r\n  const [isOpen, setIsOpen] = useState(true); // 모달 열림 상태\r\n\r\n  const handleCloseClick = () => {\r\n    setIsOpen(false); // 모달 닫기\r\n    onClose(); // onClose 함수 호출\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && ( // isOpen이 true일 때만 모달 표시\r\n        <div className={`${styles.tripScheduleAddModal} ${styles.small}`}>\r\n          <div className={styles.content}>\r\n            <div className={styles.tripScheduleAddModalClose} onClick={handleCloseClick}>\r\n              ✖️\r\n              {/* <img\r\n                src=\"../../../public/images/icon_close.png\"\r\n                alt=\"icon_close\" />\r\n              */}\r\n            </div>\r\n            <div className={styles.titleContainer}>\r\n              <h1 className={styles.title}>여행일정 등록</h1>\r\n              <h2 className={styles.subtitle}>일정에 따른 일기예보, 여행정보를 알려드립니다.</h2>\r\n            </div>\r\n            <Calendar2 tempDateChangeHandler={props.tempDateChangeHandler}\r\n              formattedStartDate={props.formattedStartDate}\r\n              formattedEndDate={props.formattedEndDate}\r\n            />\r\n            <br /><br />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TripSchedule2;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\TripLocDetail.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\bus\\Bus.js",["775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796"],[],"import React, {useState} from 'react';\r\nimport styles from \"./Bus.module.css\";\r\nimport FlightAroundTrip from \"../flight/flight-search/FlightAroundTrip\";\r\nimport BusSchedule from \"./bus-search/BusSchedule\";\r\n\r\nconst Bus = () => {\r\n    // 왕복 여부\r\n    const [isRoundTrip, setIsRoundTrip] = useState(true);\r\n\r\n    // 공항 선택 모달창 반환\r\n    const [showFromFlightSelect, setShowFromFlightSelect] = useState(false);\r\n    const [showToFlightSelect, setShowToFlightSelect] = useState(false);\r\n    const [showBoardingInfoSelect, setShowBoardingInfoSelect] = useState(false);\r\n\r\n    // 항공권 리스트 조회\r\n    const [showFlightList, setShowFlightList] = useState(false);\r\n\r\n    // 성인/일반석\r\n    const [countAdult, setCountAdult] = useState(1);\r\n    const [countInfant, setCountInfant] = useState(0);\r\n    const [countChild, setCountChild] = useState(0);\r\n    const [showCheckImageN, setShowCheckImageN] = useState(true);\r\n    const [showCheckImageP, setShowCheckImageP] = useState(false);\r\n    const [showCheckImageB, setShowCheckImageB] = useState(false);\r\n    const [showCheckImageF, setShowCheckImageF] = useState(false);\r\n\r\n    // 공항 선택에 따른 값 공유\r\n    const [fromBusTerminal, setFromBusTerminal] = useState(\"출발지\");\r\n    const [toBusTerminal, setToBusTerminal] = useState(\"도착지\");\r\n    // const [fromKorAirport, setFromKorAirport] = useState(\"출발지\");\r\n    // const [toKorAirport, setToKorAirport] = useState(\"도착지\");\r\n\r\n    // round select handler\r\n    const directionSelectHandler = () => {\r\n        setIsRoundTrip(!isRoundTrip);\r\n    };\r\n\r\n    // 모달창 열기\r\n    const selectFromAirportHandler = () => {\r\n        setShowFromFlightSelect(true);\r\n    };\r\n    const selectToAirportHandler = () => {\r\n        setShowToFlightSelect(true);\r\n    };\r\n    const selectBoardingInfoHandler = () => {\r\n        setShowBoardingInfoSelect(true);\r\n    };\r\n    // 닫기창\r\n    const selectedFromAirportHandler = () => {\r\n        setShowFromFlightSelect(false);\r\n    };\r\n    const selectedToAirportHandler = () => {\r\n        setShowToFlightSelect(false);\r\n    };\r\n    const selectedBoardingInfoHandler = () => {\r\n        setShowBoardingInfoSelect(false);\r\n    };\r\n\r\n    // 항공권 클릭 시, 항공권 리스트 component 전환\r\n    const showFlightListHandler = () => {\r\n        setShowFlightList(true);\r\n    };\r\n\r\n    // 공항 선택에 따른 값 변환을 위한 함수\r\n    const fromAirportHandler = (data) => {\r\n        setFromBusTerminal(data);\r\n        console.log(\"fromairport: \" + data);\r\n    };\r\n    const toAirportHandler = (data) => {\r\n        setToBusTerminal(data);\r\n        console.log(\"toairport: \" + data);\r\n    };\r\n\r\n    const fromAirportHandlerKor = (data) => {\r\n        setFromBusTerminal(data);\r\n        console.log(\"fromairportkor: \" + data);\r\n    };\r\n\r\n    const toAirportHandlerKor = (data) => {\r\n        setToBusTerminal(data);\r\n        console.log(\"toairportkor: \" + data);\r\n    };\r\n\r\n    // 성인/일반석 조회\r\n    const addAdultHandler = () => {\r\n        setCountAdult((prevCount) => prevCount + 1);\r\n    };\r\n    const subAdultHandler = () => {\r\n        setCountAdult((prevCount) => (prevCount <= 0 ? 0 : prevCount - 1));\r\n    };\r\n    const addInfantHandler = () => {\r\n        setCountInfant((prevCount) => prevCount + 1);\r\n    };\r\n    const subInfantHandler = () => {\r\n        setCountInfant((prevCount) => (prevCount <= 0 ? 0 : prevCount - 1));\r\n    };\r\n    const addChildHandler = () => {\r\n        setCountChild((prevCount) => prevCount + 1);\r\n    };\r\n    const subChildHandler = () => {\r\n        setCountChild((prevCount) => (prevCount <= 0 ? 0 : prevCount - 1));\r\n    };\r\n\r\n    const CheckImgHandlerN = () => {\r\n        setShowCheckImageN((prevShowImageN) => !prevShowImageN);\r\n    };\r\n    const CheckImgHandlerP = () => {\r\n        setShowCheckImageP((prevShowImageP) => !prevShowImageP);\r\n    };\r\n    const CheckImgHandlerB = () => {\r\n        setShowCheckImageB((prevShowImageB) => !prevShowImageB);\r\n    };\r\n    const CheckImgHandlerF = () => {\r\n        setShowCheckImageF((prevShowImageF) => !prevShowImageF);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={styles[\"bus-wrapper\"]}>\r\n            {/* header */}\r\n            <div className={styles[\"head-container-wrap\"]}>\r\n                <div className={styles[\"head-container\"]}>\r\n                    <div className={styles[\"head-img\"]} />\r\n                    <div className={styles[\"bus-headline\"]}>\r\n                        <p className={styles[\"bus-headline-text\"]}>어디로 떠나시나요?</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* main */}\r\n            <div className={styles[\"main-container\"]}>\r\n                {/* 왕복, 편도 선택 */}\r\n                <div className={styles[\"main-head-container\"]}>\r\n                    <div className={styles[\"select-round-oneway\"]}>\r\n                        <div\r\n                            className={\r\n                                isRoundTrip\r\n                                    ? styles[\"selected-direction\"] : styles[\"not-selected-direction\"]\r\n                            }\r\n                            onClick={directionSelectHandler}\r\n                        >\r\n                            왕복\r\n                        </div>\r\n                        <div\r\n                            className={\r\n                                isRoundTrip\r\n                                    ? styles[\"not-selected-direction\"] : styles[\"selected-direction\"]\r\n                            }\r\n                            onClick={directionSelectHandler}\r\n                        >\r\n                            편도\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles[\"main-content-wrapper\"]}>\r\n                    <BusSchedule\r\n                        isRoundTrip={isRoundTrip}\r\n                        selectFromAirportHandler={selectFromAirportHandler}\r\n                        selectToAirportHandler={selectToAirportHandler}\r\n                        selectBoardingInfoHandler={selectBoardingInfoHandler}\r\n                        fromBusTerminal={fromBusTerminal}\r\n                        toBusTerminal={toBusTerminal}\r\n                        countAdult={countAdult}\r\n                        countInfant={countInfant}\r\n                        countChild={countChild}\r\n                        showCheckImageN={showCheckImageN}\r\n                        showCheckImageP={showCheckImageP}\r\n                        showCheckImageB={showCheckImageB}\r\n                        showCheckImageF={showCheckImageF}/>\r\n\r\n                    <div className={styles[\"bus-search-btn-wrap\"]}>\r\n                        <div\r\n                            className={styles[\"bus-search-btn\"]}\r\n                            onClick={showFlightListHandler}\r\n                        >\r\n                            항공권 검색\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Bus;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-create\\TripStoryCreate.js",["797","798"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport styles from \"./Tripstory.module.css\";\r\nimport WriteForm from \"./WriteForm.js\";\r\nimport Map from '../../../components/tripstory/tripstory-create/common/Map';\r\nimport DateSummary from './DateSummary';\r\nimport DayBtn from '../../../components/tripstory/tripstory-create/tripstory-create-day/DayBtn';\r\nimport SpotItemList from '../../../components/tripstory/tripstory-create/tripstory-create-spot/SpotItemList';\r\nimport TripStoryDetailData  from '../tripstory-data/TripStoryDetailData';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { tripStoryActions  } from '../tripstory-data/TripStoryReducer';\r\n\r\n\r\nconst tripStoryData = TripStoryDetailData; \r\nconst tripStoryDataDetail = TripStoryDetailData.tripDetailList; \r\n\r\n//tripstory 가장 첫 컴포넌트입니다. \r\nconst TripStoryCreate = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dayBtn, setDayBtn] = useState(1) //초기값 false\r\n    //const [tripStoryData, setTripStoryData] = useState({});\r\n\r\n    \r\n\r\n    const getDaySelect = (data) => {    \r\n        setDayBtn(data);\r\n        //dayBtn 시 update 가 안되면서 하나씩 데이터가 밀리는 상태가 발생\r\n        //직접 받은 데이터를 기준으로 컨트롤\r\n        dispatch(tripStoryActions.getTripDayDetail(tripStoryDataDetail[(data-1)]))            \r\n        dispatch(tripStoryActions.getTripDetail(tripStoryDataDetail))\r\n        dispatch(tripStoryActions.getTripStory(tripStoryData))\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        dispatch(tripStoryActions.getTripDayDetail(tripStoryDataDetail[(dayBtn-1)]))            \r\n        dispatch(tripStoryActions.getTripDetail(tripStoryDataDetail))\r\n        dispatch(tripStoryActions.getTripStory(tripStoryData))\r\n    }, []);\r\n\r\nalert(3);\r\n    \r\n    return (\r\n        \r\n            <div className={styles[\"width-wrapper1\"]}>\r\n                \r\n                <div className={styles['map']}>\r\n                    <Map />\r\n                </div>\r\n                \r\n            \r\n                <div className={styles[\"width-form\"]}>\r\n                    <WriteForm />\r\n                </div>\r\n                \r\n                <div className={styles[\"tripStoryDay-form-area \"]}>\r\n                    <DayBtn getDaySelect={getDaySelect} dayBtn={dayBtn}/>\r\n                    <DateSummary dayBtn={dayBtn} />\r\n                    <SpotItemList />\r\n                </div>\r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default TripStoryCreate;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-detail\\TripStoryDetail.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\footer\\Footer.js",["799","800","801","802","803"],[],"import React from \"react\";\r\n\r\nimport styles from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n    const publicUrl = process.env.PUBLIC_URL;\r\n    const imagePath = {\r\n        msgs: `${publicUrl}/images/common/msgs_logo.png`,\r\n        github: `${publicUrl}/images/common/github_logo.png`,\r\n        notion: `${publicUrl}/images/common/notion_logo.png`,\r\n    };\r\n\r\n    if (window.location.pathname === '/tripSchedule') return null\r\n\r\n    return (\r\n        <footer className={styles[\"footer\"]}>\r\n            <div className={styles[\"social-list\"]}>\r\n                <img className={styles[\"msgs-logo\"]} src={imagePath.msgs} />\r\n                <div className={styles[\"social-media\"]}>\r\n                    <span>\r\n                        <strong>마실가실 프로젝트 페이지</strong>\r\n                    </span>\r\n                    <div className={styles[\"social-media-icons\"]}>\r\n                        <a href=\"\">\r\n                            <span>GITHUB</span>\r\n                            <img src={imagePath.github} />\r\n                        </a>\r\n                        <a href=\"\">\r\n                            <span>NOTION</span>\r\n                            <img src={imagePath.notion} />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <p className={styles[\"copyright\"]}>\r\n                Copyright © 2023 by Team Little Nine. All rights reserved.\r\n            </p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripplace\\ReviewImgModal.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\header\\Header.js",["804"],[],"import React, { useState } from \"react\";\r\n\r\nimport styles from \"./Header.module.css\";\r\nimport LogoutModal from \"../logout/LogoutModal\";\r\n\r\nimport LogoutAll from \"../logout/LogoutAll\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    const [isLogIn, setIsLogIn] = useState(false);\r\n\r\n    const changeLoginHandler = (data) => {\r\n        setIsLogIn(data);\r\n    };\r\n    return (\r\n        <header className={styles[\"header\"]}>\r\n            <Link to={\"/\"}>\r\n                {/* <img\r\n                    className={styles[\"logo\"]}\r\n                    src={`${process.env.PUBLIC_URL}/images/common/msgs_logo.png`}\r\n                /> */}\r\n                <span className={styles[\"logo\"]}>마실가실</span>\r\n            </Link>\r\n            <nav className={styles[\"main-nav\"]}>\r\n              \r\n                <Link to={\"/tripschedule1\"}>여행 일정</Link>\r\n                <Link to={\"/tripstory\"}>여행 이야기</Link>\r\n                  {/* <Link to={\"/login\"}>로그인</Link>\r\n                <span onClick={onOpen}>로그아웃</span> */}\r\n               \r\n\r\n                {isLogIn ? (\r\n                    <LogoutAll changeLoginHandler={changeLoginHandler} />\r\n                ) : (\r\n                    <Link to=\"/login\">\r\n                        <span onClick={() => setIsLogIn(true)}>로그인</span>\r\n                    </Link>\r\n                )}\r\n\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\KaKaoCallback.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\LoginSocial.js",["805","806","807"],[],"import React from \"react\";\r\nimport styles from \"../../pages/login/LoginMain.module.css\";\r\nimport GoogleButton from \"./GoogleButton\";\r\nimport NaverLogin_social from \"./NaverLogin_social\";\r\nimport KakaoLogin_social from \"./KakaoLogin_social\";\r\nimport NaverLogin from \"./NaverLogin\";\r\n\r\nconst LoginSocial = () => {\r\n    return (\r\n        <div>\r\n            <div className={styles[\"social-icon\"]}>\r\n                <ul className={styles[\"social-icon-wrap\"]}>\r\n                    <KakaoLogin_social />\r\n                    <NaverLogin_social />\r\n                    <GoogleButton />\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginSocial;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-list\\TripStoryList.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\logout\\LogoutModal.js",["808"],[],"import React, { useState } from \"react\";\r\nimport styles from \"./LogoutModal.module.css\";\r\n\r\nconst LogoutModal = (props) => {\r\n    console.log(props);\r\n    const logoutHandler = () => {\r\n        props.changeLoginHandler(false);\r\n        props.onClose(false);\r\n    };\r\n    const onClose = () => {\r\n        props.onClose(false);\r\n    };\r\n    return (\r\n        <div className={styles[\"modal-background\"]}>\r\n            <div className={styles[\"modal-body\"]}>\r\n                <img\r\n                    className={styles[\"modal-close-btn\"]}\r\n                    src={process.env.PUBLIC_URL + \"/images/modal_close_btn.png\"}\r\n                    alt=\"closing icon\"\r\n                    onClick={onClose}\r\n                />\r\n                <div className={styles[\"confirm-text\"]}>\r\n                    <div className={styles[\"sub-msg\"]}>\r\n                        정말 로그아웃 하시겠습니까?\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles[\"modal-footer\"]}>\r\n                    <button\r\n                        onClick={onClose}\r\n                        className={styles[\"cancel-modal-btn\"]}\r\n                        style={{ color: \"black\" }}\r\n                    >\r\n                        <span>취소</span>\r\n                    </button>\r\n                    <button\r\n                        onClick={logoutHandler}\r\n                        className={styles[\"confirm-modal-btn\"]}\r\n                        style={{ color: \"white\" }}\r\n                    >\r\n                        <span>확인</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {/* {kakaoLogout ? null : <KakaoLogout_social />} */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogoutModal;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\TripScheduleAddModal.js",["809","810"],[],"import React, { useState } from 'react'\r\nimport { useQuery } from 'react-query'\r\nimport axios from 'axios'\r\n\r\nimport styleModal from \"./TripScheduleAddModal.module.css\";\r\n\r\nimport TripScheduleAddPlace from \"./TripScheduleAddPlace\";\r\nimport SelectedArea from \"./SelectedArea\";\r\n\r\nconst TripScheduleAddModal = ({ setAddPlaceModal, cityName }) => {\r\n\t\t\r\n\t// 현재 모달창 닫기\r\n\tconst closeModal = () => {\r\n\t\tsetAddPlaceModal(false)\r\n\t}\r\n\r\n    // 숙박-장소 탭 전환\r\n    const [isStaySelected, setIsStaySelected] = useState(true);\r\n    const stayChangeHandler = () => {\r\n        setIsStaySelected(true);\r\n    };\r\n    const placeChangeHandler = () => {\r\n        setIsStaySelected(false);\r\n    };\r\n\r\n    // 선택된 아이템 담을 배열\r\n    const [checkedPlaces, setCheckedPlaces] = useState([]);\r\n    const [checkedStay, setCheckedStay] = useState(\"\");\r\n\r\n    // 숙박 목록의 체크 버튼 클릭 시\r\n    const stayCheckHandler = (isChecked, id) => {\r\n        if (checkedStay !== id) {\r\n            setCheckedStay(id);\r\n        } else {\r\n            setCheckedStay(\"\");\r\n        }\r\n    };\r\n\r\n    // 장소 목록의 체크 버튼 클릭 시\r\n    const placeCheckHandler = (isChecked, id) => {\r\n        if (isChecked) {\r\n            if (checkedPlaces.length > 6) {\r\n                feedbackHandler();\r\n            } else {\r\n                setCheckedPlaces((prev) => [...prev, id]); // 선택\r\n            }\r\n        } else {\r\n            setCheckedPlaces(checkedPlaces.filter((el) => el !== id)); // 선택 해제\r\n        }\r\n    };\r\n\r\n    // 선택된 아이템 X 클릭 시\r\n    const removeHandler = (isStay, id) => {\r\n        if (isStay) {\r\n            setCheckedStay(\"\");\r\n        } else {\r\n            setCheckedPlaces(checkedPlaces.filter((el) => el !== id)); // 선택 해제\r\n        }\r\n    };\r\n\r\n    // 장소 7개 초과 선택 시 경고창\r\n    const [showFeedback, setShowFeedback] = useState(false);\r\n    // const [opacity, setOpacity] = useState(100); // 사라질 때 투명도 변화\r\n\r\n    // 함수 호출 시 창 띄웠다가 타임아웃 후 제거\r\n    const feedbackHandler = () => {\r\n        setShowFeedback(true);\r\n        setTimeout(() => {\r\n            setShowFeedback(false);\r\n        }, 1500);\r\n    };\r\n\r\n    return (\r\n        <div className={styleModal[\"modal-container\"]}>\r\n            <div className={styleModal[\"modal-wrapper\"]}>\r\n                <div className={styleModal[\"modal-top\"]}>\r\n                    {/* Search Container */}\r\n                    <div className={styleModal[\"modal-search\"]}>\r\n                        <span>\r\n                            <img\r\n                                className={styleModal[\"icon-search\"]}\r\n                                src={\r\n                                    process.env.PUBLIC_URL +\r\n                                    \"images/icon_search.png\"\r\n                                }\r\n                                alt=\"icon_search\"\r\n                            />\r\n                        </span>\r\n                        <div>\r\n                            <input\r\n                                className={styleModal[\"modal-input\"]}\r\n                                placeholder=\"관광지/맛집/숙소 검색\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <img\r\n                        className={styleModal[\"icon-close\"]}\r\n                        src={process.env.PUBLIC_URL + \"/images/icon_close.png\"}\r\n                        alt=\"icon_close\"\r\n                        onClick={closeModal}\r\n                    />\r\n                </div>\r\n\r\n                {/* Stay or Place Container */}\r\n                <div className={styleModal[\"modal-stay-place\"]}>\r\n                    <div\r\n                        className={`${styleModal[\"tab-btn\"]} ${\r\n                            isStaySelected && styleModal[\"selected\"]\r\n                        }`}\r\n                        onClick={stayChangeHandler}\r\n                    >\r\n                        <img\r\n                            src={\r\n                                process.env.PUBLIC_URL + \"images/icon_stay.png\"\r\n                            }\r\n                            alt=\"icon_stay\"\r\n                        />\r\n                        <span>숙박</span>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`${styleModal[\"tab-btn\"]} ${\r\n                            isStaySelected || styleModal[\"selected\"]\r\n                        }`}\r\n                        onClick={placeChangeHandler}\r\n                    >\r\n                        <img\r\n                            src={\r\n                                process.env.PUBLIC_URL + \"images/icon_place.png\"\r\n                            }\r\n                            alt=\"icon_place\"\r\n                        />\r\n                        <span>장소</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styleModal[\"stay-place-title\"]}>\r\n                    DAY 1 추천 {isStaySelected ? \"숙박\" : \"장소\"}\r\n                </div>\r\n\r\n                <TripScheduleAddPlace\r\n                    isStaySelected={isStaySelected}\r\n                    checkedItems={isStaySelected ? checkedStay : checkedPlaces}\r\n                    checkHandler={\r\n                        isStaySelected ? stayCheckHandler : placeCheckHandler\r\n                    }\r\n                />\r\n\r\n                <SelectedArea\r\n                    checkedStay={checkedStay}\r\n                    checkedPlaces={checkedPlaces}\r\n                    removeHandler={removeHandler}\r\n                />\r\n\r\n                <button\r\n                    className={styleModal[\"select-complete-btn\"]}\r\n                    onClick={closeModal}\r\n                >\r\n                    선택 완료\r\n                </button>\r\n            </div>\r\n\r\n            {showFeedback && (\r\n                <div\r\n                    className={styleModal[\"feedback-box\"]}\r\n                    // style={{ opacity: `${opacity}` }}\r\n                >\r\n                    장소는 7개까지 선택할 수 있습니다.\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TripScheduleAddModal;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\restaurant\\restaurant-data\\RestaurantData.js",["811","812","813"],[],"import React, { useEffect, useState } from 'react';\r\nimport RestaurantItem from '../RestaurantItem';\r\nimport styles from './RestaurantData.module.css';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RestaurantData = () => {\r\n    const API_KEY = 'tubCNUm%2FYUF%2FD2wDWLTebna0yukLqBKsQTPu4iAlmY0F26uG428F0QRxe%2ByLehqGeulixiTmPSWWEO3V18Tuxg%3D%3D';\r\n\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(1); // 현재 페이지 번호 (페이지네이션)\r\n\r\n    const [ref, inView] = useInView();\r\n\r\n  \r\n    async function getData() {\r\n      try {\r\n        const url = `https://apis.data.go.kr/B551011/KorService1/locationBasedList1?MobileOS=ETC&MobileApp=MSGS&numOfRows=12&pageNo=${page}&mapX=128.8321&mapY=37.751853&radius=200000&contentTypeId=39&serviceKey=${API_KEY}&_type=json`;\r\n        const response = await fetch(url);\r\n        const result = await response.json();\r\n        const items = result.response.body.items.item;\r\n        setData((prevData) => [...prevData, ...items]);\r\n        // 요청 성공 시에 페이지에 1 카운트 해주기\r\n        setPage((page) => page + 1);\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n  \r\n    useEffect(() => {\r\n      getData();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      // inView가 true 일때만 실행한다.\r\n      if (inView) {\r\n        console.log(inView, '무한 스크롤 요청 🎃')\r\n        getData();\r\n      }\r\n    }, [inView]);\r\n  \r\n    if (!data) {\r\n      return <div>Loading…</div>;\r\n    }\r\n  \r\n    // console.log(data.firstimage);\r\n\r\n    const filteredData = data.reduce((uniqueData, item) => {\r\n      if (item && item.firstimage !== '' && !uniqueData.some((dataItem) => dataItem.title.trim() === item.title.trim())) {\r\n        uniqueData.push(item);\r\n      }\r\n      return uniqueData;\r\n    }, []);\r\n    \r\n  \r\n  \r\n      \r\n    return (\r\n        <div className={styles[\"main-wrapper\"]}>\r\n            <p className={styles[\"trip-story-list-title\"]}>맛집🥑</p>\r\n            <p className={styles[\"trip-story-list-sub-title\"]}>\r\n                직접 다녀온 찐 맛집 확인하기\r\n            </p>\r\n\r\n            <div className={styles[\"items-wrapper\"]}>\r\n                {\r\n                    filteredData.map((item, index) => ( \r\n                    <RestaurantItem\r\n                        key={index}\r\n                        title={item.title}\r\n                        firstimage={item.firstimage}\r\n                        firstimage2={item.firstimage2}\r\n                        addr1={item.addr1}\r\n                        addr2={item.addr2}\r\n                        tel={item.tel}\r\n                    />\r\n            ))}\r\n             \r\n            </div>\r\n            <div ref={ref}></div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default RestaurantData;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\TripSchedule1.js",["814","815"],[],"import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport SearchBar from './SearchBar'\r\nimport FamousCity from './FamousCity'\r\nimport Events from '../../../main/main-top/Events'\r\nimport CitiesData from './CitiesData'\r\n\r\nimport mainStyles from '../../../main/Main.module.css'\r\nimport styles from './FamousCity.module.css'\r\n\r\nconst TripSchedule1 = () => {\r\n\t//개발 시 빠른 이해 위한 데이터.\r\n\tconst sampleData = {\r\n\t\tareaId: 2,\r\n\t\tareaCode: 32,\r\n\t\tsigunguCode: [1, 5, 7],\r\n\t\tareaTitle: '강릉&#183;속초',\r\n\t\tsubTitle: '강릉, 속초, 양양',\r\n\t\tmapLat: 37.773466, //위도\r\n\t\tmapLon: 128.920264, //경도\r\n\t\timageUrl: 'https://kr.object.ncloudstorage.com/msgs-file-server/cities-image/famous-city-gangreung.webp',\r\n\t}\r\n\tconst [citiesData, setCitiesData] = useState([...CitiesData])\r\n\r\n\tconst [searchId, setSearchId] = useState('')\r\n\tconst getSearchValue = (e) => {\r\n\t\tsetSearchId(e.target.value.toLowerCase())\r\n\t}\r\n\r\n\tconst searchedCity = citiesData.filter((item) => item.areaTitle.toLowerCase().includes(searchId))\r\n\r\n\tconst [selectedCity, setSelectedCity] = useState(null)\r\n\r\n\tlet navigate = useNavigate()\r\n\r\n\tconst imgClick = (areaId) => {\r\n\t\tsetSelectedCity(areaId) //클릭한 도시의 css 변경\r\n\t\tconst selectedCity = citiesData.filter((item) => item.areaId === areaId)[0]\r\n\t\tnavigate('/tripschedule2', {\r\n\t\t\tstate: { selectedCity:  selectedCity},\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`${mainStyles['width-wrapper']} ${styles['tripSchedule-wrapper']}`}>\r\n\t\t\t<SearchBar getSearchValue={getSearchValue} />\r\n\t\t\t{/*<FamousCity />*/}\r\n\t\t\t<FamousCity searchedCity={searchedCity} selectedCity={selectedCity} imgClick={imgClick} />{' '}\r\n\t\t\t{/* citiesData={citiesData} */}\r\n\t\t\t<Events />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TripSchedule1\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\DayPlan.js",["816"],[],"import React, { useState, useEffect } from 'react'\r\nimport style from './DayPlan.module.css'\r\nimport ScheduleLineAndBlock from './ScheduleLineAndBlock'\r\nimport TripScheduleAddModal from './modal/TripScheduleAddModal'\r\n\r\nexport default function DayPlan({ orderDay, date, planList, planListHandler, setEditMode, cityName, selectedDay}) {\r\n\t// 장소 추가모달창 state\r\n\tconst [addPlaceModal, setAddPlaceModal] = useState(false)\r\n\r\n\t// 장소 추가 버튼 눌렀을 때 -> 장소모달창 노출\r\n\tconst showAddPlaceModal = () => {\r\n\t\tsetAddPlaceModal(true)\r\n\t}\r\n\r\n\t/*편집 버튼 눌렀을 때*/\r\n\tconst toggleEditMode = () => {\r\n\t\tsetEditMode((prevMode) => !prevMode)\r\n\t}\r\n\r\n\t/*메모 추가 버튼 눌렀을 때*/\r\n\tconst addMemoBlock = () =>\r\n\t\tplanListHandler((prevList) => [\r\n\t\t\t// ...prevList[orderDay],\r\n\t\t\t// { order: prevList.length + 1, placeOrder: null, type: 'memo', title: '', subtitle: null, isChecked: false },\r\n\t\t])\r\n\r\n\treturn (\r\n\t\t<div className={style['dayplan']}>\r\n\t\t\t<div className={style['day-title-wrapper']}>\r\n\t\t\t\t<p className={style['day-title']}>\r\n\t\t\t\t\t<span className={style['text-first']}>DAY {orderDay}</span>\r\n\t\t\t\t\t<span className={style['text-second']}>{date}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t{orderDay === 1 && ( //DAY1 블록일 경우 편집버튼 추가함.\r\n\t\t\t\t\t<div className={style['edit-button-wrapper']} onClick={toggleEditMode}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName={style['edit-button']}\r\n\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + 'images/icon_edit_pencil.png'}\r\n\t\t\t\t\t\t\talt='icon_edit_pencil'></img>\r\n\t\t\t\t\t\t<span className={style['edit-button-text']}>편집</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className={style['schedule-block-wrapper']}>\r\n\t\t\t\t{/* 라인과 블록 쌍 컴포넌트들이 들어감 */}\r\n\t\t\t\t{planList[orderDay]?.map((item, index) => (\r\n\t\t\t\t\t<ScheduleLineAndBlock\r\n\t\t\t\t\t\tkey={index + 1}\r\n\t\t\t\t\t\torder={item.order}\r\n\t\t\t\t\t\tplaceOrder={item.placeOrder}\r\n\t\t\t\t\t\ttype={item.type}\r\n\t\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\t\tsubtitle={item.subtitle}\r\n\t\t\t\t\t\tplanList={planList}\r\n\t\t\t\t\t\tplanListHandler={planListHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t{/* 라인과 블록 쌍 끝 */}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={style['button-wrapper']}>\r\n\t\t\t\t<button className={style['button-add-place']} onClick={showAddPlaceModal}>\r\n\t\t\t\t\t장소 추가\r\n\t\t\t\t</button>\r\n\t\t\t\t{/* 모달창 띄움 */}\r\n\t\t\t\t{addPlaceModal && <TripScheduleAddModal setAddPlaceModal={setAddPlaceModal} cityName={cityName} />}\r\n\r\n\t\t\t\t<button className={style['button-add-memo']} onClick={addMemoBlock}>\r\n\t\t\t\t\t메모 추가\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\Map.js",["817","818","819","820","821","822"],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\SelectedPlaceList.js",["823","824"],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\StickyBanner.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\DayPlanEditMode.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\JoinMember.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\signup\\NickNameButton.js",["825"],[],"import React, { useReducer } from \"react\";\r\nimport styles from \"./nickname.module.css\";\r\n\r\nconst NickNameButton = (props) => {\r\n    //const nickname = props.getNickName;\r\n    console.log(props);\r\n\r\n    const isNicknameValid = props.nickname.trim().length !== 0; //닉네임이 공백이 아닌지 확인\r\n\r\n    return (\r\n        <div className={styles[\"ok-btn-area\"]}>\r\n            <div className={styles[\"nickname-ok-btn\"]}>\r\n                <button disabled={!isNicknameValid} onClick={props.onNext}>\r\n                    확인\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NickNameButton;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-search\\FlightAroundTrip.js",["826","827","828"],[],"import React, { useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport styles from \"./FlightAroundTrip.module.css\";\r\nimport TripSchedule2 from \"../../tripschedule/tripschedule2/TripSchedule2\";\r\nimport Calendar2 from \"../../tripschedule/tripschedule2/Calendar2\";\r\n\r\nconst FlightAroundTrip = (props) => {\r\n  const [selectedStartDate, setSelectedStartDate] = useState(null);\r\n  const [selectedEndDate, setSelectedEndDate] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleDateSelect = (startDate, endDate) => {\r\n    setSelectedStartDate(startDate);\r\n    setSelectedEndDate(endDate);\r\n    onFlightData(startDate, endDate); // 데이터를 부모 컴포넌트로 전달\r\n  };\r\n\r\n  const formattedStartDate = selectedStartDate ? format(selectedStartDate, 'yyyyMMdd') : '';\r\n  const formattedEndDate = selectedEndDate ? format(selectedEndDate, 'yyyyMMdd') : '';\r\n  \r\n  const onFlightData = (formattedStartDate, formattedEndDate) => {\r\n    // 데이터를 부모 컴포넌트로 전달하는 처리를 여기에 작성\r\n    console.log(\"Flight Data:\", formattedStartDate, formattedEndDate);\r\n    // 예: props.onFlightData(startDate, endDate);\r\n  };\r\n\r\n  const selectedSeats = [];\r\n  if (props.showCheckImageN) {\r\n    selectedSeats.push(\"일반석\");\r\n  }\r\n  if (props.showCheckImageB) {\r\n    selectedSeats.push(\"비즈니스석\");\r\n  }\r\n\r\n  let seatOutput = \"\";\r\n  if (selectedSeats.length === 1) {\r\n    seatOutput = selectedSeats[0];\r\n  } else if (selectedSeats.length > 1) {\r\n    seatOutput = `${selectedSeats[0]} 외`;\r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"flight-around-trip\"]}>\r\n      <div onClick={props.selectFromAirportHandler} className={styles[\"from-airport\"]}>\r\n        <img src={process.env.PUBLIC_URL + \"/images/icon_location.png\"} alt=\"icon_location\" />\r\n        {props.fromKorAirport}\r\n      </div>\r\n\r\n      <div onClick={props.selectToAirportHandler} className={styles[\"to-airport\"]}>\r\n        <img src={process.env.PUBLIC_URL + \"/images/icon_location.png\"} alt=\"icon_location\" />\r\n        {props.toKorAirport}\r\n      </div>\r\n\r\n      <div className={styles[\"day-going-coming\"]}>\r\n        {props.isRoundTrip ? (\r\n          <>\r\n            <div className={styles[\"day-going\"]}>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/icon_event_calendar.png\"}\r\n                alt=\"icon_event_calendar\"\r\n                onClick={() => setIsModalOpen(!isModalOpen)}\r\n              />\r\n              {isModalOpen && (\r\n                <Calendar2 onClose={() => setIsModalOpen(false)} onDateSelect={handleDateSelect} />\r\n              )}\r\n              {selectedStartDate !== '출발날짜' && selectedStartDate && (\r\n                <div>{format(selectedStartDate, 'yyyy-MM-dd')}</div>\r\n              )}\r\n            </div>\r\n\r\n\r\n            <div className={styles[\"day-coming\"]}>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/icon_event_calendar.png\"}\r\n                alt=\"icon_event_calendar\"\r\n                onClick={() => setIsModalOpen(!isModalOpen)}\r\n              />\r\n              {selectedEndDate !== '도착날짜' && selectedEndDate && (\r\n                <div>{format(selectedEndDate, 'yyyy-MM-dd')}</div>\r\n              )}\r\n            </div>\r\n\r\n          </>\r\n        ) : (\r\n          <div className={styles[\"day-oneway\"]}>\r\n            <img src={process.env.PUBLIC_URL + \"/images/icon_event_calendar.png\"} alt=\"icon_event_calendar\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className={styles[\"boarding-info\"]} onClick={props.selectBoardingInfoHandler}>\r\n        <img src={process.env.PUBLIC_URL + \"/images/icon_person.png\"} alt=\"icon_person\" />\r\n        {props.countAdult > 0 ? `성인 ${props.countAdult}명 ` : ``}\r\n        {props.countInfant > 0 ? `소아 ${props.countInfant}명 ` : ``}\r\n        {props.countChild > 0 ? `유아 ${props.countChild}명 ` : ``}ㆍ\r\n        {seatOutput}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightAroundTrip;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-create\\WriteForm.js",["829","830"],[],"import React, { useEffect, useState } from 'react';\r\nimport StarRating from '../../../components/tripstory/tripstory-create/common/StarRating';\r\nimport UploadPhoto from '../../../components/tripstory/tripstory-create/tripstory-create-upload/UploadPhoto';\r\nimport styles from './WriteForm.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n//tripstory 글작성 페이지의 주요 기능들이 있는 컴포넌트입니다.\r\n\r\nconst WriteForm = () => {\r\n    \r\n\r\n    const check = \"write\";\r\n    const [writeRating, setWiteRating] = useState(0)\r\n\r\n    const tripStoryData = useSelector((state) => state.tripStory.tripStoryData);\r\n\r\n\r\n       \r\n    useEffect(() => {\r\n        setWiteRating(tripStoryData.rating);    \r\n    }, []);\r\n    \r\n    \r\n   \r\n    return (\r\n        <>\r\n            {/* <UploadBoard /> */}\r\n            <div  className={styles[\"tripstory-title\"]}>\r\n                <input type=\"text\"  placeholder=\"여행 이야기 제목(필수)\" value={tripStoryData.title}/>\r\n            </div>\r\n            <div className={styles[\"star-score-area\"]}>\r\n                <div className={styles[\"trip-score-ment\"]}>이번 여행 이야기의 총 평점을 입력해주세요.</div>\r\n                <StarRating rating={writeRating} setRating={setWiteRating} /> {/* 별점 매기기 컴포넌트 */}    \r\n            </div>\r\n            \r\n            <div className={styles['tripstory-content']} >\r\n                <textarea placeholder='이번 여행은 어떤 여행이었나요?' value={tripStoryData.content}/>\r\n            </div>\r\n            <UploadPhoto check={check}/> {/* 사진 첨부 버튼 */}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WriteForm;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-list\\FlightList.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-search\\ToFlightSelect.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempUserList.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempUserDelete.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\temp-user\\TempUserUpdate.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocTop.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocSubSection.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocContainerEvent.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocMap.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocReview.js",["831","832"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport styles from \"./LocReview.module.css\";\r\n// 추천순 정렬로 가져오기\r\nimport reviewDataLike from \"./ReviewDummyData\";\r\n// 최신순 정렬로 가져오기\r\nimport reviewDataDate from \"./ReviewDummyData copy\";\r\n\r\nimport ReviewItem from \"./ReviewItem\";\r\n\r\nconst LocReview = () => {\r\n    // 추천순, 최신순 정렬\r\n    const [isSortedByLike, setIsSortedByLike] = useState(true);\r\n    const reviewData = isSortedByLike ? reviewDataLike : reviewDataDate;\r\n\r\n    const sortClickHandler = (isLikeSort) => {\r\n        isLikeSort ? setIsSortedByLike(true) : setIsSortedByLike(false);\r\n    };\r\n\r\n    // 리뷰 좋아요 버튼 클릭 시, 이벤트 발생\r\n    const [isLike, setIsLike] = useState(false);\r\n\r\n    const likeChangeHandler = () => {\r\n        setIsLike((prevState) => !prevState);\r\n    };\r\n\r\n    // 리뷰 더보기 기능\r\n    const reviewCnt = reviewData.length;\r\n    const [leftReview, setLeftReview] = useState(reviewCnt - 2);\r\n\r\n    const moreReviewClickHandler = () => {\r\n        if (leftReview > 0) {\r\n            setLeftReview(leftReview - 2);\r\n        } else {\r\n            setLeftReview(reviewCnt - 2);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"review\" className={styles[\"review-container\"]}>\r\n            <div className={styles[\"review-container-header\"]}>\r\n                <img\r\n                    src=\"https://assets.triple.guide/images/btn-com-write@2x.png\"\r\n                    className={styles[\"review-write-icon\"]}\r\n                    alt=\"icon_review_write\"\r\n                />\r\n                <span className={styles[\"review-title\"]}>\r\n                    리뷰\r\n                    <span className={styles[\"review-cnt\"]}>{reviewCnt}</span>\r\n                </span>\r\n            </div>\r\n            <div className={styles[\"review-filter-wrap\"]}>\r\n                <div className={styles[\"review-filter-left\"]}>\r\n                    <button\r\n                        className={`${styles[\"review-filter-btn\"]} ${\r\n                            isSortedByLike && styles[\"review-filter-selected\"]\r\n                        }`}\r\n                        onClick={() => sortClickHandler(true)}\r\n                    >\r\n                        추천순\r\n                    </button>\r\n                    <button\r\n                        className={`${styles[\"review-filter-btn\"]} ${\r\n                            isSortedByLike || styles[\"review-filter-selected\"]\r\n                        }`}\r\n                        onClick={() => sortClickHandler(false)}\r\n                    >\r\n                        최신순\r\n                    </button>\r\n                </div>\r\n                {/* <div className={styles[\"review-filter-right\"]}>\r\n                    <div className={styles[\"review-filter-check\"]}>\r\n                        <input\r\n                            readOnly=\"\"\r\n                            type=\"checkbox\"\r\n                            className={styles[\"review-input-checkbox\"]}\r\n                        />\r\n                        <div className={styles[\"review-checkbox-label\"]}>\r\n                            최근 여행\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles[\"review-marker\"]}>\r\n                        <img\r\n                            src=\"https://assets.triple.guide/images/ico_tooltip_info_black@4x.png\"\r\n                            className={styles[\"review-checkbox-icon\"]}\r\n                            alt=\"icon_review_marker\"\r\n                        />\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n\r\n            {/* 리뷰 목록 */}\r\n            <ul className={styles[\"review-container-list\"]}>\r\n                {reviewData.slice(0, reviewCnt - leftReview).map((item) => (\r\n                    <ReviewItem\r\n                        key={item.reviewId}\r\n                        item={item}\r\n                        isLike={isLike}\r\n                        likeChangeHandler={likeChangeHandler}\r\n                    />\r\n                ))}\r\n            </ul>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className={styles[\"review-more-btn\"]}\r\n                onClick={moreReviewClickHandler}\r\n            >\r\n                {leftReview > 0 ? (\r\n                    <span>{leftReview}개의 리뷰 더보기</span>\r\n                ) : (\r\n                    <span>리뷰 접기</span>\r\n                )}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocReview;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocRelated.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\common\\StickyBanner.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-search\\FromFlightSelect.js",["833"],[],"import React from \"react\";\r\nimport items from \"../flight-data/AirportData\";\r\nimport styles from \"./FromFlightSelect.module.css\";\r\nimport FlightAroundTrip from \"./FlightAroundTrip\";\r\n\r\nconst FromFlightSelect = (props) => {\r\n  const airportSelectHandlers = (kor, eng) => {\r\n    props.selectedFromAirportHandler();\r\n    props.fromAirportHandlerKor(kor);\r\n    props.fromAirportHandler(eng);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles[\"width-wrapper\"]}>\r\n      <div className={styles[\"flight-select-box\"]}>\r\n        <input type=\"text\" placeholder=\"도시, 공항명 검색\" />\r\n        <span>\r\n          <img src={process.env.PUBLIC_URL + '/images/icon_close.png'} alt=\"icon_close\" />\r\n        </span>\r\n      </div>\r\n\r\n\r\n\r\n      {items.map((data) => (\r\n        <div\r\n          className={styles[\"airport-select-items\"]}\r\n          key={data.id}\r\n          onClick={() => airportSelectHandlers(data.kor, data.eng)}\r\n        >\r\n          <div className={styles[\"airport-select-box\"]}>\r\n            <div className={styles[\"airport-select-box-location\"]}>\r\n              {data.location}\r\n            </div>\r\n            <div className={styles[\"airport-select-box-eng\"]}>{data.eng}</div>\r\n            <div className={styles[\"airport-select-box-bar\"]}>│</div>\r\n            <div className={styles[\"airport-select-box-kor\"]}>{data.kor}</div>\r\n          </div>\r\n          <div className={styles[\"airport-select-box-line\"]}></div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FromFlightSelect;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\trip-list\\RcmdTrips.js",["834","835","836"],[],"import React, { useEffect, useReducer, useState } from \"react\";\r\n\r\nimport styles from \"./RcmdTrips.module.css\";\r\nimport RcmdTripItem from \"./RcmdTripItem\";\r\n\r\nimport items from \"../flight-data/FlightItemsData\";\r\n\r\nconst RcmdTrips = () => {\r\n  return (\r\n    <div>\r\n      <p className={styles[\"RcmdTrips-title\"]}>인기 급상승 국내 여행지</p>\r\n      <section className={styles[\"section-RcmdTrips\"]}>\r\n        {items.map((data) => (\r\n          <RcmdTripItem\r\n            key={data.id}\r\n            text1={data.text1}\r\n            text2={data.text2}\r\n            image={data.image}\r\n          />\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RcmdTrips;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-search\\BoardingInfoSelect.js",["837"],[],"import React, { useState } from \"react\";\r\n\r\nimport styles from \"./BoardingInfoSelect.module.css\";\r\n\r\nconst BoardingInfoSelect = (props) => {\r\n  return (\r\n    <div className={styles[\"width-wrapper\"]}>\r\n      <div className={styles[\"width-wrapper-inner\"]}>\r\n        {/* 인원 선택 */}\r\n        <div className={styles[\"width-wrapper-inner-left\"]}>\r\n          {/* 성인 */}\r\n          <div className={styles[\"boarding-info-num\"]}>\r\n            <div\r\n              className={styles[\"boarding-info-num-left\"]}\r\n              onClick={props.subAdultHandler}\r\n            >\r\n              -\r\n            </div>\r\n            <div className={styles[\"boarding-info-num-center\"]}>\r\n              <div className={styles[\"boarding-info-num-center-top\"]}>\r\n                성인 {props.countAdult}명\r\n              </div>\r\n              <div className={styles[\"boarding-info-num-center-bottom\"]}>\r\n                만 12세 이상\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={styles[\"boarding-info-num-right\"]}\r\n              onClick={props.addAdultHandler}\r\n            >\r\n              +\r\n            </div>\r\n          </div>\r\n\r\n          {/* 소아 */}\r\n          <div className={styles[\"boarding-info-num\"]}>\r\n            <div\r\n              className={styles[\"boarding-info-num-left\"]}\r\n              onClick={props.subInfantHandler}\r\n            >\r\n              -\r\n            </div>\r\n            <div className={styles[\"boarding-info-num-center\"]}>\r\n              <div className={styles[\"boarding-info-num-center-top\"]}>\r\n                소아 {props.countInfant}명\r\n              </div>\r\n              <div className={styles[\"boarding-info-num-center-bottom\"]}>\r\n                만 12세 미만\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={styles[\"boarding-info-num-right\"]}\r\n              onClick={props.addInfantHandler}\r\n            >\r\n              +\r\n            </div>\r\n          </div>\r\n\r\n          {/* 유아 */}\r\n          <div className={styles[\"boarding-info-num\"]}>\r\n            <div\r\n              className={styles[\"boarding-info-num-left\"]}\r\n              onClick={props.subChildHandler}\r\n            >\r\n              -\r\n            </div>\r\n            <div className={styles[\"boarding-info-num-center\"]}>\r\n              <div className={styles[\"boarding-info-num-center-top\"]}>\r\n                유아 {props.countChild}명\r\n              </div>\r\n              <div className={styles[\"boarding-info-num-center-bottom\"]}>\r\n                만 12세 미만\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={styles[\"boarding-info-num-right\"]}\r\n              onClick={props.addChildHandler}\r\n            >\r\n              +\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 좌석 선택 */}\r\n        <div className={styles[\"width-wrapper-inner-right\"]}>\r\n          <div\r\n            className={styles[\"width-wrapper-inner-right-inner\"]}\r\n            onClick={props.CheckImgHandlerN}\r\n          >\r\n            <div className={styles[\"width-wrapper-inner-right-inner-text\"]}>\r\n              일반석\r\n            </div>\r\n            {props.showCheckImageN && (\r\n              <img\r\n                className={styles[\"width-wrapper-inner-right-inner-img\"]}\r\n                src={process.env.PUBLIC_URL + '/images/icon_check.png'}\r\n                alt=\"icon_check\"\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          \r\n\r\n          <div\r\n            className={styles[\"width-wrapper-inner-right-inner\"]}\r\n            onClick={props.CheckImgHandlerB}\r\n          >\r\n            <div className={styles[\"width-wrapper-inner-right-inner-text\"]}>\r\n              비즈니스석\r\n            </div>\r\n            {props.showCheckImageB && (\r\n              <img\r\n                className={styles[\"width-wrapper-inner-right-inner-img\"]}\r\n                src={process.env.PUBLIC_URL + '/images/icon_check.png'}\r\n                alt=\"icon_check\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles[\"boarding-info-select-complete-btn\"]} onClick={props.selectedBoardingInfoHandler}>선택 완료</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardingInfoSelect;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\Events.js",["838"],[],"import React, { useEffect, useReducer, useState } from \"react\";\r\n\r\nimport styles from \"./MainTop.module.css\";\r\nimport EventItem from \"./EventItem\";\r\nimport Loading from \"../../../components/common/Loading\";\r\n\r\n\r\nconst Events = () => {\r\n    \r\n    const API_KEY = 'tubCNUm%2FYUF%2FD2wDWLTebna0yukLqBKsQTPu4iAlmY0F26uG428F0QRxe%2ByLehqGeulixiTmPSWWEO3V18Tuxg%3D%3D';\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n  \r\n    async function getData() {\r\n      try {\r\n        const url = `https://apis.data.go.kr/B551011/KorService1/locationBasedList1?MobileOS=ETC&MobileApp=MSGS&mapX=128.8321&mapY=37.751853&radius=200000&contentTypeId=25&serviceKey=${API_KEY}&_type=json`;\r\n        const response = await fetch(url);\r\n        const result = await response.json();\r\n        const items = result.response.body.items.item;\r\n\r\n        setData(items);\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n  \r\n    useEffect(() => {\r\n      getData();\r\n    }, []);\r\n  \r\n    if (!data) {\r\n      return <Loading />\r\n    }\r\n  \r\n    console.log(data.firstimage);\r\n\r\n    const filteredData = data.filter((item) => item.firstimage !== '');\r\n    \r\n    \r\n      \r\n    return (\r\n        <section className={styles[\"section-event\"]}>\r\n            \r\n        {\r\n            filteredData.map((item, index) => index < 3 && (\r\n            <EventItem\r\n            key={index}\r\n            title={item.title}\r\n            firstimage={item.firstimage}\r\n            />\r\n        ))}\r\n\r\n               \r\n            \r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Events;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\IconMenu.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule2\\Calendar.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-recommend\\BestReviews.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-recommend\\Best6.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-list\\FlightItem.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\MainMenu.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\GoogleButton.js",["839","840"],[],"import { GoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\r\nimport styles from \"../../pages/login/LoginMain.module.css\";\r\nimport { useGoogleLogin } from \"react-google-login\";\r\nimport axios from \"axios\";\r\n\r\nconst GoogleButton = () => {\r\n    return (\r\n        <GoogleOAuthProvider\r\n            clientId={`${process.env.REACT_APP_GOOGLE_CLIENT_ID}`}\r\n        >\r\n            <GoogleLogin\r\n                clientId={`${process.env.REACT_APP_GOOGLE_CLIENT_ID}`}\r\n                onSuccess={(res) => console.log(res, \"성공\")}\r\n                onFailure={(res) => console.log(res, \"실패\")}\r\n                render={(renderProps) => (\r\n                    <button\r\n                        className={styles[\"google-icon\"]}\r\n                        onClick={renderProps.onClick}\r\n                        disabled={renderProps.disabled}\r\n                    >\r\n                        <img\r\n                            src={\r\n                                process.env.PUBLIC_URL +\r\n                                \"/images/google_btn.png\"\r\n                            }\r\n                            alt=\"Google Icon\"\r\n                        ></img>\r\n                    </button>\r\n                )}\r\n            />\r\n        </GoogleOAuthProvider>\r\n    );\r\n};\r\n\r\nexport default GoogleButton;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\restaurant\\RestaurantItem.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-detail\\TripStoryDetailComment.js",["841","842"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport stylesStoryComment from \"./TripStoryDetailComment.module.css\";\r\n\r\nconst TripStoryDetailComment = (props) => {\r\n  const [countComment, setCountComment] = useState(\"\");\r\n  const [storyComments, setStoryComments] = useState([]);\r\n\r\n  const countCommentHandler = (event) => {\r\n    setCountComment(event.target.value);\r\n  };\r\n\r\n  const lengthComment = countComment.length;\r\n\r\n  const isFetchedRef = useRef(false); // 중복 호출 방지\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // fetch 함수: 데이터 호출\r\n      // await를 사용하여 응답 대기 → 응답 데이터를 JSON 형식으로 변환 후에 storyComment 업데이트\r\n      try {\r\n        const response = await fetch(\"/tripstory/detail\");\r\n        const data = await response.json();\r\n        setStoryComments(data);\r\n        props.getCmntLengthHandler(data.length);\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    if (!isFetchedRef.current) {\r\n      fetchData();\r\n      isFetchedRef.current = true;\r\n      // setStoryComment에 따른 중복 호출 방지\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* 댓글 입력창 */}\r\n      <div\r\n        className={stylesStoryComment[\"tripstory-comment-container-wrapper\"]}\r\n      >\r\n        <div className={stylesStoryComment[\"tripstory-comment-container-top\"]}>\r\n          <div\r\n            className={stylesStoryComment[\"tripstory-comment-container-left\"]}\r\n          >\r\n            <img\r\n              src=\"https://media.triple.guide/triple-cms/c_limit,f_auto,h_2048,w_2048/21523219-39bc-46fc-8735-1c70f908281b.jpeg\"\r\n              alt=\"userImg\"\r\n            />\r\n          </div>\r\n          <div\r\n            className={stylesStoryComment[\"tripstory-comment-container-right\"]}\r\n            onChange={countCommentHandler}\r\n          >\r\n            <textarea\r\n              title=\"comment\"\r\n              rows={5}\r\n              cols={94}\r\n              placeholder=\"내용을 입력해주세요 (로그인 여부에 따른 유효성 검사?)\"\r\n              maxLength={500}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={stylesStoryComment[\"tripstory-comment-container-bottom\"]}\r\n        >\r\n          {lengthComment} / 500\r\n        </div>\r\n      </div>\r\n\r\n      {/* 댓글 등록 버튼 */}\r\n      <div className={stylesStoryComment[\"tripstory-comment-submit-btn-div\"]}>\r\n        <div className={stylesStoryComment[\"tripstory-comment-submit-btn\"]}>\r\n          댓글 등록\r\n        </div>\r\n      </div>\r\n\r\n      {/* 댓글 조회 */}\r\n      <div className={stylesStoryComment[\"tripstory-comment-area\"]}>\r\n        {storyComments.length > 0 ? (\r\n          storyComments.map((comment) => (\r\n            <div\r\n              key={comment.id} // 각 댓글의 고유한 키 값 설정 (예: comment.id)\r\n              className={stylesStoryComment[\"tripstory-comment\"]}\r\n            >\r\n              <div className={stylesStoryComment[\"tripstory-comment-left\"]}>\r\n                <img\r\n                  src=\"https://media.triple.guide/triple-cms/c_limit,f_auto,h_2048,w_2048/21523219-39bc-46fc-8735-1c70f908281b.jpeg\"\r\n\r\n                  alt=\"userImg\"\r\n                />\r\n              </div>\r\n              <div className={stylesStoryComment[\"tripstory-comment-right\"]}>\r\n                <div\r\n                  className={stylesStoryComment[\"tripstory-comment-right-top\"]}\r\n                >\r\n                  {comment.userId}\r\n\r\n                </div>\r\n                <div\r\n                  className={\r\n                    stylesStoryComment[\"tripstory-comment-right-bottom\"]\r\n                  }\r\n                >\r\n                  {comment.content}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className={stylesStoryComment[\"tripstory-comment-none\"]}>\r\n            (댓글이 아무것도 없을 때(props length로 넘겨받기))\r\n            <p>아직 댓글이 없어요.</p>\r\n            <p>가장 먼저 댓글을 작성해보세요!</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TripStoryDetailComment;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\NaverLogin_social.js",["843","844"],[],"import React from \"react\";\r\nimport styles from \"../../pages/login/LoginMain.module.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NaverLogin_social = () => {\r\n    const navigate = useNavigate();\r\n    // const _clickSnsLoginNaver = (e) => {\r\n    //     let naverid = e.asVak1am3wGx2kr2bgwM; // 네이버에서 제공한 ID\r\n    // };\r\n    const NAVER_CLIENT_ID = `${process.env.REACT_APP_NAVER_CLIENT_ID}`;\r\n    const REDIRECT_URI = `${process.env.REACT_APP_REDIRECT_NAVER_URL}`;\r\n    const STATE = \"false\";\r\n    const NAVER_AUTH_URL = `https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=${NAVER_CLIENT_ID}&state=${STATE}&redirect_uri=${REDIRECT_URI}`;\r\n\r\n    const naver = () => {\r\n        window.location.href = NAVER_AUTH_URL;\r\n    };\r\n\r\n    //callback\r\n    useEffect(() => {\r\n        let code = new URL(window.location.href).searchParams.get(\"code\");\r\n        console.log(code);\r\n    });\r\n    return (\r\n        <div>\r\n            <li className={styles[\"naver-icon\"]} onClick={naver}>\r\n                <img\r\n                    src={\r\n                        process.env.PUBLIC_URL +\r\n                        \"/images/auth_social_naver_round_btn.png\"\r\n                    }\r\n                ></img>\r\n            </li>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NaverLogin_social;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\logout\\KakaoLogout_social.js",["845","846"],[],"import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst KakaoLogout_social = () => {\r\n    // useEffect(() => {\r\n    //     app.get(\"/auth/kakao/unlink\", authMiddleware, async (req, res) => {\r\n    //         const { session } = req;\r\n    //         const { access_token } = session.authData.kakao;\r\n\r\n    //         // 요청 - axios 비동기로 요청하기 (async 필요)\r\n    //         // 카카오에게 접속을 종료하겠다는 것을 요청하겠다 - 그걸 unlink에 담는다\r\n    //         // 요청 실패시를 대비해서 try catch 문을 사용했다.\r\n    //         let unlink;\r\n    //         try {\r\n    //             unlink = await axios({\r\n    //                 //Promise 객체를 unlink에 넘겨주고\r\n    //                 method: \"POST\",\r\n    //                 url: \"https://kapi.kakao.com/v1/user/unlink\",\r\n    //                 headers: {\r\n    //                     Authorization: `Bearer ${access_token}`,\r\n    //                 },\r\n    //             });\r\n    //         } catch (error) {\r\n    //             res.json(\"에러 error.data = \", error.data);\r\n    //         }\r\n    //         console.log(\"언링크 unlink.data = \", unlink.data);\r\n    //         // 이 값이 떨어진 이유는 이미 카카오 측에서는 우리 아이디를 로그아웃 or 회원탈퇴 완료\r\n    //         // 나도 처리해줘야할게 있다  - session을 지워줘야 함\r\n\r\n    //         const { id } = unlink.data;\r\n\r\n    //         // id가 일치하면 세션 지워주기\r\n    //         if (session.authData[\"kakao\"].id == id) {\r\n    //             delete session.authData;\r\n    //         }\r\n\r\n    //         res.redirect(\"/?msg=로그아웃 되셨습니다.\");\r\n    //     });\r\n    // }, []);\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default KakaoLogout_social;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\KakaoLogin_social.js",["847","848","849","850"],[],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport styles from \"../../pages/login/LoginMain.module.css\";\r\nimport KaKaoCallback from \"./KaKaoCallback\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst KakaoLogin_social = () => {\r\n    const [kakaoLoginInfo, setKakaoLoginInfo] = useState(\"\");\r\n\r\n    const kakaoInfo = () => {\r\n        setKakaoLoginInfo();\r\n    };\r\n    //kakao login 호출\r\n    const CLIENT_ID = `${process.env.REACT_APP_PUBLIC_REST_API_KEY}`;\r\n    const REDIRECT_URI = `${process.env.REACT_APP_REDIRECT_KAKAO_URL}`;\r\n    const kakaoURL = `https://kauth.kakao.com/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=code`;\r\n\r\n    console.log(kakaoURL);\r\n\r\n    // kakao callback\r\n    useEffect(() => {\r\n        const params = new URL(document.location.toString()).searchParams;\r\n        const code = params.get(\"code\");\r\n        const grantType = \"authorization_code\";\r\n        const REST_API_KEY = `${process.env.REACT_APP_PUBLIC_REST_API_KEY}`;\r\n        const REDIRECT_URI = `${process.env.REACT_APP_REDIRECT_KAKAO_URL}`;\r\n\r\n        axios\r\n            .post(\r\n                `https://kauth.kakao.com/oauth/token?grant_type=${grantType}&client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&code=${code}`,\r\n                {},\r\n                {\r\n                    headers: {\r\n                        \"Content-type\":\r\n                            \"application/x-www-form-urlencoded;charset=utf-8\",\r\n                    },\r\n                }\r\n            )\r\n            .then(function (res) {\r\n                console.log(res);\r\n                const { data } = res;\r\n                const { access_token } = data;\r\n                axios\r\n                    .post(\r\n                        \"https://kapi.kakao.com/v2/user/me\",\r\n                        {},\r\n                        {\r\n                            headers: {\r\n                                Authorization: `Bearer ${access_token}`,\r\n                                \"Content-type\":\r\n                                    \"application/x-www-form-urlencoded\",\r\n                            },\r\n                        }\r\n                    )\r\n                    .then(function (res) {\r\n                        console.log(\"데이터 성공\", res);\r\n                        console.log(\"데이터 성공\");\r\n\r\n                        fetch(\"/user/kakaologin\", {\r\n                            method: \"post\",\r\n                            body: JSON.stringify({\r\n                                email: res.data.kakao_account.email,\r\n                                type: \"k\",\r\n                            }),\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then((res) => console.log(res));\r\n                    });\r\n            })\r\n            .catch(function (Error) {\r\n                console.log(\"ERR\", Error);\r\n            });\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <li className={styles[\"kakao-icon\"]}>\r\n                <img\r\n                    src={\r\n                        process.env.PUBLIC_URL +\r\n                        \"/images/kakao_login_medium_wide.png\"\r\n                    }\r\n                    onClick={() => (window.location.href = kakaoURL)}\r\n                ></img>\r\n            </li>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KakaoLogin_social;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-create\\DateSummary.js",["851","852","853"],[],"import React, { useState } from 'react';\r\nimport styles from './DateSummary.module.css';\r\nimport DayModal from '../../../components/tripstory/tripstory-create/tripstory-create-day/DayModal';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport SpotItemList from '../../../components/tripstory/tripstory-create/tripstory-create-spot/SpotItemList';\r\n\r\n//tripstory의 day0, 날짜, 글작성 아이콘 나오는 한 줄의 div 컴포넌트입니다.\r\n\r\n\r\nconst DateSummary = (props) => {\r\n\r\n    const {dayBtn} = props;\r\n\r\n    const [isOpen, setIsOpen] = useState(false) //초기값 false\r\n    const [content, setContent] = useState(''); // 입력된 값 상태로 관리\r\n\r\n    const tripDayDetail = useSelector((state) => state.tripStory.tripDayDetail);\r\n    const tripDaySpotDetail = tripDayDetail;\r\n\r\n    const onOpen = (check) => {\r\n        setIsOpen(check) \r\n    }\r\n\r\n    const handleSpotContent = (modalContent) => {\r\n        setContent(modalContent); \r\n        tripDayDetail.content = modalContent;\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n\r\n            <div className={styles['date-summary']}>\r\n                <div className={styles['trip-date']}>\r\n                    <h5>{'DAY' + dayBtn}</h5>\r\n                    <h5>{tripDayDetail.dayDate}</h5>\r\n                </div>\r\n                <Link to='#' onClick={() => onOpen(true) }>\r\n                    <img\r\n                            className={styles[\"write-icon\"]}\r\n                            src=\"https://cdn.imweb.me/upload/596c7f74e6a7f.png\"\r\n                    />\r\n                </Link>\r\n                {\r\n                        isOpen && <DayModal setIsOpen={ setIsOpen } handleSpotContent={ handleSpotContent } dayBtn={dayBtn} content={content} />\r\n                }\r\n            </div>\r\n            {/* { ((tripDayDetail.day.charAt(tripDayDetail.day.length-1) == dayBtn) && (content.length > 0)) \r\n                && \r\n                <div className={styles['day-modal-comment']}>{content}</div>} */}\r\n            <SpotItemList />\r\n\r\n<div>\r\n           \r\n        </div>\r\n        </>\r\n\r\n        \r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default DateSummary;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-list\\TripStoryItem.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\mypage\\mypage-schedule\\MySchedule.js",["854","855","856"],[],"import React from \"react\";\r\nimport styles from \"./MySchedule.module.css\";\r\n\r\nconst MySchedule = (props) => {\r\n    const { data } = props;\r\n    const today = new Date();\r\n    const startDay = new Date(data.tourStartDay);\r\n    const timeDiff = startDay.getTime() - today.getTime();\r\n    const dDay = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\r\n\r\n    return (\r\n        <div className={styles[\"myschedule-main-wrap\"]}>\r\n            <div className={styles[\"myschedule-mypage-list\"]}>\r\n                <div className={styles[\"myschedule-mypage-photo\"]}>\r\n                    <div className={styles[\"myschedule-d-day-text\"]}>D-{dDay}</div>\r\n                    <div className={styles[\"myschedule-list-image\"]}>\r\n                        <img src={data.img} />\r\n                    </div>\r\n                </div>\r\n                <div className={styles[\"list-content-city\"]}>\r\n                    <p className={styles[\"list-content-cityname\"]}>{data.city}</p>\r\n                    <p className={styles[\"list-content-fullcityname\"]}>{data.fullCityName}</p>\r\n                    <p className={styles[\"list-content-email\"]}>{data.email}</p>\r\n                    <p className={styles[\"list-content-level\"]}>{data.level}</p>\r\n                </div>\r\n                <div className={styles[\"schedule-info\"]}>\r\n                    <div className={styles[\"schedule-info-01\"]}>\r\n                        <div className={styles[\"schedule-info-01-001\"]}>\r\n                            <p className={styles[\"schedule-info-01-tourname\"]}>여행이름</p>\r\n                            <span>{data.tourName}</span>\r\n\r\n                            <a href=\"\">\r\n                                <img src={process.env.PUBLIC_URL + \"/images/free-icon-edit-860814.png\"} />\r\n                            </a>\r\n                        </div>\r\n                        <p className={styles[\"schedule-info-01-lastupdate\"]}>최종수정</p>\r\n\r\n                        <span>{data.lastUpdateDay}</span>\r\n                    </div>\r\n                    <div className={styles[\"schedule-info-02\"]}>\r\n                        <div className={styles[\"schedule-info-02-001\"]}>\r\n                            <p className={styles[\"schedule-info-02-tourdays\"]}>여행일자</p>\r\n\r\n                            <div className={styles[\"tour-days\"]}>\r\n                                <span name=\"tourStartDay\">{data.tourStartDay}</span>\r\n                                <span> ~ </span>\r\n                                <span>{data.tourEndDay}</span>\r\n                            </div>\r\n\r\n                            <p className={styles[\"schedule-info-02-location\"]}>선택장소</p>\r\n\r\n                            <span>{data.selectedLocation}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles[\"schedule-info-button\"]}>\r\n                        <button>일정 수정</button>\r\n                        <button>일정표</button>\r\n                        <button>일정 공유</button>\r\n                        <button>삭제</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MySchedule;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\mypage\\mypage-story\\MyStory.js",["857"],[],"import React from \"react\";\r\nimport styles from \"../mypage-review/MyReview.module.css\";\r\n\r\nconst MyStory = (props) => {\r\n    const today = new Date();\r\n    const startDay = new Date(props.data.tourStartDay);\r\n    const timeDiff = startDay.getTime() - today.getTime();\r\n    const dDay = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\r\n    return (\r\n        <div className={styles[\"mypage-list\"]}>\r\n            <div className={styles[\"d-day-text\"]}>D-{dDay}</div>\r\n            <div className={styles[\"list-image\"]}>\r\n                <img src={process.env.PUBLIC_URL + \"/images/jeju.jfif\"} />\r\n            </div>\r\n            <div className={styles[\"list-content\"]}>\r\n                <p>나의 첫 제주도 여행:)</p>\r\n                <span>\r\n                    첫날은 우정 해장국집에 들려서 해장국 한그릇 쎄려 주시고 근처 카페투어~ 저녁엔 흙돼지 바베큐를 위해 근처 마트 장을 본다. 숙소로\r\n                    돌아와 소시지와 흙돼지를 구워 야무지게 먹고 디저트로 파인애플, 방토 등등 먹을 예정! 야호! 코인노래방도 가고 바닷가 산책도하고,\r\n                    하고싶은게 너무많은데...시간은 너무 빠르게 흘러간다..ㅠㅠ\r\n                </span>\r\n            </div>\r\n            <div className={styles[\"list-button\"]}>\r\n                <button className={styles[\"list-button-update\"]}>이야기 수정</button>\r\n                <button className={styles[\"list-button-delete\"]}>이야기 삭제</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyStory;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\SelectedArea.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\mypage\\mypage-review\\MyReview.js",["858","859","860"],[],"import React, { useState } from \"react\";\r\nimport styles from \"./MyReview.module.css\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst MyReview = () => {\r\n    const [selected, setSelected] = useState();\r\n    const [nonSelected, setNonSelected] = useState();\r\n    const recommendHandler = (e) => {\r\n        setSelected(true);\r\n        setNonSelected(false);\r\n    };\r\n\r\n    const recentHandler = (e) => {\r\n        setSelected(false);\r\n        setNonSelected(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"list-main-wrap\">\r\n            <ul className={styles[\"mypage-sort-list\"]}>\r\n                <li className={selected ? styles[\"selected-list\"] : styles[\"non-selected-list\"]} onClick={recommendHandler}>\r\n                    추천순\r\n                </li>\r\n                <li className={nonSelected ? styles[\"selected-list\"] : styles[\"non-selected-list\"]} onClick={recentHandler}>\r\n                    최신순\r\n                </li>\r\n            </ul>\r\n            <div className={styles[\"mypage-list\"]}>\r\n                <div className={styles[\"myage-list-textarea\"]}>\r\n                    <p className={styles[\"mypage-list-textarea-title\"]}>강릉중앙시장</p>\r\n                    <p className={styles[\"mypage-list-textarea-area\"]}>명소</p>\r\n                    <p className={styles[\"mypage-list-textarea-comment\"]}>비싸기만하고 맛이 없음</p>\r\n\r\n                    <div className={styles[\"mypage-list-textarea-days\"]}>\r\n                        <p>2021.06.08</p>\r\n                        <p>\r\n                            <img src={process.env.PUBLIC_URL + \"/images/free-icon-like-126473.png\"} />0\r\n                        </p>\r\n                        <p>\r\n                            <img src={process.env.PUBLIC_URL + \"/images/free-icon-dislike-126504.png\"} />0\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className={styles[\"list-button\"]}>\r\n                    <button className={styles[\"list-button-update\"]}>리뷰 수정</button>\r\n                    <button className={styles[\"list-button-delete\"]}>리뷰 삭제</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyReview;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\TripScheduleAddPlace.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-data\\TripStoryData.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-data\\TripStoryDetailData.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\CitiesData.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\SearchBar.js",["861","862"],[],"import React from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport styles from \"./SearchBar.module.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  return (\r\n    <div className={styles[\"container\"]}>\r\n      <div className={styles[\"inputContainer\"]}>\r\n        <button className={styles[\"search-button\"]}>\r\n            <img src={`${process.env.PUBLIC_URL}/images/tipschedule/btn-com-search@3x.png`}\r\n                className={styles[\"search-icon\"]}/>\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"어느 도시로 여행하시나요?\"\r\n          className={styles[\"input\"]}\r\n          onChange={props.getSearchValue}\r\n        />\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\FamousCity.js",["863","864","865"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport styles from './FamousCity.module.css'\r\nimport CityItem from './CityItem'\r\n\r\nconst FamousCity = (props) => {\r\n\treturn (\r\n\t\t<div className={styles['popular-cities-container']}>\r\n\t\t\t<h1 className={styles['popular-cities-title']}>인기도시</h1>\r\n\t\t\t<div className={styles['cities-container']}>\r\n\t\t\t\t{props.searchedCity.map((data) => (\r\n\t\t\t\t\t<CityItem\r\n\t\t\t\t\t\tkey={data.areaId}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tisSelected={props.selectedCity === data.areaId}\r\n\t\t\t\t\t\timgClick={props.imgClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FamousCity\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\common\\Map.js",["866","867","868"],[],"import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'\r\n\r\nconst center = {\r\n\tlat: 37.7189,\r\n\tlng: 128.8321,\r\n}\r\n\r\nexport default function Map() {\r\n  const mapRef = useRef(null)\r\n\r\n\tconst initMap = useCallback(() => {\r\n\t\tnew window.google.maps.Map(mapRef.current, {\r\n\t\t\tcenter: { lat: 37.7189, lng: 128.8321 },\r\n      zoom: 12,\r\n      disableDefaultUI: true\r\n\t\t})\r\n\t}, [mapRef])\r\n\r\n\tuseEffect(() => {\r\n\t\tinitMap()\r\n\t}, [initMap])\r\n\r\n\treturn <div className='map' style={{ width: '100%', height: '100%' }} ref={mapRef}></div>\r\n}\r\n\r\n\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-spot\\SpotItemList.js",["869","870","871"],[],"import React, { useState } from 'react';\r\nimport SpotItem from './SpotItem';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SpotItemList = (props) => {\r\n\r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            {\r\n            //   tripDaySpotDetail.map((item, index) => (\r\n            //      <SpotItem \r\n            //             item={item} \r\n                        \r\n            //      />\r\n\r\n            //   ))   \r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SpotItemList;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-day\\DayBtn.js",["872","873","874","875"],[],"import React, { useEffect, useState } from 'react';\r\nimport styles from './DayBtn.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { tripStoryActions } from '../../../../pages/tripstory/tripstory-data/TripStoryReducer';\r\n\r\n//day 선택 버튼입니다.\r\n\r\nconst DayBtn = ({getDaySelect, dayBtn}) => {\r\n\r\n  \r\n\r\n  const indexNum = (index) => {\r\n      return (index+1);\r\n  };\r\n\r\n  const tripDetailList = useSelector((state) => state.tripStory.tripDetailList);\r\n\r\n  \r\n  \r\n\r\n  console.log(tripDetailList)\r\n  return (\r\n    <div className={styles['day-btn-list']}>\r\n      \r\n      {\r\n        tripDetailList.map((items, index)=>(\r\n          \r\n          <div key={indexNum(index)}\r\n              className={`${styles['day-btn']} ${(dayBtn-1) === index ? styles.active : ''}`}\r\n              onClick={()=> getDaySelect(indexNum(index)) }\r\n          >\r\n            <Link to='#'>{ 'DAY' + indexNum(index) }</Link>\r\n          </div>\r\n        ))\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayBtn;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\ScheduleLineAndBlock.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\EditModeBlock.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\SelectedPlace.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocGoogleMap.js",["876","877"],[],"import React, { useCallback } from \"react\";\r\nimport { GoogleMap, MarkerF, useJsApiLoader } from \"@react-google-maps/api\";\r\n\r\nimport styles from \"./LocMap.module.css\";\r\n\r\nexport default function LocGoogleMap(props) {\r\n    const center = props.center;\r\n\r\n    const containerStyle = {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    };\r\n\r\n    const { isLoaded } = useJsApiLoader({\r\n        id: \"google-map-script\",\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY, // googleMap API personal key - 환경변수로 넘기기\r\n    });\r\n\r\n    const [map, setMap] = React.useState(null);\r\n\r\n    const onLoad = React.useCallback(function callback(map) {\r\n        // Create boundary\r\n        const bounds = new window.google.maps.LatLngBounds(center);\r\n        // 시작시 zoom level 조정\r\n        bounds.extend(\r\n            new window.google.maps.LatLng(center.lat + 0.01, center.lng + 0.01)\r\n        );\r\n        bounds.extend(\r\n            new window.google.maps.LatLng(center.lat - 0.01, center.lng - 0.01)\r\n        );\r\n        map.fitBounds(bounds);\r\n        setMap(map);\r\n    }, []);\r\n\r\n    // 구글 MAP 기본 Marker(박물관, 음식점 등) 삭제\r\n    const myStyles = [\r\n        {\r\n            featureType: \"poi\",\r\n            elementType: \"labels\",\r\n            stylers: [{ visibility: \"ON\" }],\r\n        },\r\n    ];\r\n\r\n    const onUnmount = useCallback(function callback(map) {\r\n        setMap(null);\r\n    }, []);\r\n\r\n    return isLoaded ? (\r\n        <div className={styles[\"map-container\"]}>\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={12}\r\n                onLoad={onLoad}\r\n                onUnmount={onUnmount}\r\n                options={{\r\n                    disableDefaultUI: true, // 구글 Map 기본 옵션 삭제\r\n                    styles: myStyles,\r\n                    // gestureHandling: \"cooperative\", // ctrl 확대, 축소 안내 문구 삭제 ▶ 작동 X\r\n                }}\r\n            >\r\n                <MarkerF\r\n                    position={center}\r\n                    icon={{\r\n                        url: \"https://assets.triple.guide/images/img_map_pin_sight@4x.png\",\r\n                        scaledSize: new window.google.maps.Size(30, 30), // 이미지 사이즈 조정\r\n                    }}\r\n                />\r\n            </GoogleMap>\r\n        </div>\r\n    ) : (\r\n        <></>\r\n    );\r\n}\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\ReviewDummyData copy.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\ReviewDummyData.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\ReviewItem.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\common\\StickyBannerPlan.js",["878"],[],"import React from \"react\";\r\n\r\nimport styles from \"./StickyBanner.module.css\";\r\n\r\nconst StickyBannerPlan = (props) => {\r\n    const today = new Date();\r\n    const timeDiff = props.data.startDate.getTime() - today.getTime();\r\n    const dDay = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) * -1;\r\n\r\n    const startMonth = props.data.startDate.getMonth() + 1;\r\n    const startDate = props.data.startDate.getDate();\r\n    const startWeekday = props.data.startDate.toLocaleDateString(\"ko-KR\", {\r\n        weekday: \"short\",\r\n    });\r\n    const endMonth = props.data.endDate.getMonth() + 1;\r\n    const endDate = props.data.endDate.getDate();\r\n    const endWeekday = props.data.endDate.toLocaleDateString(\"ko-KR\", {\r\n        weekday: \"short\",\r\n    });\r\n\r\n    return (\r\n        <div className={styles[\"banner-plan\"]}>\r\n            <div className={styles[\"plan-destination\"]}>\r\n                <img />\r\n                <div>\r\n                    <span>{props.data.destination}</span>\r\n                    <span>\r\n                        D{dDay < 0 ? dDay : dDay === 0 ? \"-day\" : `+${dDay}`}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <span className={styles[\"plan-date\"]}>\r\n                {startMonth}.{startDate}({startWeekday}) - {endMonth}.{endDate}(\r\n                {endWeekday})\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StickyBannerPlan;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\LocRelatedItem.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\restaurant\\RestaurantItemThumbnail.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\mapData\\TripScheduleData.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-list\\FlightSelectCard.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\EventItem.js",["879","880"],[],"import React from \"react\";\r\n\r\nimport styles from \"./MainTop.module.css\";\r\n\r\nconst EventItem = (props) => {\r\n    return (\r\n        <a className={styles[\"event-item\"]} href=\"\">\r\n            <div>\r\n                <p>{props.title}</p>\r\n            </div>\r\n            <div className={styles[\"event-img-div\"]}>\r\n                <img src={props.firstimage} />\r\n            </div>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default EventItem;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\trip-list\\RcmdTripItem.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-recommend\\BestReviewItem.js",["881","882","883"],[],"import React from \"react\";\r\n\r\nimport styles from \"./MainRecommend.module.css\";\r\n\r\nconst BestReviewItem = (props) => {\r\n    return (\r\n        <a className={styles[\"best-review-item\"]} href=\"\">\r\n            <div className={styles[\"best-review-info\"]}>\r\n                <img className={styles[\"member-img\"]} />\r\n                <div className={styles[\"info-text\"]}>\r\n                    <h4>{props.reviewData.theme}</h4>\r\n                    <div>\r\n                        <span>{props.reviewData.memberName}님의 일정</span>\r\n                        <span>{props.reviewData.date}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <img className={styles[\"thumb-img\"]} />\r\n            <p className={styles[\"preview-text\"]}>{props.reviewData.preview}</p>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default BestReviewItem;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\IconItem.js",["884"],[],"import React from \"react\";\r\n\r\nimport styles from \"./MainTop.module.css\";\r\n\r\nconst IconItem = (props) => {\r\n    return (\r\n        <a className={styles[\"icon-menu-item\"]} href={props.href}>\r\n            <img\r\n                className={styles[\"icon-img\"]}\r\n                src={`${process.env.PUBLIC_URL}/images/main/${props.icon}.png`}\r\n            />\r\n            <p className={styles[\"icon-menu-text\"]}>{props.menuText}</p>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default IconItem;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-data\\FlightItemsData.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\flight\\flight-data\\AirportData.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\common\\StarRating.js",["885","886"],[],"import React, { useEffect, useState } from 'react';\r\n\r\nimport styled from \"@emotion/styled\";\r\nimport { FaStar } from 'react-icons/fa';\r\n// import styles from './StarRating.module.css';\r\n\r\n// 별점 별모양 클릭해서 매기는 컴포넌트입니다.\r\n// 별 모양 클릭한 만큼 점수가 숫자로 보여지게 하는 함수입니다. \r\n\r\n\r\n\r\nconst StarRating = (props) => {\r\n\r\n  const {rating, setRating} = props;\r\n\r\n  const ratingState = (rating) => {\r\n\r\n    \r\n    let clickStates = [false, false, false, false, false];\r\n\r\n    for (let i = 0; i < rating; i++) {\r\n      clickStates[i] = (i <= (rating-1)) ? true : false;\r\n    }\r\n\r\n    return clickStates;\r\n  };\r\n\r\n\r\n  const initRating = rating > 0 ? ratingState(rating) : [false, false, false, false, false];\r\n  \r\n\r\n\r\n  const [clicked, setClicked] = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    setClicked(initRating);\r\n}, [rating])\r\n\r\n\r\n\r\n  const handleStarClick = (index) => {\r\n\r\n    let clickStates = [...clicked];\r\n    let checkStar = 0;\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        if(i <= index) {\r\n          clickStates[i] = true;\r\n          checkStar++;\r\n        } else {\r\n          clickStates[i] = false;\r\n        }\r\n        \r\n    }\r\n    \r\n    setClicked(clickStates);\r\n    setRating(checkStar);\r\n  };\r\n\r\n\r\n  return (\r\n    <Wrap>\r\n      <Stars>\r\n        {clicked.map((items, index) => {\r\n          return (\r\n            <FaStar\r\n              key={index}\r\n              size=\"50\"\r\n              onClick={() => handleStarClick(index)}\r\n              className={clicked[index] && 'yellowStar'}\r\n            />\r\n          );\r\n        })}\r\n      </Stars>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default StarRating;\r\n\r\n  \r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst RatingText = styled.div`\r\n  color: #787878;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Stars = styled.div`\r\n  display: flex;\r\n  width : 15rem;\r\n  gap: 0.2rem;\r\n  \r\n\r\n  & svg {\r\n    color: rgb(88, 87, 87);\r\n    cursor: pointer;\r\n  }\r\n\r\n  :hover svg {\r\n    color: #fcc419;\r\n  }\r\n\r\n  & svg:hover ~ svg {\r\n    color: gray;\r\n  }\r\n\r\n  .yellowStar {\r\n    color: #fcc419;\r\n  }\r\n`\r\n\r\n ;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-upload\\UploadPhoto.js",["887"],[],"import React, { useRef, useState } from 'react';\r\nimport styles from './UploadBtn.module.css';\r\nimport UploadPhotoList from './UploadPhotoList';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\n// 여행 이야기 페이지에서 write 아이콘 누르면 뜨는 여행 이야기 작성 모달창입니다. \r\n\r\nconst UploadPhoto = ({ check }) => {\r\n  const fileInputRef = useRef(null);\r\n  const [selectedPhotos, setSelectedPhotos] = useState([]);\r\n  const [selectedModalPhotos, setSelectedModalPhotos] = useState([]);\r\n\r\n  const tripStoryData = useSelector((state) => state.tripStory.tripStoryData);\r\n  const tripDayDetail = useSelector((state) => state.tripStory.tripDayDetail);\r\n\r\n  useEffect(() => {\r\n    check === 'write' ? setSelectedPhotos(tripStoryData.img) : setSelectedModalPhotos(tripDayDetail.img);\r\n}, []);\r\n\r\n  const handleButtonClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    // Limit the number of selected photos to 3\r\n    const selected = files.slice(0, 10);\r\n\r\n    // Convert selected photos to square shape\r\n    const squarePhotos = selected.map((file) => {\r\n\r\n      const reader = new FileReader();\r\n\r\n      reader.readAsDataURL(file);\r\n\r\n      return new Promise((resolve) => {\r\n\r\n        reader.onload = (event) => {\r\n          \r\n          const img = new Image();\r\n          img.src = event.target.result;\r\n          img.onload = () => {\r\n            const canvas = document.createElement('canvas');\r\n            const maxSize = Math.max(img.width, img.height);\r\n            const offsetX = (maxSize - img.width) / 2;\r\n            const offsetY = (maxSize - img.height) / 2;\r\n            \r\n            canvas.width = maxSize;\r\n            canvas.height = maxSize;\r\n            const ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, offsetX, offsetY);\r\n            const dataURL = canvas.toDataURL('image/jpeg');\r\n            resolve(dataURL);\r\n          };\r\n        };\r\n      });\r\n    });\r\n\r\n    Promise.all(squarePhotos).then((results) => {\r\n      check === 'write' ? setSelectedPhotos(results) : setSelectedModalPhotos(results);\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles['upload-photo']}>\r\n      <div className={styles['upload-photo-btn']} onClick={handleButtonClick}>\r\n        사진 첨부\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          style={{ display: 'none' }}\r\n          multiple //여러장 선택할 수 있게함\r\n          onChange={handleFileSelect}\r\n        />\r\n      </div>\r\n        {\r\n          selectedPhotos && \r\n          selectedPhotos.map((photo, index) => (\r\n            <UploadPhotoList photo={photo} index={index}></UploadPhotoList>\r\n          ))\r\n        }\r\n        {\r\n          selectedModalPhotos && \r\n          selectedModalPhotos.map((photo, index) => (\r\n            <UploadPhotoList photo={photo} index={index}></UploadPhotoList>\r\n          ))\r\n        }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPhoto;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\TripScheduleAddPlaceItem.js",["888"],[],"import React from \"react\";\r\n\r\nimport stylePlaceItem from \"./TripScheduleAddPlaceItem.module.css\";\r\n\r\n// 장소 데이터 불러오기\r\nconst TripScheduleAddPlaceItem = (props) => {\r\n    const checkClickHandler = () => {\r\n        props.checkHandler(!props.isChecked, props.data.id);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={stylePlaceItem[\"place-item\"]}\r\n            onClick={checkClickHandler}\r\n        >\r\n            <div className={stylePlaceItem[\"place-item-left\"]}>\r\n                {/* <div className={stylePlaceItem[\"place-img-div\"]}> */}\r\n                    <img\r\n                        className={stylePlaceItem[\"place-img\"]}\r\n                        src={props.data.img}\r\n                        alt=\"stayImg{props.id}\"\r\n                    />\r\n                {/* </div> */}\r\n                <div className={stylePlaceItem[\"place-item-info\"]}>\r\n                    <div className={stylePlaceItem[\"place-item-name\"]}>\r\n                        {props.data.name}\r\n                    </div>\r\n                    <div className={stylePlaceItem[\"place-item-loc-type\"]}>\r\n                        <p>{props.data.location}</p>\r\n                        <p>&nbsp;&nbsp;|&nbsp;&nbsp;</p>\r\n                        <p>{props.data.type}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                className={`${stylePlaceItem[\"check-div\"]} ${\r\n                    props.isChecked ? stylePlaceItem[\"checked\"] : \"\"\r\n                }`}\r\n            >\r\n                {props.isChecked && (\r\n                    <img\r\n                        src={`${process.env.PUBLIC_URL}/images/icon_check.png`}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TripScheduleAddPlaceItem;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-list\\TripStoryItemThumbnail.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-recommend\\Best6Item.js",["889","890"],[],"import React from \"react\";\r\n\r\nimport styles from \"./MainRecommend.module.css\";\r\n\r\nconst Best6Item = (props) => {\r\n    return (\r\n        <a className={styles[\"best-6-item\"]} href=\"\">\r\n            <img />\r\n            <span className={styles[\"rank-no\"]}>\r\n                <em>{props.rank}</em>\r\n            </span>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Best6Item;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\main\\main-top\\MainMenuItem.js",["891","892"],[],"import React from \"react\";\r\n\r\nimport styles from \"./MainTop.module.css\";\r\n\r\nconst MainMenuItem = (props) => {\r\n    return (\r\n        <a className={styles[\"main-menu-item\"]} href=\"\">\r\n            <img className={styles[\"main-menu-img\"]} />\r\n            <div className={styles[\"main-menu-text\"]}>\r\n                <h3>{props.title}</h3>\r\n                <p>{props.desc1}</p>\r\n                <p>{props.desc2}</p>\r\n            </div>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default MainMenuItem;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal\\SelectedItem.js",["893"],[],"import React from \"react\";\r\n\r\nimport styles from \"./TripScheduleAddPlace.module.css\";\r\n\r\nconst SelectedItem = (props) => {\r\n    return (\r\n        <div className={styles[\"selected-item\"]}>\r\n            <img src={props.img} alt=\"place thumbnail image\" />\r\n            <span className={styles[\"selected-item-name\"]}>{props.name}</span>\r\n\r\n            <span\r\n                className={styles[\"remove-tag\"]}\r\n                onClick={() => props.removeHandler(props.isStay, props.id)}\r\n            >\r\n                X\r\n            </span>\r\n            {props.isStay && <span className={styles[\"stay-tag\"]}>숙박</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectedItem;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal-data\\TripScheduleAddPlaceData.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripschedule\\modal-data\\TripScheduleAddStayData.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-day\\DayModal.js",["894"],[],"import React, { useState } from 'react';\r\nimport UploadStoryBtn from '../tripstory-create-upload/UploadStoryBtn';\r\nimport styles from \"./DayModal.module.css\";\r\nimport CompleteBtn from '../common/CompleteBtn';\r\n\r\n//tripstory 글작성 모달창 컴포넌트입니다.\r\nconst DayModal = (props) => {\r\n\r\n\r\n    const {setIsOpen, handleSpotContent, dayBtn, content } = props;\r\n    const [modalContent, setModalContent] = useState(content); // 입력된 값 상태로 관리\r\n\r\n    const handleTextareaChange = (event) => {\r\n        setModalContent(event.target.value);\r\n    };\r\n\r\n    const handleCloseXButton = () => {\r\n        setIsOpen(false); // SpotModal 닫기\r\n    };\r\n\r\n    const handleCompleteStory = () => {\r\n        handleSpotContent(modalContent); // SpotItem 컴포넌트로 텍스트, 이미지 파일들 전달\r\n        setIsOpen(false); // SpotModal 닫기\r\n    };\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <div className={styles[\"bg\"]}></div>   \r\n                <div className={styles[\"popup\"]}>\r\n                    <p onClick={ handleCloseXButton} className={styles[\"closex\"]} >X</p>\r\n                        <h2>DAY{dayBtn} 의 기록 남기기</h2>\r\n                    <hr/>\r\n                <textarea className={styles['tripstory-content']} \r\n                          placeholder='나의 여행 기록을 남겨주세요.'\r\n                          value={modalContent}\r\n                          onChange={handleTextareaChange}\r\n                          ></textarea>\r\n                <CompleteBtn handleCompleteStory={ handleCompleteStory }  />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DayModal;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule-details\\tipschedule1\\CityItem.js",["895"],[],"import React from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport styles from \"./FamousCity.module.css\"\r\n\r\nconst CityItem = (props) => {\r\n\r\n    const imgClassName = props.isSelected\r\n        ? `${styles[\"city-img-container\"]} ${styles[\"city-img-selected\"]}`\r\n        : styles[\"city-img-container\"];\r\n\r\n    return (\r\n        <div className={styles[\"city-container\"]}\r\n             onClick={() => props.imgClick(props.data.areaId)}>\r\n            <div className={imgClassName}>\r\n                <img src={props.data.imageUrl} className={styles[\"city-img\"]} />\r\n            </div>\r\n            <div className={styles[\"city-title\"]}>\r\n                {ReactHtmlParser(props.data.areaTitle)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CityItem;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-spot\\SpotItem.js",["896","897","898","899"],[],"import React, { useState } from 'react';\r\nimport SpotModal from './SpotModal';\r\nimport styles from \"./Spot.module.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport StarRatingRead from '../common/StarRatingRead';\r\nimport UploadPhotoList from '../tripstory-create-upload/UploadPhotoList';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n//여행 장소의 순서, 장소, 장소에 대한 설명이 들어가 있는 곳의 컴포넌트입니다.\r\nconst SpotItem = (props) => {\r\n\r\n    const {item} = props;\r\n    const [spotContent, setSpotContent] = useState('');\r\n    const [spotPhotos, setSpotPhotos] = useState([]); \r\n    const [spotRating, setSpotRating] = useState(0);\r\n\r\n    const [isOpen, setIsOpen] = useState(false) \r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        setSpotContent(item.content);\r\n        setSpotPhotos(item.img);\r\n        setSpotRating(item.rating);\r\n    }, [item]);\r\n\r\n\r\n\r\n    const onOpen = (check) => {\r\n        setIsOpen(check) \r\n    }\r\n\r\n    console.log(spotPhotos.length > 0)\r\n\r\n    const modalDisplay = ((!spotContent) || (spotPhotos.length > 0) ||  (!(spotRating < 1)));\r\n\r\n    return (\r\n            <div className={styles[\"spot-item\"]}>\r\n                <div className={styles[\"schedule-line-wrapper\"]}>\r\n                    <div className={styles[\"schedule-line-left\"]}></div>\r\n                    <div className={styles[\"order-label-wrapper\"]}>\r\n                        <div className={styles[\"order-label\"]}>{item.scheduleOrder}</div>\r\n                    </div>\r\n                    <div className={styles[\"schedule-line-right\"]}></div>\r\n                </div>\r\n                <div className={styles[\"where-div\"]}>\r\n                    <p className={styles['title']}>{item.title}</p>\r\n                    <p className={styles['type']}>{item.type}</p>\r\n                    { \r\n                \r\n                        modalDisplay && \r\n                        <div className={styles['spot-modal-comment']}>\r\n                            {\r\n                                (!(spotRating < 1))&& \r\n                                (\r\n                                    <div>\r\n                                        <StarRatingRead rating={spotRating}/>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {   \r\n                                spotContent &&\r\n                                (\r\n                                    <div>\r\n                                        {spotContent}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {   \r\n                            \r\n                                (spotPhotos.length > 0) &&\r\n                                (\r\n                                    \r\n                                    <div>\r\n                                        {\r\n                                            \r\n                                            spotPhotos.map((photo, index) => {\r\n                                                console.log('tets');\r\n                                                console.log(photo);\r\n                                                console.log(index);\r\n                                                <img\r\n                                                    key={index}\r\n                                                    src={photo}\r\n                                                    alt={`Uploaded Photo ${index + 1}`}\r\n                                                    className={styles['uploaded-photo']}\r\n                                                    />\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n                \r\n                <div className={styles[\"write-icon-area\"]}>\r\n                    <Link to='#' onClick={() => onOpen(true) }>\r\n                        <img\r\n                                className={styles[\"write-icon\"]}\r\n                                src=\"https://cdn.imweb.me/upload/596c7f74e6a7f.png\"\r\n                        />\r\n                    </Link>\r\n                    {\r\n                        isOpen && <SpotModal setIsOpen={ setIsOpen }\r\n                                            spot={item.title}\r\n                                            spotContent={spotContent}\r\n                                            setSpotContent={setSpotContent}\r\n                                            spotPhotos={spotPhotos}\r\n                                            setSpotPhotos={setSpotPhotos}\r\n                                            spotRating={spotRating}\r\n                                            setSpotRating={setSpotRating}\r\n                                            />\r\n                    }\r\n                </div>   \r\n                \r\n            </div>\r\n                \r\n       \r\n    );\r\n};\r\n\r\nexport default SpotItem;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripplace\\ReviewImg.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-upload\\UploadPhotoList.js",["900"],[],"import React from 'react';\r\nimport styles from './UploadBtn.module.css';\r\n\r\nconst UploadPhotoList = ({photo, index}) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <img\r\n                key={index}\r\n                src={photo}\r\n                alt={`Uploaded Photo ${index + 1}`}\r\n                className={styles['uploaded-photo']}\r\n                />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UploadPhotoList;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-upload\\UploadStoryBtn.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\common\\CompleteBtn.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\tripstory-create-spot\\SpotModal.js",["901"],[],"import React, { useState } from 'react';\r\n\r\nimport UploadPhoto from '../tripstory-create-upload/UploadPhoto';\r\nimport UploadStoryBtn from '../tripstory-create-upload/UploadStoryBtn';\r\nimport styles from './SpotModal.module.css';\r\nimport StarRatingModal from '../common/StarRating';\r\nimport CompleteBtn from '../common/CompleteBtn';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\n//tripstory 글작성 모달창 컴포넌트입니다.\r\nconst SpotModal = (props) => {\r\n\r\n    const {setIsOpen, spot, spotContent, \r\n            setSpotContent, spotPhotos, setSpotPhotos, spotRating , setSpotRating } = props;\r\n    \r\n    const [modalContent, setModalContent] = useState(\"\"); \r\n    const [modalPhotos, setModalPhotos] = useState([]); \r\n    const [modalRating, setModalRating] = useState(0); \r\n\r\n    useEffect(() => {\r\n        setModalContent(spotContent);\r\n        setModalPhotos(spotPhotos);\r\n        setModalRating(spotRating);\r\n    }, [spotContent, spotPhotos, spotRating]);\r\n\r\n    const handleCloseXButton = () => {\r\n        setIsOpen(false); // SpotModal 닫기\r\n    };\r\n\r\n    const handleContentChange = (event) => {\r\n        setModalContent(event.target.value); // 텍스트 내용 업데이트\r\n    };\r\n\r\n    const handleCompleteStory = () => {\r\n        setSpotContent(modalContent); \r\n        setSpotPhotos(modalPhotos); \r\n        setSpotRating(modalRating); \r\n        setIsOpen(false); \r\n    };\r\n    \r\n    const check = \"spot\";\r\n    console.log(spotRating);\r\n    console.log(modalRating);\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles[\"bg\"]}></div>   \r\n            <div className={styles[\"popup\"]}>\r\n                <p onClick={ handleCloseXButton} className={styles[\"closex\"]} >X</p>\r\n                <h2>{spot}</h2>\r\n                <hr/>\r\n                <div className={styles[\"trip-score-ment2\"]}>\r\n                    <p>이 장소의 평점을 입력해주세요.</p>\r\n                    <StarRatingModal rating={modalRating} setRating ={setModalRating} /> {/* 별점 매기기 컴포넌트 */}\r\n                </div>\r\n                <textarea className={styles['tripstory-content']} \r\n                          placeholder='이 장소에서의 경험과 추억을 공유해주세요.'\r\n                          value={modalContent}\r\n                          onChange={handleContentChange} //텍스트 내용 변경 핸들러\r\n                          ></textarea>\r\n                <hr/>\r\n                <UploadPhoto setModalPhotos={setModalPhotos}/> {/* 사진 첨부 버튼 */}\r\n                <CompleteBtn handleCompleteStory={ handleCompleteStory } check={check} />\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default SpotModal;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\tripstory\\tripstory-create\\common\\StarRatingRead.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\store.js",["902"],[],"import { autoBatchEnhancer, configureStore } from '@reduxjs/toolkit';\r\nimport TripStoryReducer from './pages/tripstory/tripstory-data/TripStoryReducer';\r\n\r\nconst Store = configureStore({\r\n    reducer: {\r\n        tripStory : TripStoryReducer\r\n    }\r\n    \r\n});\r\n\r\nexport default Store;","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\login\\LoginByEail.js",["903"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styles from \"../signup/Signup.module.css\";\r\n\r\nconst LoginByEail = () => {\r\n    const [email, setEmail] = useState(\"\"); // 이메일\r\n    const [password, setPassword] = useState(\"\"); // 비밀번호\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const value = e.target.value;\r\n        setPassword(value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // 이메일과 비밀번호 확인 로직 구현\r\n        if (password === confirmPassword) {\r\n            // 이메일과 비밀번호가 일치하는 경우 가입 프로세스 진행\r\n            alert(\"가입 성공!\");\r\n            // 여기서 가입 프로세스를 진행하면 됩니다.\r\n        } else {\r\n            // 이메일과 비밀번호가 일치하지 않는 경우 처리 로직\r\n            alert(\"비밀번호가 일치하지 않습니다.\");\r\n        }\r\n    };\r\n\r\n    //----------------------------------------------\r\n    // 공백 제거\r\n    const handleEmailChange = (e) => {\r\n        const enteredEmail = e.target.value.replace(/\\s/g, \"\").trim();\r\n        setEmail(enteredEmail);\r\n    };\r\n    // 이메일 형식 체크\r\n    const validateEmail = (email) => {\r\n        const regex =\r\n            /^[A-Za-z0-9]([-_.]?[A-Za-z0-9])*@[A-Za-z0-9]([-_.]?[A-Za-z0-9])*\\.[A-Za-z]{2,3}$/;\r\n        return regex.test(email);\r\n    };\r\n\r\n    const emailEventHandler = (e) => {\r\n        const enteredEmail = e.target.value.replace(/\\s/g, \"\").trim();\r\n        handleEmailChange(e);\r\n\r\n        if (validateEmail(enteredEmail)) {\r\n            // 이메일 형식이 올바른 경우\r\n            // 필요한 동작을 수행할 수 있습니다\r\n            console.log(\"올바른 이메일 형식입니다:\", enteredEmail);\r\n        } else {\r\n            // 이메일 형식이 올바르지 않은 경우\r\n            // 유효성 검사 오류를 처리할 수 있습니다\r\n            console.log(\"올바르지 않은 이메일 형식입니다:\", enteredEmail);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles[\"width-wrapper\"]}>\r\n            <form\r\n                className={styles[\"width-wrapper-form\"]}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <h1 className={styles[\"signup-heading\"]}>\r\n                    이메일로 로그인 하기\r\n                </h1>\r\n\r\n                <div className={styles[\"input-group\"]}>\r\n                    <label className={styles.label}>\r\n                        <h2 className={styles[\"input-label\"]}>이메일 주소</h2>\r\n                    </label>\r\n                    <div className={styles[\"input-field\"]}>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={emailEventHandler}\r\n                            placeholder=\"abc@gmail.com\"\r\n                            required\r\n                            className={styles[\"input\"]}\r\n                        />\r\n                        {validateEmail(email) ? (\r\n                            <div className={styles[\"input-field-valEmail\"]}>\r\n                                올바른 이메일 형식입니다:)\r\n                            </div>\r\n                        ) : (\r\n                            <div className={styles[\"input-field-inValEmail\"]}>\r\n                                이메일 형식이 올바르지 않습니다:(\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n                <div className={styles[\"input-group\"]}>\r\n                    <label className={styles.label}>\r\n                        <h2 className={styles[\"input-label\"]}>비밀번호</h2>\r\n                    </label>\r\n                    <div className={styles[\"input-field\"]}>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={handlePasswordChange}\r\n                            placeholder=\"비밀번호 입력\"\r\n                            required\r\n                            className={styles[\"input\"]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <button className={styles[\"submit-button\"]} type=\"submit\">\r\n                    확인\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginByEail;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\stay\\stay-detail\\StayDetail.js",["904"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport styles from \"./StayDetail.module.css\";\r\nimport Loading from \"../../../components/common/Loading\";\r\nimport LocGoogleMap from \"../../../pages/tripplace/LocGoogleMap\";\r\n\r\nconst StayDetail = () => {\r\n    // 파라미터에서 contentId 가져옴\r\n    const { contentId } = useParams();\r\n\r\n    // API 데이터 담을 state\r\n    const [data, setData] = useState(null);\r\n    console.log(data);\r\n\r\n    // 뒷단에서 API 호출\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const response = await axios.post(\"/api/stay/detail\", {\r\n                    contentId,\r\n                });\r\n\r\n                setData(response.data);\r\n            } catch (error) {\r\n                console.log(\"Error occurred:\", error);\r\n            }\r\n        };\r\n        getData();\r\n    }, []);\r\n\r\n    // 이미지 엑박 처리\r\n    const [imageError, setImageError] = useState(false);\r\n    const handleImageError = () => {\r\n        setImageError(true);\r\n    };\r\n\r\n    // 숙소 편의시설 데이터 처리\r\n    const InfoItem = ({ label, value }) => {\r\n        return (\r\n            <div className={styles[\"facility-item\"]}>\r\n                <span className={styles[\"facility-label\"]}>{label}</span>\r\n                <span className={styles[\"facility-value\"]}>\r\n                    {!value || value === \"0\" ? \"없음\" : value}\r\n                </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!data ? (\r\n                <Loading />\r\n            ) : (\r\n                <div className={styles[\"width-wrapper\"]}>\r\n                    <h1 className={styles[\"stay-title\"]}>{data.title}</h1>\r\n                    <span className={styles[\"stay-addr\"]}>{data.addr1}</span>\r\n\r\n                    {!imageError && ( // 이미지 엑박일 경우 띄우지 않음\r\n                        <div className={styles[\"thumbnail-img-wrap\"]}>\r\n                            <img\r\n                                className={styles[\"thumbnail-img\"]}\r\n                                src={data.firstimage}\r\n                                alt={data.title}\r\n                                onError={handleImageError}\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    <h2 className={styles[\"h2-title\"]}>숙소 편의시설</h2>\r\n                    <div className={styles[\"facility-list\"]}>\r\n                        <InfoItem label=\"식당\" value={data.foodplace} />\r\n                        <InfoItem label=\"세미나실\" value={data.seminar} />\r\n                        <InfoItem label=\"피트니스 센터\" value={data.fitness} />\r\n                        <InfoItem label=\"노래방\" value={data.karaoke} />\r\n                        <InfoItem label=\"공용 PC실\" value={data.publicpc} />\r\n                        <InfoItem label=\"사우나\" value={data.sauna} />\r\n                        <InfoItem label=\"공용샤워실\" value={data.publicbath} />\r\n                        <InfoItem label=\"바베큐\" value={data.barbecue} />\r\n                        <InfoItem label=\"캠프파이어\" value={data.campfire} />\r\n                        <InfoItem label=\"기타 시설\" value={data.subfacility} />\r\n                    </div>\r\n\r\n                    <h2 className={styles[\"h2-title\"]}>서비스</h2>\r\n                    <div className={styles[\"facility-list\"]}>\r\n                        <InfoItem label=\"주차\" value={data.parkinglodging} />\r\n                        <InfoItem label=\"픽업 서비스\" value={data.pickup} />\r\n                        <InfoItem label=\"객실내 취사\" value={data.chkcooking} />\r\n                    </div>\r\n\r\n                    {/* 숙소 위치 표시된 구글맵 */}\r\n                    <h2 className={styles[\"h2-title\"]}>숙소 위치</h2>\r\n                    <LocGoogleMap\r\n                        center={{\r\n                            lat: parseFloat(data.mapy),\r\n                            lng: parseFloat(data.mapx),\r\n                        }}\r\n                    />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StayDetail;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\stay\\stay-list\\StayList.js",["905"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport styles from \"./Stay.module.css\";\r\n\r\nimport StayItem from \"./StayItem\";\r\nimport Loading from \"../../../components/common/Loading\";\r\n\r\nconst StayList = () => {\r\n    const [data, setData] = useState(null);\r\n\r\n    // 뒷단에서 API 호출\r\n    const getData = async () => {\r\n        try {\r\n            const response = await axios.post(\"/api/stay/list\", {\r\n                contentId: \"list\",\r\n            });\r\n            const items = response.data;\r\n\r\n            //  이미지 없는 데이터 거름\r\n            const imageFilteredData = items.filter(\r\n                (item) => item.firstimage !== \"\"\r\n            );\r\n\r\n            // 제목 뒤의 부가설명 지움\r\n            const filteredData = imageFilteredData\r\n                .filter((item) => item.firstimage !== \"\")\r\n                .map((item) => {\r\n                    const startBracketIndex = item.title.indexOf(\"[\");\r\n                    const endBracketIndex = item.title.indexOf(\"]\");\r\n                    const modifiedTitle =\r\n                        startBracketIndex !== -1 && endBracketIndex !== -1\r\n                            ? item.title.substring(0, startBracketIndex)\r\n                            : item.title;\r\n                    const modifiedItem = {\r\n                        ...item,\r\n                        title: modifiedTitle.trim(),\r\n                    };\r\n                    return modifiedItem;\r\n                });\r\n\r\n            setData(filteredData);\r\n        } catch (error) {\r\n            console.log(\"Error occurred:\", error);\r\n        }\r\n    };\r\n\r\n    // getData 호출\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    if (!data) {\r\n        return <Loading />;\r\n    } else {\r\n        return (\r\n            <div className={styles[\"stay-page-wrapper\"]}>\r\n                <span className={styles[\"h1-wrapper\"]}>\r\n                    <h1 className={styles[\"stay-page-h1\"]}>숙박 정보</h1>\r\n                    <img\r\n                        className={styles[\"stay-page-h1-img\"]}\r\n                        src={`${process.env.PUBLIC_URL}/images/icon_stay.png`}\r\n                    />\r\n                </span>\r\n\r\n                <span className={styles[\"h2-wrapper\"]}>\r\n                    <h2 className={styles[\"stay-page-h2\"]}>\r\n                        즐거운 여행을 마무리할 숙소 정하기\r\n                    </h2>\r\n                </span>\r\n\r\n                <div className={styles[\"width-wrapper\"]}>\r\n                    {data.map((item, index) => (\r\n                        <StayItem key={item.contentid} item={item} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default StayList;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripstory\\tripstory-data\\TripStoryReducer.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\LoginByEmailButton.js",["906"],[],"import React from \"react\";\r\nimport styles from \"../../pages/login/LoginMain.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst LoginByEmailButton = () => {\r\n    return (\r\n        <div>\r\n            <div className={styles[\"email-login-button\"]}>\r\n                <Link to=\"/login/byEmail\">\r\n                    <button className={styles[\"email-button\"]}>\r\n                        <img\r\n                            className={styles[\"email-icon\"]}\r\n                            src={\r\n                                process.env.PUBLIC_URL + \"images/email-icon.png\"\r\n                            }\r\n                        />\r\n                        이메일로 로그인하기\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginByEmailButton;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\logout\\LogoutAll.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\login\\NaverLogin.js",["907","908"],[],"import React from \"react\";\r\nimport styles from \"../../pages/login/LoginMain.module.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NaverLogin = () => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        let naverLogin = new window.naver.LoginWithNaverId({\r\n            clientId: `${process.env.REACT_APP_NAVER_CLIENT_ID}`,\r\n            callbackUrl: `http://localhost:3000`,\r\n            loginButton: { color: \"white\", type: 4, height: \"45\" },\r\n        });\r\n        naverLogin.init();\r\n        // naverLogin.logout();\r\n        try {\r\n            naverLogin.getLoginStatus((status) => {\r\n                if (status) {\r\n                    console.log(naverLogin.user);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }, []);\r\n    //callback\r\n    useEffect(() => {\r\n        let code = new URL(window.location.href).searchParams.get(\"code\");\r\n        console.log(code);\r\n    });\r\n    return (\r\n        <div>\r\n            <li className={styles[\"naver-icon\"]} id=\"naverIdLogin\">\r\n                <img\r\n                    src={\r\n                        process.env.PUBLIC_URL +\r\n                        \"/images/auth_social_naver_round_btn.png\"\r\n                    }\r\n                ></img>\r\n            </li>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NaverLogin;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\tripschedule\\tripschedule2\\Calendar2.js",["909","910","911"],[],"import { addDays, differenceInCalendarDays, format } from \"date-fns\";\r\nimport { useState } from \"react\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport { Link } from 'react-router-dom'\r\nimport ko from 'date-fns/locale/ko'; // 한국어\r\nimport 'react-date-range/dist/styles.css'; // main css file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport styles from './Calendar2.module.css'; // import the CSS module\r\nimport FlightAroundTrip from \"../../flight/flight-search/FlightAroundTrip\";\r\n\r\nconst Calendar2 = ({ onClose, onDateSelect }, props) => {\r\n    const [state, setState] = useState({\r\n        startDate: new Date(),\r\n        endDate: addDays(new Date(), 1),\r\n        key: 'selection',\r\n\r\n    });\r\n    //캘린더 닫기\r\n    const [isOpen, setIsOpen] = useState(true); // 모달 열림 상태\r\n    const handleCloseClick = () => {\r\n        setIsOpen(false); // 모달 닫기\r\n    };\r\n\r\n    const handleSelectComplete = () => {\r\n        onDateSelect(state.startDate, state.endDate); // 선택 완료 시, 값을 부모 컴포넌트로 전달\r\n        onClose();\r\n        \r\n      };\r\n    return (\r\n        <>\r\n        {isOpen && ( // isOpen이 true일 때만 모달 표시\r\n          <div className={`${styles.tripScheduleAddModal} ${styles.small}`}>\r\n            <div className={styles.content}>\r\n              <div className={styles.tripScheduleAddModalClose} onClick={handleCloseClick}>\r\n                ✖️\r\n              </div>\r\n              <div className={styles.titleContainer}>\r\n                <h1 className={styles.title}>여행일정 등록</h1>\r\n                <h2 className={styles.subtitle}>일정에 따른 일기예보, 여행정보를 알려드립니다.</h2>\r\n              </div>\r\n              <div className={`${styles.calendarContainer}  ${styles.small}`}>\r\n                <div className={styles.dateRangeContainer}>\r\n                    <DateRange\r\n                        editableDateInputs={true}\r\n                        onChange={(item) => setState(item.selection)}\r\n                        moveRangeOnFirstSelection={false}\r\n                        ranges={[state]}\r\n                        months={2} // 2달\r\n                        direction='horizontal'\r\n                        rangeColors={['#c8c8c8']} // 선택 시, 색깔\r\n                        locale={ko} // 한국어\r\n                    />\r\n                </div>\r\n                \r\n                <div className={styles['trip-schedule-add-modal-select-complete']}>\r\n                    <button\r\n                        className={styles['trip-schedule-add-modal-select-complete-button']}\r\n                        onClick={handleSelectComplete}\r\n                    >\r\n                        선택완료 ({format(state.startDate, 'yyyy-MM-dd')} ~ {format(state.endDate, 'yyyy-MM-dd')})\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n        </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default Calendar2;\r\n","C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\components\\common\\Loading.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\bus\\bus-search\\BusSchedule.js",[],[],"C:\\MSGS\\MSGS\\src\\main\\webapp\\src\\pages\\stay\\stay-list\\StayItem.js",["912","913"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styles from \"./Stay.module.css\";\r\n\r\nconst StayItem = (props) => {\r\n    const item = props.item;\r\n    const [isImageExist, setIsImageExist] = useState(true);\r\n\r\n    // 이미지 엑박 뜰 경우 로고로 대체\r\n    const imgErrorHandler = (event) => {\r\n        event.target.src = `${process.env.PUBLIC_URL}/images/common/msgs_logo_margin.png`;\r\n        event.target.style.width = \"32rem\";\r\n        setIsImageExist(false);\r\n    };\r\n\r\n    // 너무 긴 제목 축약\r\n    const shortedTitle =\r\n        item.title.length > 12\r\n            ? item.title.substring(0, 12) + \"...\"\r\n            : item.title;\r\n\r\n    // // 다음 페이지로 데이터 보냄\r\n    // const navigate = useNavigate();\r\n    // const convey = () => {\r\n    //     navigate(`/staydetail/${item.contentid}`, {\r\n    //         state: {\r\n    //             title: item.title,\r\n    //             mapX: item.mapx,\r\n    //             mapY: item.mapy,\r\n    //             // 상세페이지에서 이미지 있을 때만 출력하도록 조건 걸어줌\r\n    //             firstImage: isImageExist ? item.firstimage : false,\r\n    //         },\r\n    //     });\r\n    // };\r\n\r\n    return (\r\n        <Link to={`/staydetail/${item.contentid}`}>\r\n            <div className={styles[\"stay-item\"]}>\r\n                <img\r\n                    className={styles[\"thumbnail-img\"]}\r\n                    src={item.firstimage}\r\n                    onError={imgErrorHandler}\r\n                    alt={item.title}\r\n                />\r\n\r\n                <div className={styles[\"text-area\"]}>\r\n                    <h3 className={styles[\"stay-title\"]}>{shortedTitle}</h3>\r\n                    <p className={styles[\"stay-addr\"]}>{item.addr1}</p>\r\n                    <p className={styles[\"stay-tel\"]}>{item.tel}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default StayItem;\r\n",{"ruleId":"914","severity":1,"message":"915","line":4,"column":10,"nodeType":"916","messageId":"917","endLine":4,"endColumn":28},{"ruleId":"914","severity":1,"message":"918","line":41,"column":8,"nodeType":"916","messageId":"917","endLine":41,"endColumn":18},{"ruleId":"914","severity":1,"message":"919","line":16,"column":10,"nodeType":"916","messageId":"917","endLine":16,"endColumn":18},{"ruleId":"914","severity":1,"message":"920","line":44,"column":11,"nodeType":"916","messageId":"917","endLine":44,"endColumn":19},{"ruleId":"914","severity":1,"message":"921","line":45,"column":11,"nodeType":"916","messageId":"917","endLine":45,"endColumn":20},{"ruleId":"914","severity":1,"message":"922","line":49,"column":10,"nodeType":"916","messageId":"917","endLine":49,"endColumn":23},{"ruleId":"914","severity":1,"message":"923","line":62,"column":10,"nodeType":"916","messageId":"917","endLine":62,"endColumn":23},{"ruleId":"924","severity":1,"message":"925","line":197,"column":32,"nodeType":"926","messageId":"927","endLine":197,"endColumn":34},{"ruleId":"928","severity":1,"message":"929","line":202,"column":7,"nodeType":"930","endLine":202,"endColumn":17,"suggestions":"931"},{"ruleId":"914","severity":1,"message":"932","line":3,"column":10,"nodeType":"916","messageId":"917","endLine":3,"endColumn":14},{"ruleId":"914","severity":1,"message":"933","line":10,"column":11,"nodeType":"916","messageId":"917","endLine":10,"endColumn":19},{"ruleId":"934","severity":1,"message":"935","line":21,"column":21,"nodeType":"936","endLine":26,"endColumn":22},{"ruleId":"937","severity":1,"message":"938","line":36,"column":17,"nodeType":"936","endLine":36,"endColumn":28},{"ruleId":"937","severity":1,"message":"938","line":37,"column":17,"nodeType":"936","endLine":37,"endColumn":28},{"ruleId":"937","severity":1,"message":"938","line":39,"column":21,"nodeType":"936","endLine":39,"endColumn":32},{"ruleId":"914","severity":1,"message":"939","line":1,"column":17,"nodeType":"916","messageId":"917","endLine":1,"endColumn":26},{"ruleId":"934","severity":1,"message":"935","line":40,"column":21,"nodeType":"936","endLine":45,"endColumn":23},{"ruleId":"914","severity":1,"message":"940","line":2,"column":10,"nodeType":"916","messageId":"917","endLine":2,"endColumn":25},{"ruleId":"914","severity":1,"message":"941","line":3,"column":10,"nodeType":"916","messageId":"917","endLine":3,"endColumn":17},{"ruleId":"914","severity":1,"message":"942","line":7,"column":8,"nodeType":"916","messageId":"917","endLine":7,"endColumn":26},{"ruleId":"914","severity":1,"message":"943","line":15,"column":10,"nodeType":"916","messageId":"917","endLine":15,"endColumn":27},{"ruleId":"914","severity":1,"message":"944","line":15,"column":29,"nodeType":"916","messageId":"917","endLine":15,"endColumn":49},{"ruleId":"928","severity":1,"message":"945","line":107,"column":6,"nodeType":"930","endLine":107,"endColumn":35,"suggestions":"946"},{"ruleId":"914","severity":1,"message":"939","line":1,"column":27,"nodeType":"916","messageId":"917","endLine":1,"endColumn":36},{"ruleId":"914","severity":1,"message":"947","line":2,"column":10,"nodeType":"916","messageId":"917","endLine":2,"endColumn":20},{"ruleId":"914","severity":1,"message":"948","line":6,"column":10,"nodeType":"916","messageId":"917","endLine":6,"endColumn":30},{"ruleId":"914","severity":1,"message":"949","line":7,"column":29,"nodeType":"916","messageId":"917","endLine":7,"endColumn":49},{"ruleId":"914","severity":1,"message":"939","line":1,"column":27,"nodeType":"916","messageId":"917","endLine":1,"endColumn":36},{"ruleId":"928","severity":1,"message":"950","line":23,"column":6,"nodeType":"930","endLine":23,"endColumn":42,"suggestions":"951"},{"ruleId":"914","severity":1,"message":"952","line":3,"column":10,"nodeType":"916","messageId":"917","endLine":3,"endColumn":21},{"ruleId":"914","severity":1,"message":"953","line":3,"column":8,"nodeType":"916","messageId":"917","endLine":3,"endColumn":24},{"ruleId":"914","severity":1,"message":"954","line":11,"column":12,"nodeType":"916","messageId":"917","endLine":11,"endColumn":32},{"ruleId":"914","severity":1,"message":"955","line":12,"column":12,"nodeType":"916","messageId":"917","endLine":12,"endColumn":30},{"ruleId":"914","severity":1,"message":"956","line":13,"column":12,"nodeType":"916","messageId":"917","endLine":13,"endColumn":34},{"ruleId":"914","severity":1,"message":"957","line":16,"column":12,"nodeType":"916","messageId":"917","endLine":16,"endColumn":26},{"ruleId":"914","severity":1,"message":"958","line":49,"column":11,"nodeType":"916","messageId":"917","endLine":49,"endColumn":37},{"ruleId":"914","severity":1,"message":"959","line":52,"column":11,"nodeType":"916","messageId":"917","endLine":52,"endColumn":35},{"ruleId":"914","severity":1,"message":"960","line":55,"column":11,"nodeType":"916","messageId":"917","endLine":55,"endColumn":38},{"ruleId":"914","severity":1,"message":"961","line":65,"column":11,"nodeType":"916","messageId":"917","endLine":65,"endColumn":29},{"ruleId":"914","severity":1,"message":"962","line":69,"column":11,"nodeType":"916","messageId":"917","endLine":69,"endColumn":27},{"ruleId":"914","severity":1,"message":"963","line":74,"column":11,"nodeType":"916","messageId":"917","endLine":74,"endColumn":32},{"ruleId":"914","severity":1,"message":"964","line":79,"column":11,"nodeType":"916","messageId":"917","endLine":79,"endColumn":30},{"ruleId":"914","severity":1,"message":"965","line":85,"column":11,"nodeType":"916","messageId":"917","endLine":85,"endColumn":26},{"ruleId":"914","severity":1,"message":"966","line":88,"column":11,"nodeType":"916","messageId":"917","endLine":88,"endColumn":26},{"ruleId":"914","severity":1,"message":"967","line":91,"column":11,"nodeType":"916","messageId":"917","endLine":91,"endColumn":27},{"ruleId":"914","severity":1,"message":"968","line":94,"column":11,"nodeType":"916","messageId":"917","endLine":94,"endColumn":27},{"ruleId":"914","severity":1,"message":"969","line":97,"column":11,"nodeType":"916","messageId":"917","endLine":97,"endColumn":26},{"ruleId":"914","severity":1,"message":"970","line":100,"column":11,"nodeType":"916","messageId":"917","endLine":100,"endColumn":26},{"ruleId":"914","severity":1,"message":"971","line":104,"column":11,"nodeType":"916","messageId":"917","endLine":104,"endColumn":27},{"ruleId":"914","severity":1,"message":"972","line":107,"column":11,"nodeType":"916","messageId":"917","endLine":107,"endColumn":27},{"ruleId":"914","severity":1,"message":"973","line":110,"column":11,"nodeType":"916","messageId":"917","endLine":110,"endColumn":27},{"ruleId":"914","severity":1,"message":"974","line":113,"column":11,"nodeType":"916","messageId":"917","endLine":113,"endColumn":27},{"ruleId":"914","severity":1,"message":"975","line":12,"column":23,"nodeType":"916","messageId":"917","endLine":12,"endColumn":34},{"ruleId":"928","severity":1,"message":"976","line":43,"column":8,"nodeType":"930","endLine":43,"endColumn":10,"suggestions":"977"},{"ruleId":"934","severity":1,"message":"935","line":18,"column":17,"nodeType":"936","endLine":18,"endColumn":77},{"ruleId":"937","severity":1,"message":"938","line":24,"column":25,"nodeType":"936","endLine":24,"endColumn":36},{"ruleId":"934","severity":1,"message":"935","line":26,"column":29,"nodeType":"936","endLine":26,"endColumn":59},{"ruleId":"937","severity":1,"message":"938","line":28,"column":25,"nodeType":"936","endLine":28,"endColumn":36},{"ruleId":"934","severity":1,"message":"935","line":30,"column":29,"nodeType":"936","endLine":30,"endColumn":59},{"ruleId":"914","severity":1,"message":"978","line":4,"column":8,"nodeType":"916","messageId":"917","endLine":4,"endColumn":19},{"ruleId":"914","severity":1,"message":"979","line":6,"column":8,"nodeType":"916","messageId":"917","endLine":6,"endColumn":18},{"ruleId":"980","severity":1,"message":"981","line":13,"column":21,"nodeType":"936","messageId":"982","endLine":13,"endColumn":42},{"ruleId":"980","severity":1,"message":"983","line":14,"column":21,"nodeType":"936","messageId":"982","endLine":14,"endColumn":42},{"ruleId":"914","severity":1,"message":"984","line":1,"column":17,"nodeType":"916","messageId":"917","endLine":1,"endColumn":25},{"ruleId":"914","severity":1,"message":"985","line":2,"column":10,"nodeType":"916","messageId":"917","endLine":2,"endColumn":18},{"ruleId":"914","severity":1,"message":"986","line":3,"column":8,"nodeType":"916","messageId":"917","endLine":3,"endColumn":13},{"ruleId":"914","severity":1,"message":"987","line":5,"column":10,"nodeType":"916","messageId":"917","endLine":5,"endColumn":21},{"ruleId":"928","severity":1,"message":"950","line":33,"column":8,"nodeType":"930","endLine":33,"endColumn":10,"suggestions":"988"},{"ruleId":"928","severity":1,"message":"950","line":41,"column":8,"nodeType":"930","endLine":41,"endColumn":16,"suggestions":"989"},{"ruleId":"914","severity":1,"message":"990","line":14,"column":8,"nodeType":"916","messageId":"917","endLine":14,"endColumn":18},{"ruleId":"914","severity":1,"message":"991","line":24,"column":21,"nodeType":"916","messageId":"917","endLine":24,"endColumn":34},{"ruleId":"914","severity":1,"message":"939","line":1,"column":27,"nodeType":"916","messageId":"917","endLine":1,"endColumn":36},{"ruleId":"914","severity":1,"message":"992","line":1,"column":41,"nodeType":"916","messageId":"917","endLine":1,"endColumn":47},{"ruleId":"914","severity":1,"message":"993","line":4,"column":8,"nodeType":"916","messageId":"917","endLine":4,"endColumn":12},{"ruleId":"928","severity":1,"message":"994","line":73,"column":6,"nodeType":"930","endLine":73,"endColumn":19,"suggestions":"995"},{"ruleId":"914","severity":1,"message":"996","line":82,"column":10,"nodeType":"916","messageId":"917","endLine":82,"endColumn":13},{"ruleId":"928","severity":1,"message":"997","line":105,"column":5,"nodeType":"930","endLine":105,"endColumn":18,"suggestions":"998"},{"ruleId":"928","severity":1,"message":"999","line":133,"column":4,"nodeType":"930","endLine":133,"endColumn":25,"suggestions":"1000"},{"ruleId":"928","severity":1,"message":"1001","line":19,"column":7,"nodeType":"930","endLine":19,"endColumn":17,"suggestions":"1002"},{"ruleId":"1003","severity":1,"message":"1004","line":54,"column":61,"nodeType":"1005","messageId":"1006","endLine":54,"endColumn":63},{"ruleId":"914","severity":1,"message":"1007","line":1,"column":17,"nodeType":"916","messageId":"917","endLine":1,"endColumn":27},{"ruleId":"914","severity":1,"message":"1008","line":5,"column":8,"nodeType":"916","messageId":"917","endLine":5,"endColumn":21},{"ruleId":"914","severity":1,"message":"1009","line":19,"column":9,"nodeType":"916","messageId":"917","endLine":19,"endColumn":27},{"ruleId":"914","severity":1,"message":"1010","line":20,"column":9,"nodeType":"916","messageId":"917","endLine":20,"endColumn":25},{"ruleId":"914","severity":1,"message":"1011","line":5,"column":10,"nodeType":"916","messageId":"917","endLine":5,"endColumn":21},{"ruleId":"928","severity":1,"message":"1012","line":23,"column":8,"nodeType":"930","endLine":23,"endColumn":10,"suggestions":"1013"},{"ruleId":"914","severity":1,"message":"939","line":1,"column":27,"nodeType":"916","messageId":"917","endLine":1,"endColumn":36},{"ruleId":"914","severity":1,"message":"992","line":1,"column":38,"nodeType":"916","messageId":"917","endLine":1,"endColumn":44},{"ruleId":"914","severity":1,"message":"953","line":4,"column":8,"nodeType":"916","messageId":"917","endLine":4,"endColumn":24},{"ruleId":"914","severity":1,"message":"939","line":1,"column":17,"nodeType":"916","messageId":"917","endLine":1,"endColumn":26},{"ruleId":"914","severity":1,"message":"1007","line":1,"column":28,"nodeType":"916","messageId":"917","endLine":1,"endColumn":38},{"ruleId":"914","severity":1,"message":"984","line":1,"column":40,"nodeType":"916","messageId":"917","endLine":1,"endColumn":48},{"ruleId":"914","severity":1,"message":"984","line":1,"column":17,"nodeType":"916","messageId":"917","endLine":1,"endColumn":25},{"ruleId":"914","severity":1,"message":"1007","line":1,"column":28,"nodeType":"916","messageId":"917","endLine":1,"endColumn":38},{"ruleId":"914","severity":1,"message":"1014","line":3,"column":10,"nodeType":"916","messageId":"917","endLine":3,"endColumn":24},{"ruleId":"914","severity":1,"message":"986","line":4,"column":8,"nodeType":"916","messageId":"917","endLine":4,"endColumn":13},{"ruleId":"914","severity":1,"message":"986","line":2,"column":8,"nodeType":"916","messageId":"917","endLine":2,"endColumn":13},{"ruleId":"928","severity":1,"message":"1015","line":38,"column":6,"nodeType":"930","endLine":38,"endColumn":8,"suggestions":"1016"},{"ruleId":"914","severity":1,"message":"1017","line":7,"column":11,"nodeType":"916","messageId":"917","endLine":7,"endColumn":19},{"ruleId":"934","severity":1,"message":"935","line":28,"column":17,"nodeType":"936","endLine":33,"endColumn":18},{"ruleId":"914","severity":1,"message":"986","line":1,"column":8,"nodeType":"916","messageId":"917","endLine":1,"endColumn":13},{"ruleId":"914","severity":1,"message":"939","line":2,"column":17,"nodeType":"916","messageId":"917","endLine":2,"endColumn":26},{"ruleId":"914","severity":1,"message":"1018","line":4,"column":8,"nodeType":"916","messageId":"917","endLine":4,"endColumn":21},{"ruleId":"914","severity":1,"message":"1019","line":9,"column":12,"nodeType":"916","messageId":"917","endLine":9,"endColumn":26},{"ruleId":"914","severity":1,"message":"1020","line":11,"column":11,"nodeType":"916","messageId":"917","endLine":11,"endColumn":20},{"ruleId":"934","severity":1,"message":"935","line":78,"column":17,"nodeType":"936","endLine":84,"endColumn":18},{"ruleId":"914","severity":1,"message":"939","line":5,"column":10,"nodeType":"916","messageId":"917","endLine":5,"endColumn":19},{"ruleId":"914","severity":1,"message":"1021","line":20,"column":11,"nodeType":"916","messageId":"917","endLine":20,"endColumn":28},{"ruleId":"934","severity":1,"message":"935","line":42,"column":21,"nodeType":"936","endLine":45,"endColumn":23},{"ruleId":"934","severity":1,"message":"935","line":17,"column":25,"nodeType":"936","endLine":17,"endColumn":47},{"ruleId":"937","severity":1,"message":"938","line":32,"column":29,"nodeType":"936","endLine":32,"endColumn":40},{"ruleId":"934","severity":1,"message":"935","line":33,"column":33,"nodeType":"936","endLine":33,"endColumn":107},{"ruleId":"934","severity":1,"message":"935","line":13,"column":17,"nodeType":"936","endLine":13,"endColumn":75},{"ruleId":"914","severity":1,"message":"1022","line":3,"column":10,"nodeType":"916","messageId":"917","endLine":3,"endColumn":25},{"ruleId":"934","severity":1,"message":"935","line":37,"column":29,"nodeType":"936","endLine":37,"endColumn":103},{"ruleId":"934","severity":1,"message":"935","line":40,"column":29,"nodeType":"936","endLine":40,"endColumn":106},{"ruleId":"914","severity":1,"message":"1023","line":2,"column":10,"nodeType":"916","messageId":"917","endLine":2,"endColumn":18},{"ruleId":"934","severity":1,"message":"935","line":10,"column":13,"nodeType":"936","endLine":11,"endColumn":52},{"ruleId":"914","severity":1,"message":"984","line":1,"column":17,"nodeType":"916","messageId":"917","endLine":1,"endColumn":25},{"ruleId":"914","severity":1,"message":"939","line":1,"column":27,"nodeType":"916","messageId":"917","endLine":1,"endColumn":36},{"ruleId":"914","severity":1,"message":"932","line":2,"column":10,"nodeType":"916","messageId":"917","endLine":2,"endColumn":14},{"ruleId":"914","severity":1,"message":"1024","line":2,"column":10,"nodeType":"916","messageId":"917","endLine":2,"endColumn":19},{"ruleId":"914","severity":1,"message":"1025","line":2,"column":21,"nodeType":"916","messageId":"917","endLine":2,"endColumn":35},{"ruleId":"914","severity":1,"message":"1026","line":4,"column":7,"nodeType":"916","messageId":"917","endLine":4,"endColumn":13},{"ruleId":"914","severity":1,"message":"984","line":1,"column":17,"nodeType":"916","messageId":"917","endLine":1,"endColumn":25},{"ruleId":"914","severity":1,"message":"1027","line":2,"column":8,"nodeType":"916","messageId":"917","endLine":2,"endColumn":16},{"ruleId":"914","severity":1,"message":"975","line":3,"column":10,"nodeType":"916","messageId":"917","endLine":3,"endColumn":21},{"ruleId":"914","severity":1,"message":"939","line":1,"column":17,"nodeType":"916","messageId":"917","endLine":1,"endColumn":26},{"ruleId":"914","severity":1,"message":"984","line":1,"column":28,"nodeType":"916","messageId":"917","endLine":1,"endColumn":36},{"ruleId":"914","severity":1,"message":"1011","line":5,"column":10,"nodeType":"916","messageId":"917","endLine":5,"endColumn":21},{"ruleId":"914","severity":1,"message":"1028","line":6,"column":10,"nodeType":"916","messageId":"917","endLine":6,"endColumn":26},{"ruleId":"914","severity":1,"message":"996","line":19,"column":12,"nodeType":"916","messageId":"917","endLine":19,"endColumn":15},{"ruleId":"928","severity":1,"message":"1029","line":33,"column":8,"nodeType":"930","endLine":33,"endColumn":10,"suggestions":"1030"},{"ruleId":"934","severity":1,"message":"935","line":24,"column":17,"nodeType":"936","endLine":24,"endColumn":24},{"ruleId":"937","severity":1,"message":"938","line":7,"column":9,"nodeType":"936","endLine":7,"endColumn":53},{"ruleId":"934","severity":1,"message":"935","line":12,"column":17,"nodeType":"936","endLine":12,"endColumn":47},{"ruleId":"937","severity":1,"message":"938","line":7,"column":9,"nodeType":"936","endLine":7,"endColumn":59},{"ruleId":"934","severity":1,"message":"935","line":9,"column":17,"nodeType":"936","endLine":9,"endColumn":57},{"ruleId":"934","severity":1,"message":"935","line":19,"column":13,"nodeType":"936","endLine":19,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":8,"column":13,"nodeType":"936","endLine":11,"endColumn":15},{"ruleId":"928","severity":1,"message":"1031","line":38,"column":4,"nodeType":"930","endLine":38,"endColumn":12,"suggestions":"1032"},{"ruleId":"914","severity":1,"message":"1033","line":91,"column":7,"nodeType":"916","messageId":"917","endLine":91,"endColumn":17},{"ruleId":"928","severity":1,"message":"1034","line":19,"column":4,"nodeType":"930","endLine":19,"endColumn":6,"suggestions":"1035"},{"ruleId":"934","severity":1,"message":"935","line":42,"column":21,"nodeType":"936","endLine":44,"endColumn":23},{"ruleId":"937","severity":1,"message":"938","line":7,"column":9,"nodeType":"936","endLine":7,"endColumn":54},{"ruleId":"934","severity":1,"message":"935","line":8,"column":13,"nodeType":"936","endLine":8,"endColumn":20},{"ruleId":"937","severity":1,"message":"938","line":7,"column":9,"nodeType":"936","endLine":7,"endColumn":57},{"ruleId":"934","severity":1,"message":"935","line":8,"column":13,"nodeType":"936","endLine":8,"endColumn":56},{"ruleId":"1036","severity":1,"message":"1037","line":8,"column":13,"nodeType":"936","endLine":8,"endColumn":64},{"ruleId":"914","severity":1,"message":"1038","line":2,"column":8,"nodeType":"916","messageId":"917","endLine":2,"endColumn":22},{"ruleId":"934","severity":1,"message":"935","line":16,"column":17,"nodeType":"936","endLine":16,"endColumn":81},{"ruleId":"914","severity":1,"message":"1039","line":6,"column":8,"nodeType":"916","messageId":"917","endLine":6,"endColumn":23},{"ruleId":"924","severity":1,"message":"925","line":78,"column":75,"nodeType":"926","messageId":"927","endLine":78,"endColumn":77},{"ruleId":"1036","severity":1,"message":"1037","line":82,"column":49,"nodeType":"936","endLine":87,"endColumn":55},{"ruleId":"934","severity":1,"message":"935","line":100,"column":25,"nodeType":"936","endLine":103,"endColumn":27},{"ruleId":"1036","severity":1,"message":"1037","line":9,"column":13,"nodeType":"936","endLine":14,"endColumn":19},{"ruleId":"914","severity":1,"message":"1038","line":4,"column":8,"nodeType":"916","messageId":"917","endLine":4,"endColumn":22},{"ruleId":"914","severity":1,"message":"1040","line":1,"column":10,"nodeType":"916","messageId":"917","endLine":1,"endColumn":27},{"ruleId":"914","severity":1,"message":"1041","line":8,"column":29,"nodeType":"916","messageId":"917","endLine":8,"endColumn":47},{"ruleId":"928","severity":1,"message":"1042","line":31,"column":8,"nodeType":"930","endLine":31,"endColumn":10,"suggestions":"1043"},{"ruleId":"934","severity":1,"message":"935","line":60,"column":21,"nodeType":"936","endLine":63,"endColumn":23},{"ruleId":"934","severity":1,"message":"935","line":10,"column":25,"nodeType":"936","endLine":15,"endColumn":27},{"ruleId":"914","severity":1,"message":"1017","line":7,"column":11,"nodeType":"916","messageId":"917","endLine":7,"endColumn":19},{"ruleId":"934","severity":1,"message":"935","line":34,"column":17,"nodeType":"936","endLine":39,"endColumn":18},{"ruleId":"914","severity":1,"message":"1044","line":1,"column":19,"nodeType":"916","messageId":"917","endLine":1,"endColumn":43},{"ruleId":"914","severity":1,"message":"932","line":4,"column":10,"nodeType":"916","messageId":"917","endLine":4,"endColumn":14},{"ruleId":"914","severity":1,"message":"953","line":9,"column":8,"nodeType":"916","messageId":"917","endLine":9,"endColumn":24},{"ruleId":"914","severity":1,"message":"987","line":2,"column":16,"nodeType":"916","messageId":"917","endLine":2,"endColumn":27},{"ruleId":"914","severity":1,"message":"1045","line":7,"column":12,"nodeType":"916","messageId":"917","endLine":7,"endColumn":24},"no-unused-vars","'ReactQueryDevtools' is defined but never used.","Identifier","unusedVar","'TempSignUp' is defined but never used.","'location' is assigned a value but never used.","'dormInfo' is assigned a value but never used.","'placeInfo' is assigned a value but never used.","'selectedCity1' is assigned a value but never used.","'contentTypeId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dateList'. Either include it or remove the dependency array.","ArrayExpression",["1046"],"'Link' is defined but never used.","'naviagte' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCheck' is defined but never used.","'NonMemberResSearch' is defined but never used.","'isPasswordMatched' is assigned a value but never used.","'setIsPasswordMatched' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dplChkEmailHandler' and 'timer'. Either include them or remove the dependency array.",["1047"],"'useHistory' is defined but never used.","'isPhoneNumberFocused' is assigned a value but never used.","'setIsAuthCodeEntered' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["1048"],"'useLocation' is defined but never used.","'FlightAroundTrip' is defined but never used.","'showFromFlightSelect' is assigned a value but never used.","'showToFlightSelect' is assigned a value but never used.","'showBoardingInfoSelect' is assigned a value but never used.","'showFlightList' is assigned a value but never used.","'selectedFromAirportHandler' is assigned a value but never used.","'selectedToAirportHandler' is assigned a value but never used.","'selectedBoardingInfoHandler' is assigned a value but never used.","'fromAirportHandler' is assigned a value but never used.","'toAirportHandler' is assigned a value but never used.","'fromAirportHandlerKor' is assigned a value but never used.","'toAirportHandlerKor' is assigned a value but never used.","'addAdultHandler' is assigned a value but never used.","'subAdultHandler' is assigned a value but never used.","'addInfantHandler' is assigned a value but never used.","'subInfantHandler' is assigned a value but never used.","'addChildHandler' is assigned a value but never used.","'subChildHandler' is assigned a value but never used.","'CheckImgHandlerN' is assigned a value but never used.","'CheckImgHandlerP' is assigned a value but never used.","'CheckImgHandlerB' is assigned a value but never used.","'CheckImgHandlerF' is assigned a value but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'dayBtn' and 'dispatch'. Either include them or remove the dependency array.",["1049"],"'LogoutModal' is defined but never used.","'NaverLogin' is defined but never used.","react/jsx-pascal-case","Imported JSX component KakaoLogin_social must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component NaverLogin_social must be in PascalCase or SCREAMING_SNAKE_CASE","'useState' is defined but never used.","'useQuery' is defined but never used.","'axios' is defined but never used.","'useNavigate' is defined but never used.",["1050"],["1051"],"'sampleData' is assigned a value but never used.","'setCitiesData' is assigned a value but never used.","'useRef' is defined but never used.","'data' is defined but never used.","React Hook useEffect has a missing dependency: 'planList'. Either include it or remove the dependency array.",["1052"],"'map' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'center' and 'polyline'. Either include them or remove the dependency array.",["1053"],"React Hook useEffect has a missing dependency: 'mapComponent'. Either include it or remove the dependency array.",["1054"],"React Hook useEffect has a missing dependency: 'selectedDay'. Either include it or remove the dependency array.",["1055"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useReducer' is defined but never used.","'TripSchedule2' is defined but never used.","'formattedStartDate' is assigned a value but never used.","'formattedEndDate' is assigned a value but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'tripStoryData.rating'. Either include it or remove the dependency array.",["1056"],"'useGoogleLogin' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1057"],"'navigate' is assigned a value but never used.","'KaKaoCallback' is defined but never used.","'kakaoLoginInfo' is assigned a value but never used.","'kakaoInfo' is assigned a value but never used.","'tripDaySpotDetail' is assigned a value but never used.","'useSearchParams' is defined but never used.","'FaSearch' is defined but never used.","'GoogleMap' is defined but never used.","'useJsApiLoader' is defined but never used.","'center' is assigned a value but never used.","'SpotItem' is defined but never used.","'tripStoryActions' is defined but never used.","React Hook React.useCallback has a missing dependency: 'center'. Either include it or remove the dependency array.",["1058"],"React Hook useEffect has a missing dependency: 'initRating'. Either include it or remove the dependency array.",["1059"],"'RatingText' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'check', 'tripDayDetail.img', and 'tripStoryData.img'. Either include them or remove the dependency array.",["1060"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'UploadStoryBtn' is defined but never used.","'UploadPhotoList' is defined but never used.","'autoBatchEnhancer' is defined but never used.","'setConfirmPassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'contentId'. Either include it or remove the dependency array.",["1061"],"'differenceInCalendarDays' is defined but never used.","'isImageExist' is assigned a value but never used.",{"desc":"1062","fix":"1063"},{"desc":"1064","fix":"1065"},{"desc":"1066","fix":"1067"},{"desc":"1068","fix":"1069"},{"desc":"1070","fix":"1071"},{"desc":"1072","fix":"1073"},{"desc":"1074","fix":"1075"},{"desc":"1076","fix":"1077"},{"desc":"1078","fix":"1079"},{"desc":"1074","fix":"1080"},{"desc":"1081","fix":"1082"},{"desc":"1083","fix":"1084"},{"desc":"1085","fix":"1086"},{"desc":"1087","fix":"1088"},{"desc":"1089","fix":"1090"},{"desc":"1091","fix":"1092"},"Update the dependencies array to be: [dateList, winReady]",{"range":"1093","text":"1094"},"Update the dependencies array to be: [validateEmail, enteredEmail, timer, dplChkEmailHandler]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [getData, props.fromAirport, props.toAirport]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [dayBtn, dispatch]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [getData]",{"range":"1101","text":"1102"},"Update the dependencies array to be: [getData, inView]",{"range":"1103","text":"1104"},"Update the dependencies array to be: [planList, selectedDay]",{"range":"1105","text":"1106"},"Update the dependencies array to be: [center, polyline]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [selectedDay, center, mapComponent]",{"range":"1109","text":"1110"},{"range":"1111","text":"1106"},"Update the dependencies array to be: [tripStoryData.rating]",{"range":"1112","text":"1113"},"Update the dependencies array to be: [props]",{"range":"1114","text":"1115"},"Update the dependencies array to be: [center]",{"range":"1116","text":"1117"},"Update the dependencies array to be: [initRating, rating]",{"range":"1118","text":"1119"},"Update the dependencies array to be: [check, tripDayDetail.img, tripStoryData.img]",{"range":"1120","text":"1121"},"Update the dependencies array to be: [contentId]",{"range":"1122","text":"1123"},[7450,7460],"[dateList, winReady]",[3301,3330],"[validateEmail, enteredEmail, timer, dplChkEmailHandler]",[971,1007],"[getData, props.fromAirport, props.toAirport]",[1695,1697],"[dayBtn, dispatch]",[1291,1293],"[getData]",[1459,1467],"[getData, inView]",[2077,2090],"[planList, selectedDay]",[2955,2968],"[center, polyline]",[3627,3648],"[selectedDay, center, mapComponent]",[877,887],[732,734],"[tripStoryData.rating]",[1124,1126],"[props]",[1077,1079],"[center]",[795,803],"[initRating, rating]",[786,788],"[check, tripDayDetail.img, tripStoryData.img]",[911,913],"[contentId]"]